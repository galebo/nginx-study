<map version="0.9.0">
<!-- To view this file, download free mind mapping software FreeMind from http://freemind.sourceforge.net -->
<node CREATED="1388815008672" ID="ID_1661860605" MODIFIED="1389081314849" TEXT="nginx">
<node CREATED="1389073579240" ID="ID_1555788488" MODIFIED="1389073587378" POSITION="right" TEXT="&#x611f;&#x8c22;">
<node CREATED="1389073591719" ID="ID_687146059" LINK="http://blog.csdn.net/kenbinzhang?viewmode=contents " MODIFIED="1389073624444" TEXT="&#x5543;&#x997c;&#x7684;&#x6280;&#x672f;&#x535a;&#x5ba2;"/>
</node>
<<<<<<< HEAD
<node CREATED="1388930950170" ID="ID_222620954" MODIFIED="1389097805993" POSITION="right" TEXT="main">
=======
<node CREATED="1388930950170" FOLDED="true" ID="ID_222620954" MODIFIED="1389088110808" POSITION="right" TEXT="main">
>>>>>>> branch 'master' of https://github.com/galebo/nginx-study.git
<node CREATED="1388930885650" FOLDED="true" ID="ID_268826914" LINK="http://blog.csdn.net/kenbinzhang/article/details/4681694" MODIFIED="1389070124192" TEXT="&#x6e90;&#x7801;&#x5206;&#x6790;">
<node CREATED="1388930898050" ID="ID_1909026922" MODIFIED="1388930910629" TEXT="main&#x51fd;&#x6570;&#x7684;&#x5904;&#x7406;&#x8fc7;&#x7a0b;&#x53ef;&#x4ee5;&#x5206;&#x4e3a;&#x4ee5;&#x4e0b;&#x6b65;&#x9aa4;&#xff1a;&#xa;&#xa;1&#x3001;&#x4ece;&#x63a7;&#x5236;&#x53f0;&#x83b7;&#x53d6;&#x53c2;&#x6570;&#x5e76;&#x5904;&#x7406;:ngx_get_options(argc, argv)&#xff1b;&#xa;&#xa;2&#x3001;&#x7b80;&#x5355;&#x521d;&#x59cb;&#x5316;&#xff0c;&#x521d;&#x59cb;&#x5316;&#x4e00;&#x4e9b;&#x6570;&#x636e;&#x7ed3;&#x6784;&#x548c;&#x6a21;&#x5757;:ngx_debug_init(),ngx_time_init(),ngx_regex_init(),ngx_log_init(),ngx_ssl_init()&#xff1b;&#xa;&#xa;3&#x3001;&#x521d;&#x59cb;&#x5316;&#x5c40;&#x90e8;&#x7684;ngx_cycle_t init_cycle&#x7ed3;&#x6784;&#x4f53;&#x53d8;&#x91cf;:&#xa;    ngx_memzero(&amp;init_cycle, sizeof(ngx_cycle_t));&#xa;    init_cycle.log = log;&#xa;    ngx_cycle = &amp;init_cycle;&#xa;&#xa;    init_cycle.pool = ngx_create_pool(1024, log);&#xa;    if (init_cycle.pool == NULL) {&#xa;        return 1;&#xa;    }    &#xa;&#xa;4&#x3001;&#x4fdd;&#x5b58;&#x53c2;&#x6570;&#xff0c;&#x8bbe;&#x7f6e;&#x51e0;&#x4e2a;&#x5168;&#x5c40;&#x53d8;&#x91cf;&#xff1a;ngx_argc,ngx_os_argv,ngx_argv,ngx_os_environ&#xff1b;&#xa;&#xa;5&#x3001;&#x8c03;&#x7528;ngx_process_options&#xff0c;&#x8bbe;&#x7f6e;init_cycle&#x7684;&#x4e00;&#x4e9b;&#x5b57;&#x6bb5;&#xff0c;&#x8fd9;&#x4e9b;&#x5b57;&#x6bb5;&#x662f;&#x4ece;&#x63a7;&#x5236;&#x53f0;&#x7684;&#x547d;&#x4ee4;&#x4e2d;&#x53d6;&#x5f97;&#x7684;&#xff1a;conf_prefix&#xff08;config prefix path&#xff09;&#x3001;prefix&#xff08;prefix path:-p prefix&#xff09;&#x3001;conf_file&#xff08;&#x914d;&#x7f6e;&#x6587;&#x4ef6;&#x8def;&#x5f84;:-c filenname&#xff09;&#x3001;conf_param(-g directives)&#xff0c;&#x53e6;&#x5916;&#x8fd8;&#x628a;init_cycle.log.log_level&#x8bbe;&#x7f6e;&#x4e3a;NGX_LOG_INFO&#xff1b;&#xa;&#xa;6&#x3001;&#x8c03;&#x7528;ngx_os_init&#xff0c;&#x8fd9;&#x4e2a;&#x8c03;&#x7528;&#x4f1a;&#x8bbe;&#x7f6e;&#x4e00;&#x4e9b;&#x5168;&#x5c40;&#x53d8;&#x91cf;&#xff0c;&#x8fd9;&#x4e9b;&#x5168;&#x5c40;&#x53d8;&#x91cf;&#x548c;&#x64cd;&#x4f5c;&#x7cfb;&#x7edf;&#x76f8;&#x5173;&#xff0c;&#x6bd4;&#x5982;:ngx_pagesize,ngx_cacheline_size,ngx_ncpu,ngx_cpuinfo(),ngx_max_sockets&#x7b49;&#xff1b;&#xa;&#xa;7&#x3001;&#x8c03;&#x7528;&#x521d;&#x59cb;&#x5316;&#x51fd;&#x6570;ngx_crc32_table_init()&#xff1b;&#xa;&#xa;8&#x3001;&#x8c03;&#x7528;ngx_set_inherited_sockets(&amp;init_cycle)&#xff0c;&#x521d;&#x59cb;&#x5316;init_cycle.listening&#xff0c;&#x8fd9;&#x662f;&#x4e00;&#x4e2a;ngx_listening_t&#x7684;&#x7ed3;&#x6784;&#x6570;&#x7ec4;&#xff0c;&#x5176;socket_fd&#x662f;&#x4ece;&#x73af;&#x5883;&#x53d8;&#x91cf;NGINX&#x4e2d;&#x8bfb;&#x53d6;&#x7684;&#xff1b;&#xa;&#xa;9&#x3001;&#x5bf9;&#x7cfb;&#x7edf;&#x6240;&#x6709;&#x6a21;&#x5757;&#x70b9;&#x4e00;&#x4e0b;&#x6570;&#xff0c;&#x7136;&#x540e;&#x8fdb;&#x5165;ngx_init_cycle&#x4f5c;&#x4e3b;&#x8981;&#x7684;&#x6a21;&#x5757;&#x76f8;&#x5173;&#x7684;&#x521d;&#x59cb;&#x5316;&#xff0c;init_cycle&#x4f5c;&#x4e3a;&#x65e7;&#x7684;&#x5168;&#x5c40;&#x8bbe;&#x7f6e;&#x4f20;&#x8fdb;&#x53bb;&#xff0c;&#x8fd9;&#x4e2a;&#x51fd;&#x6570;&#x4f1a;&#x521b;&#x5efa;&#x4e00;&#x4e0b;&#x65b0;&#x7684;ngx_cycle_t&#x53d8;&#x91cf;&#xff0c;&#x5e76;&#x8fd4;&#x56de;&#x5176;&#x6307;&#x9488;&#xff1a;&#xa;    ngx_max_module = 0;&#xa;    for (i = 0; ngx_modules[i]; i++) {&#xa;        ngx_modules[i]-&gt;index = ngx_max_module++;&#xa;    }    &#xa;&#xa;    cycle = ngx_init_cycle(&amp;init_cycle);&#xa;&#xa;10&#x3001;&#x4e0e;&#x4fe1;&#x53f7;&#x91cf;&#x76f8;&#x5173;&#x7684;&#x4e00;&#x4e9b;&#x64cd;&#x4f5c;&#x4ee3;&#x7801;&#xff1b;&#xa;&#xa;11&#x3001;&#x591a;&#x8fdb;&#x7a0b;&#x7684;&#x60c5;&#x51b5;&#x4e0b;&#xff0c;&#x8c03;&#x7528;ngx_master_process_cycle(cycle)&#xff0c;&#x5355;&#x8fdb;&#x7a0b;&#x60c5;&#x51b5;&#x4e0b;&#x8c03;&#x7528;ngx_single_process_cycle&#x5b8c;&#x6210;&#x6700;&#x540e;&#x7684;&#x542f;&#x52a8;&#x5de5;&#x4f5c;&#x3002;"/>
</node>
<node CREATED="1388815025459" ID="ID_1184832383" MODIFIED="1388817102595" TEXT="ngx_strerror_init"/>
<node CREATED="1388815274754" FOLDED="true" ID="ID_232272010" MODIFIED="1388931733459" TEXT="ngx_get_options">
<node CREATED="1388816787481" ID="ID_1195088593" MODIFIED="1388924443050" TEXT="&#x5c06;&#x542f;&#x52a8;&#x53c2;&#x6570;&#x4fe1;&#x606f;&#x653e;&#x5230;&#x5168;&#x5c40;&#x53d8;&#x91cf;&#x4e2d;">
<icon BUILTIN="attach"/>
</node>
</node>
<node CREATED="1388815311914" FOLDED="true" ID="ID_1942153999" MODIFIED="1388924446427" TEXT="ngx_time_init">
<node CREATED="1388924427154" ID="ID_1814779121" MODIFIED="1388924435466" TEXT="&#x8c03;&#x7528;ngx_time_init()&#x521d;&#x59cb;&#x5316;&#x5e76;&#x66f4;&#x65b0;&#x65f6;&#x95f4;&#xff0c;&#x5982;&#x5168;&#x5c40;&#x53d8;&#x91cf;ngx_cached_time">
<icon BUILTIN="attach"/>
</node>
</node>
<node CREATED="1388924475223" ID="ID_1934260777" MODIFIED="1388924478810" TEXT="&#x6e05;&#x96f6;&#x5168;&#x5c40;&#x53d8;&#x91cf;ngx_cycle&#xff0c;&#x5e76;&#x4e3a;ngx_cycle.pool&#x521b;&#x5efa;&#x5927;&#x5c0f;&#x4e3a;1024B&#x7684;&#x5185;&#x5b58;&#x6c60;"/>
<node CREATED="1388815325906" ID="ID_979112437" MODIFIED="1388815326966" TEXT="ngx_regex_init"/>
<node CREATED="1388815358065" ID="ID_1391711588" MODIFIED="1388815359809" TEXT="ngx_getpid"/>
<node CREATED="1388815367393" FOLDED="true" ID="ID_125874145" MODIFIED="1388924571445" TEXT="ngx_log_init">
<node CREATED="1388816425121" ID="ID_944432809" MODIFIED="1388816601023">
<richcontent TYPE="NODE"><html>
  <head>
    
  </head>
  <body>
    <p>
      &#21021;&#22987;&#21270;log&#30340;file&#21644;log_level&#65292;
    </p>
    <p>
      log_level=NGX_LOG_NOTICE
    </p>
    <p>
      &#23558;file&#35774;&#32622;&#20026;&#20840;&#23616;&#30340;ngx_log_file&#65292;&#25171;&#24320;ngx_log_file&#65292;&#22833;&#36133;&#30340;&#35805;&#65292;
    </p>
  </body>
</html></richcontent>
</node>
</node>
<node CREATED="1388815445290" ID="ID_1165693607" MODIFIED="1388815447950" TEXT="ngx_ssl_init"/>
<node CREATED="1388815462049" ID="ID_1098644459" MODIFIED="1388815463671" TEXT="ngx_save_argv"/>
<node CREATED="1388815469409" FOLDED="true" ID="ID_1372232917" MODIFIED="1388924570645" TEXT="ngx_process_options">
<node CREATED="1388924518551" ID="ID_1917601689" MODIFIED="1388924520599" TEXT="&#x521d;&#x59cb;&#x5316;ngx_cycle&#x7684;prefix, conf_prefix, conf_file, conf_param&#x7b49;&#x5b57;&#x6bb5;"/>
</node>
<node CREATED="1388815479458" FOLDED="true" ID="ID_178017049" MODIFIED="1388924570221" TEXT="ngx_os_init">
<node CREATED="1388924564734" ID="ID_905564324" MODIFIED="1388924566856" TEXT="&#x521d;&#x59cb;&#x5316;&#x7cfb;&#x7edf;&#x76f8;&#x5173;&#x53d8;&#x91cf;&#xff0c;&#x5982;&#x5185;&#x5b58;&#x9875;&#x9762;&#x5927;&#x5c0f;ngx_pagesize,ngx_cacheline_size,&#x6700;&#x5927;&#x8fde;&#x63a5;&#x6570;ngx_max_sockets&#x7b49;"/>
</node>
<node CREATED="1388815556634" FOLDED="true" ID="ID_818595473" MODIFIED="1389078431475" TEXT="ngx_create_pidfile">
<node CREATED="1388924770518" ID="ID_605940582" MODIFIED="1388924772377" TEXT="&#x521b;&#x5efa;&#x8fdb;&#x7a0b;&#x8bb0;&#x5f55;&#x6587;&#x4ef6;&#xff1b;(&#x975e;NGX_PROCESS_MASTER=1&#x8fdb;&#x7a0b;&#xff0c;&#x4e0d;&#x521b;&#x5efa;&#x8be5;&#x6587;&#x4ef6;)"/>
</node>
<node CREATED="1388815486481" FOLDED="true" ID="ID_1991291985" MODIFIED="1388924597933" TEXT="ngx_crc32_table_init">
<node CREATED="1388924595007" ID="ID_1329406874" MODIFIED="1388924596658" TEXT="&#x521d;&#x59cb;&#x5316;CRC&#x8868;(&#x540e;&#x7eed;&#x7684;CRC&#x6821;&#x9a8c;&#x901a;&#x8fc7;&#x67e5;&#x8868;&#x8fdb;&#x884c;&#xff0c;&#x6548;&#x7387;&#x9ad8;)"/>
</node>
<<<<<<< HEAD
<node CREATED="1388815492657" ID="ID_852703083" MODIFIED="1389103982137" TEXT="ngx_add_inherited_sockets">
=======
<node CREATED="1388815492657" FOLDED="true" ID="ID_852703083" MODIFIED="1389085112628" TEXT="ngx_add_inherited_sockets">
>>>>>>> branch 'master' of https://github.com/galebo/nginx-study.git
<node CREATED="1388924618831" ID="ID_1693925617" MODIFIED="1388924644453" TEXT="&#xa;    &#x89e3;&#x6790;&#x73af;&#x5883;&#x53d8;&#x91cf;NGINX_VAR=&quot;NGINX&quot;&#x4e2d;&#x7684;sockets&#xff0c;&#x5e76;&#x4fdd;&#x5b58;&#x81f3;ngx_cycle.listening&#x6570;&#x7ec4;&#xff1b;&#xa;    &#x8bbe;&#x7f6e;ngx_inherited=1&#xff1b;&#xa;&#xa;    &#x8c03;&#x7528;ngx_set_inherited_sockets()&#x9010;&#x4e00;&#x5bf9;ngx_cycle.listening&#x6570;&#x7ec4;&#x4e2d;&#x7684;sockets&#x8fdb;&#x884c;&#x8bbe;&#x7f6e;&#xff1b;&#xa;&#xa;    &#x5177;&#x4f53;&#x53ef;&#x53c2;&#x8003;&lt;nginx&#x6e90;&#x7801;&#x5206;&#x6790;&#x2014;&#x521d;&#x59cb;&#x5316;&#x8fc7;&#x7a0b;&#x4e2d;&#x5904;&#x7406;&#x7ee7;&#x627f;&#x7684;sockets&gt;"/>
</node>
<node CREATED="1388815801090" FOLDED="true" ID="ID_1177800221" MODIFIED="1388927989672" TEXT="init module index">
<node CREATED="1388815818592" ID="ID_879194248" MODIFIED="1388815867604" TEXT="ngx_modules&#x5728;ngx_modules.c&#x4e2d;&#x5b9e;&#x73b0;">
<node CREATED="1388815963337" ID="ID_1580555948" MODIFIED="1388815964768" TEXT="ngx_module_names"/>
<node CREATED="1388815976201" ID="ID_1826691998" MODIFIED="1388815979391" TEXT="ngx_modules"/>
<node CREATED="1388816029457" ID="ID_1845163750" MODIFIED="1388816031931" TEXT="ngx_all_module_names"/>
<node CREATED="1388816040242" ID="ID_423175868" MODIFIED="1388816041878" TEXT="ngx_dso_abi_all_tags"/>
</node>
<node CREATED="1388926036432" ID="ID_1271992853" MODIFIED="1388926057077" TEXT="&#x4ee3;&#x7801;">
<node CREATED="1388925990592" ID="ID_1987468846" MODIFIED="1388926024814" TEXT="&#x5bf9;&#x5404;&#x4e2a;&#x6a21;&#x5757;&#x7684;index&#x5b57;&#x6bb5;&#x7684;&#x521d;&#x59cb;&#x5316;&#x662f;&#x5728;main&#x51fd;&#x6570;&#x4e2d;&#x8fdb;&#x884c;&#x7684;&#xff0c;&#x5982;&#x4e0b;&#x3002;&#xa; ngx_max_module = 0;  &#xa; for (i = 0; ngx_modules[i]; i++) {  &#xa;     ngx_modules[i]-&gt;index = ngx_max_module++;  &#xa; }  &#xa;&#xa;&#x53ef;&#x89c1;&#xff0c;&#x8be5;for-loop&#x6267;&#x884c;&#x540e;&#xff0c;&#x6bcf;&#x4e2a;&#x6a21;&#x5757;&#x7684;index&#x503c;&#x4fbf;&#x662f;&#x5176;&#x5728;ngx_modules[]&#x6570;&#x7ec4;&#x4e2d;&#x7684;&#x4e0b;&#x6807;&#x503c;&#xff0c;&#x4e14;&#x5168;&#x5c40;&#x53d8;&#x91cf;ngx_max_module&#x4e3a;&#x6a21;&#x5757;&#x4e2a;&#x6570;&#xff0c;&#x5bf9;&#x4e8e;&#x672c;&#x4f8b;&#x6765;&#x8bb2;&#xff0c;ngx_max_module=44&#x3002;"/>
</node>
</node>
<<<<<<< HEAD
<node BACKGROUND_COLOR="#459b12" CREATED="1388815502394" ID="ID_295164304" MODIFIED="1389104978120" TEXT="ngx_init_cycle">
=======
<node BACKGROUND_COLOR="#459b12" CREATED="1388815502394" FOLDED="true" ID="ID_295164304" MODIFIED="1389085110550" TEXT="ngx_init_cycle">
>>>>>>> branch 'master' of https://github.com/galebo/nginx-study.git
<font BOLD="true" NAME="SansSerif" SIZE="12"/>
<node CREATED="1388817913231" ID="ID_670417198" MODIFIED="1388817916114" TEXT="ngx_create_pidfile"/>
<node CREATED="1388817929857" ID="ID_1447595181" MODIFIED="1388817933030" TEXT="ngx_delete_pidfile"/>
<node CREATED="1388817944633" ID="ID_508395350" MODIFIED="1388817946582" TEXT="ngx_test_lockfile"/>
<node CREATED="1388817970769" ID="ID_1068963088" MODIFIED="1388817972741" TEXT="ngx_is_init_cycle"/>
<node CREATED="1388929147249" ID="ID_1047855080" MODIFIED="1389072436627" TEXT="&#x6e90;&#x7801;&#x5206;&#x6790;">
<<<<<<< HEAD
<node CREATED="1388929162025" FOLDED="true" ID="ID_52562371" MODIFIED="1389105017946" TEXT="&#x6e90;&#x7801;&#x5206;&#x6790;1">
=======
<node CREATED="1388929162025" FOLDED="true" ID="ID_52562371" MODIFIED="1389080320783" TEXT="&#x6e90;&#x7801;&#x5206;&#x6790;1">
>>>>>>> branch 'master' of https://github.com/galebo/nginx-study.git
<node CREATED="1388929222345" ID="ID_1428001477" MODIFIED="1389072506117">
<richcontent TYPE="NODE"><html>
  <head>
    
  </head>
  <body>
    <p>
      ngx_init_cycle
    </p>
    <p>
      {
    </p>
    <p>
      &#160;&#160;&#160;&#160;...
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;// &#35843;&#24230;core&#27169;&#22359;&#30340;&#38057;&#23376;create_conf&#65292;&#24182;&#19988;&#25226;&#21019;&#24314;&#30340;&#37197;&#32622;&#32467;&#26500;&#20307;&#21464;&#37327;&#23384;&#25918;&#21040;cyclep-&gt;conf_ctx&#20013;
    </p>
    <p>
      &#160;&#160;&#160;&#160;for (i = 0; ngx_modules[i]; i++) {
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if (<font color="#f70808">ngx_modules[i]-&gt;type</font>&#160; != <font color="#f20d0d"><b>NGX_CORE_MODULE</b></font>) {
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;continue;
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;}
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;module = <font color="#fd0202">ngx_modules[i]-&gt;ctx</font>;
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if (module-&gt;create_conf) {
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;rv = module-&gt;<font color="#fd0202">create_conf</font>(cycle);
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if (rv == NULL) {
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;ngx_destroy_pool(pool);
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;return NULL;
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;}
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;cycle-&gt;conf_ctx[ngx_modules[i]-&gt;index] = rv;
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;}
    </p>
    <p>
      &#160;&#160;&#160;&#160;}
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;...
    </p>
    <p>
      &#160;&#160;&#160;&#160;ngx_conf_parse
    </p>
    <p>
      &#160;&#160;&#160;&#160;...
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;// &#35843;&#24230;core&#27169;&#22359;&#30340;&#38057;&#23376;init_conf&#65292;&#35774;&#32622;&#21018;&#25165;&#21019;&#24314;&#30340;&#37197;&#32622;&#32467;&#26500;&#20307;&#21464;&#37327;&#65288;&#29992;&#20174;&#37197;&#32622;&#25991;&#20214;&#20013;&#35835;&#21462;&#30340;&#25968;&#25454;&#36171;&#20540;&#65289;
    </p>
    <p>
      &#160;&#160;&#160;&#160;for (i = 0; ngx_modules[i]; i++) {
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if (ngx_modules[i]-&gt;type != <font color="#f20d0d"><b>NGX_CORE_MODULE)</b></font>&#160; {
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;continue;
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;}
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;module = ngx_modules[i]-&gt;ctx;
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if (module-&gt;init_conf) {
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if (module-&gt;<font color="#fb0808">init_conf</font>(cycle, cycle-&gt;conf_ctx[ngx_modules[i]-&gt;index])
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;== NGX_CONF_ERROR)
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;{
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;ngx_destroy_cycle_pools(&amp;conf);
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;return NULL;
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;}
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;}
    </p>
    <p>
      &#160;&#160;&#160;&#160;}
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;...
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;// &#35843;&#24230;<font color="#f70404"><b>&#25152;&#26377;&#27169;&#22359;&#30340;init_module</b></font>&#38057;&#23376;&#65292;&#21021;&#22987;&#21270;&#27169;&#22359;
    </p>
    <p>
      &#160;&#160;&#160;&#160;for (i = 0; ngx_modules[i]; i++) {
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if (ngx_modules[i]-&gt;init_module) {
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if (ngx_modules[i]-&gt;<font color="#f70404">init_module</font>(cycle) != NGX_OK) {
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;/* fatal */
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;exit(1);
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;}
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;}
    </p>
    <p>
      &#160;&#160;&#160;&#160;}
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;...
    </p>
    <p>
      }
    </p>
  </body>
</html></richcontent>
</node>
</node>
<node CREATED="1388931084460" FOLDED="true" ID="ID_1053853772" LINK="http://blog.csdn.net/kenbinzhang/article/details/4681694" MODIFIED="1389080324871" TEXT="&#x6e90;&#x7801;&#x5206;&#x6790;2">
<node CREATED="1388931101449" ID="ID_325443448" MODIFIED="1388931565070">
<richcontent TYPE="NODE"><html>
  <head>
    
  </head>
  <body>
    <p>
      1&#12289;&#35843;&#29992;ngx_timezone_update()&#12289;ngx_timeofday()&#21644;ngx_time_update(0, 0)&#20570;&#26102;&#38388;&#26657;&#20934;&#65292;nginx&#30340;&#26102;&#38388;&#20197;&#21450;&#35745;&#25968;&#22120;&#30456;&#20851;&#30340;&#20869;&#23481;&#20197;&#21518;&#20316;&#19987;&#39064;&#20171;&#32461;&#21543;&#65307;
    </p>
    <p>
      
    </p>
    <p>
      2&#12289;&#21019;&#24314;&#19968;&#20010;&#26032;&#30340;ngx_cycle_t&#21464;&#37327;cycle&#65292;&#24182;&#19988;&#21021;&#22987;&#21270;&#20854;&#22823;&#37096;&#20998;&#30340;&#25104;&#21592;&#23383;&#27573;&#65292;&#26377;&#19968;&#20123;&#26159;&#20174;&#20256;&#20837;&#30340;old_cycle&#30452;&#25509;&#25335;&#36125;&#36807;&#26469;&#30340;&#65292;&#36825;&#20123;&#23383;&#27573;&#21253;&#25324;&#65306;log,conf_prefix,prefix,conf_file,conf_param&#65307;&#36824;&#26377;&#19968;&#20123;&#23383;&#27573;&#20250;&#21028;&#26029;&#19968;&#19979;old_cycle&#20013;&#26159;&#21542;&#23384;&#22312;&#65292;&#22914;&#26524;&#23384;&#22312;&#65292;&#21017;&#21462;&#24471;&#36825;&#20123;&#23383;&#27573;&#30340;&#21344;&#29992;&#31354;&#38388;&#65292;&#22312;cycle&#20013;&#30003;&#35831;&#31561;&#22823;&#30340;&#31354;&#38388;&#65292;&#24182;&#21021;&#22987;&#21270;&#65288;&#19981;&#25335;&#36125;&#65289;&#65292;&#21542;&#21017;&#23601;&#30003;&#35831;&#40664;&#35748;&#22823;&#23567;&#30340;&#31354;&#38388;&#65292;&#36825;&#20123;&#23383;&#27573;&#26377;:pathes,open_files,share_memory,listening&#65307;&#36824;&#26377;&#19968;&#20123;&#23383;&#27573;&#26159;&#37325;&#26032;&#21019;&#24314;&#25110;&#32773;&#31532;&#19968;&#27425;&#36171;&#20540;&#30340;&#65306;pool,new_log.log_level(=NGX_LOG_ERR),old_cycle(=old_cycle),hostname(gethostname)&#65307;
    </p>
    <p>
      &#26368;&#37325;&#35201;&#30340;&#19968;&#20010;&#23383;&#27573;&#26159;conf_ctx,&#23427;&#34987;&#21021;&#22987;&#21270;&#20026;ngx_max_module&#20010;void *&#25351;&#38024;&#65292;&#36825;&#39044;&#31034;&#30528;conf_ctx&#26159;&#25152;&#26377;&#27169;&#22359;&#30340;&#37197;&#32622;&#32467;&#26500;&#30340;&#25351;&#38024;&#25968;&#32452;&#65307;
    </p>
    <p>
      
    </p>
    <p>
      3&#12289;&#35843;&#29992;&#25152;&#26377;&#26680;&#24515;&#31867;&#27169;&#22359;&#30340;&#38057;&#23376;<font color="#f40303"><b>create_conf</b></font>&#65292;&#24182;&#25226;&#36820;&#22238;&#30340;&#37197;&#32622;&#32467;&#26500;&#25351;&#38024;&#25918;&#21040;conf_ctx&#25968;&#32452;&#20013;&#65292;&#20559;&#31227;&#20301;&#32622;&#20026;ngx_module_t.index&#65307;
    </p>
    <p>
      
    </p>
    <p>
      4&#12289;&#20174;&#21629;&#20196;&#34892;&#21644;&#37197;&#32622;&#25991;&#20214;&#20013;&#25226;&#25152;&#26377;&#37197;&#32622;&#26356;&#26032;&#21040;cycle&#30340;conf_ctx&#20013;&#65292;
    </p>
    <p>
      &#39318;&#20808;&#35843;&#29992;ngx_conf_param&#25226;&#21629;&#20196;&#34892;&#20013;&#30340;&#25351;&#20196;&#65288;-g directives&#65289;&#36716;&#25442;&#20026;&#37197;&#32622;&#32467;&#26500;&#24182;&#25226;&#25351;&#38024;&#21152;&#20837;&#21040;cycle.conf_ctx&#20013;&#65292;
    </p>
    <p>
      &#25509;&#30528;&#35843;&#29992;<b>ngx_conf_parse</b>(..,filename)&#25226;&#37197;&#32622;&#25991;&#20214;&#20013;&#30340;&#25351;&#20196;&#36716;&#25442;&#20026;&#37197;&#32622;&#32467;&#26500;&#24182;&#25226;&#25351;&#38024;&#21152;&#20837;&#21040;cycle.conf_ctx&#20013;&#12290;
    </p>
    <p>
      
    </p>
    <p>
      ngx_conf_param&#26368;&#21518;&#20063;&#20250;&#35843;&#29992;ngx_conf_parse(..,NULL)&#65292;&#25152;&#20197;&#37197;&#32622;&#30340;&#26356;&#26032;&#20027;&#35201;&#26159;&#22312;ngx_conf_parse&#20013;&#36827;&#34892;&#30340;&#65292;&#36825;&#20010;&#20989;&#25968;&#20013;&#26377;&#19968;&#20010;for&#24490;&#29615;&#65292;&#27599;&#27425;&#24490;&#29615;&#35843;&#29992;ngx_conf_read_token&#21462;&#24471;&#19968;&#20010;&#37197;&#32622;&#25351;&#20196;&#65288;&#20197;&#65307;&#32467;&#23614;&#65289;&#65292;&#28982;&#21518;&#35843;&#29992;ngx_conf_handler&#22788;&#29702;&#36825;&#26465;&#25351;&#20196;&#65292;
    </p>
    <p>
      ngx_conf_handler&#27599;&#27425;&#37117;&#20250;&#36941;&#21382;&#25152;&#26377;&#27169;&#22359;&#30340;&#25351;&#20196;&#38598;&#65292;&#26597;&#25214;&#36825;&#26465;&#37197;&#32622;&#25351;&#20196;&#24182;&#20998;&#26512;&#20854;&#21512;&#27861;&#24615;&#65292;&#22914;&#26524;&#25351;&#20196;&#27491;&#30830;&#65292;&#21017;&#20250;&#21019;&#24314;&#37197;&#32622;&#32467;&#26500;&#24182;&#25226;&#25351;&#38024;&#21152;&#20837;&#21040;cycle.conf_ctx&#20013;&#65292;&#37197;&#32622;&#32467;&#26500;&#30340;&#36171;&#20540;&#26159;&#35843;&#29992;&#35813;&#25351;&#20196;&#30340;&#38057;&#23376;set&#23436;&#25104;&#30340;&#12290;
    </p>
    <p>
      
    </p>
    <p>
      &#36941;&#21382;&#25351;&#20196;&#38598;&#30340;&#36807;&#31243;&#39318;&#20808;&#26159;&#36941;&#21382;&#25152;&#26377;&#30340;&#26680;&#24515;&#31867;&#27169;&#22359;&#65292;
    </p>
    <p>
      &#33509;&#26159;event&#31867;&#30340;&#25351;&#20196;&#65292;&#21017;&#20250;&#36941;&#21382;&#21040;ngx_events_module&#65292;&#36825;&#20010;&#27169;&#22359;&#26159;&#23646;&#20110;&#26680;&#24515;&#31867;&#30340;&#65292;&#20854;&#38057;&#23376;set&#21448;&#20250;&#23884;&#22871;&#35843;&#29992;ngx_conf_parse&#21435;&#36941;&#21382;&#25152;&#26377;&#30340;event&#31867;&#27169;&#22359;&#65292;
    </p>
    <p>
      &#21516;&#26679;&#30340;&#65292;&#33509;&#26159;http&#31867;&#25351;&#20196;&#65292;&#21017;&#20250;&#36941;&#21382;&#21040;ngx_http_module&#65292;&#35813;&#27169;&#22359;&#30340;&#38057;&#23376;set&#36827;&#19968;&#27493;&#36941;&#21382;&#25152;&#26377;&#30340;http&#31867;&#27169;&#22359;&#65292;
    </p>
    <p>
      mail&#31867;&#25351;&#20196;&#20250;&#36941;&#21382;&#21040;ngx_mail_module&#65292;&#35813;&#27169;&#22359;&#30340;&#38057;&#23376;&#36827;&#19968;&#27493;&#36941;&#21382;&#21040;&#25152;&#26377;&#30340;mail&#31867;&#27169;&#22359;&#12290;&#35201;&#29305;&#21035;&#27880;&#24847;&#30340;&#26159;&#65306;&#36825;&#19977;&#20010;&#36941;&#21382;&#36807;&#31243;&#20013;&#20250;&#22312;&#36866;&#24403;&#30340;&#26102;&#26426;&#35843;&#29992;event&#31867;&#27169;&#22359;&#12289;http&#31867;&#27169;&#22359;&#21644;mail&#31867;&#27169;&#22359;&#30340;&#21019;&#24314;&#37197;&#32622;&#21644;&#21021;&#22987;&#21270;&#37197;&#32622;&#30340;&#38057;&#23376;&#12290;&#20174;&#36825;&#37324;&#21487;&#20197;&#30475;&#20986;&#65292;event&#12289;http&#12289;mail&#19977;&#31867;&#27169;&#22359;&#30340;&#38057;&#23376;&#26159;&#37197;&#32622;&#20013;&#30340;&#25351;&#20196;&#39537;&#21160;&#30340;&#65307;
    </p>
    <p>
      
    </p>
    <p>
      5&#12289;&#35843;&#29992;&#25152;&#26377;&#26680;&#24515;&#31867;&#27169;&#22359;&#30340;&#38057;&#23376;<font color="#f50e0e"><b>init_conf</b></font>&#65292;&#25226;&#27169;&#22359;&#30340;&#37197;&#32622;&#32467;&#26500;&#20316;&#20026;&#19968;&#20010;&#21442;&#25968;&#20256;&#20837;&#65306;init_conf(cycle, cycle-&gt;conf_ctx[ngx_modules[i]-&gt;index);
    </p>
    <p>
      
    </p>
    <p>
      6&#12289;&#33719;&#24471;&#26680;&#24515;&#27169;&#22359;ngx_core_module&#30340;&#37197;&#32622;&#32467;&#26500;&#65292;&#28982;&#21518;&#35843;&#29992;ngx_create_pidfile&#21019;&#24314;pid&#25991;&#20214;&#12290;
    </p>
    <p>
      &#33719;&#21462;&#37197;&#32622;&#32467;&#26500;&#30340;&#20195;&#30721;&#65306;ccf = (ngx_core_conf_t *) ngx_get_conf(cycle-&gt;conf_ctx, ngx_core_module)&#65292;&#36825;&#37324;&#30340;ngx_get_conf&#26159;&#19968;&#20010;&#23439;&#23450;&#20041;&#65306;#define ngx_get_conf(conf_ctx, module)&#160;&#160;conf_ctx[module.index]&#65307;
    </p>
    <p>
      
    </p>
    <p>
      7&#12289;&#35843;&#29992;ngx_test_lockfile(filename,log)&#65292;ngx_create_pathes(cycle,user)&#65292;&#25509;&#30528;&#25171;&#24320;errorlog&#25991;&#20214;&#24182;&#36171;&#20540;&#32473;cycle-&gt;new_log.file&#65306;cycle-&gt;new_log.file = ngx_conf_open_file(cycle, &amp;error_log)&#65307;
    </p>
    <p>
      
    </p>
    <p>
      8&#12289;&#25171;&#24320;&#26032;&#25991;&#20214;&#65292;&#22312;&#31532;2&#27493;&#30340;&#26102;&#20505;&#25552;&#21040;cycle-&gt;open_files&#36825;&#20010;&#38142;&#34920;&#26159;&#31354;&#30340;&#65292;&#21482;&#26159;&#32473;&#23427;&#39044;&#20808;&#20998;&#37197;&#20102;&#31354;&#38388;&#65292;&#24182;&#27809;&#26377;&#25968;&#25454;&#65292;&#36825;&#37324;&#20043;&#25152;&#20197;&#21487;&#33021;&#20250;&#26377;&#25991;&#20214;&#34987;&#25171;&#24320;&#65292;&#20272;&#35745;&#26159;&#21069;&#38754;&#35835;&#37197;&#32622;&#25991;&#20214;&#30340;&#26102;&#20505;&#65292;&#35843;&#29992;&#21508;&#20010;&#38057;&#23376;&#30340;&#36807;&#31243;&#20013;&#65292;&#22635;&#20805;&#20102;&#36825;&#20010;&#38142;&#34920;&#65292;&#25226;ngx_open_file_t&#32467;&#26500;&#21464;&#37327;&#22635;&#20805;&#36827;&#26469;&#65288;&#32467;&#26500;&#20307;&#20013;&#21253;&#21547;&#35201;&#25171;&#24320;&#25991;&#20214;&#30340;&#36335;&#24452;&#20449;&#24687;&#65289;&#65292;&#36825;&#26159;&#25105;&#29468;&#27979;&#30340;&#65292;&#20043;&#21518;&#20877;&#39564;&#35777;&#65306;&#65289;&#25509;&#30528;&#20462;&#25913;&#19968;&#19979;cycle&#30340;&#25104;&#21592;&#65306;cycle-&gt;log = &amp;cycle-&gt;new_log;pool-&gt;log = &amp;cycle-&gt;new_log&#65307;
    </p>
    <p>
      
    </p>
    <p>
      9&#12289;&#21019;&#24314;&#20849;&#20139;&#20869;&#23384;&#65292;&#21644;open_files&#31867;&#20284;&#65292;&#22312;&#31532;2&#27493;&#30340;&#26102;&#20505;cycle&#65293;&gt;share_memory&#20063;&#21021;&#22987;&#21270;&#20026;&#19968;&#20010;&#31354;&#30340;&#38142;&#34920;&#65292;&#20063;&#26159;&#39044;&#20998;&#37197;&#20102;&#31354;&#38388;&#65292;&#22914;&#26524;&#27492;&#26102;&#38142;&#34920;&#20013;&#24050;&#32463;&#34987;&#22635;&#20805;&#20102;ngx_shm_zone_t&#32467;&#26500;&#21464;&#37327;&#65288;&#20854;&#20013;&#21253;&#21547;&#38656;&#35201;&#20849;&#20139;&#20869;&#23384;&#30340;&#23610;&#23544;&#21644;&#26631;&#35782;&#31561;&#20449;&#24687;&#65289;&#65292;&#37027;&#20040;&#36825;&#37324;&#23601;&#20250;&#20998;&#37197;&#20849;&#20139;&#20869;&#23384;&#65292;&#24182;&#19988;&#35843;&#29992;&#21512;&#36866;&#30340;&#21021;&#22987;&#21270;&#38057;&#23376;&#21021;&#22987;&#21270;&#20998;&#37197;&#30340;&#20849;&#20139;&#20869;&#23384;&#65292;&#27599;&#22359;&#20849;&#20139;&#20869;&#23384;&#37117;&#20250;&#26377;name&#26631;&#35782;&#65292;&#36825;&#37324;&#20063;&#20250;&#20570;&#19968;&#20123;&#25490;&#37325;&#65292;&#24050;&#32463;&#20998;&#37197;&#30340;&#23601;&#19981;&#20250;&#20877;&#21435;&#20998;&#37197;&#65292;&#20174;&#23545;open_files&#21644;share_memory&#30340;&#22788;&#29702;&#36807;&#31243;&#21487;&#20197;&#30475;&#20986;&#65292;nginx&#22312;&#36164;&#28304;&#31649;&#29702;&#19978;&#26159;&#38598;&#20013;&#20998;&#37197;&#30340;&#65292;&#35831;&#27714;&#36164;&#28304;&#30340;&#26102;&#20505;&#20998;&#37197;&#35828;&#26126;&#24615;&#30340;&#32467;&#26500;&#21464;&#37327;&#65292;&#28982;&#21518;&#22312;&#24688;&#24403;&#30340;&#26102;&#26426;&#25165;&#21435;&#30495;&#27491;&#20998;&#37197;&#36164;&#28304;&#65307;
    </p>
    <p>
      
    </p>
    <p>
      10&#12289;&#22788;&#29702;listening sockets&#65292;cycle-&gt;listening&#26159;ngx_listening_t&#32467;&#26500;&#30340;&#25968;&#32452;&#65292;&#25226;cycle-&gt;listening&#20110;old_cycle-&gt;listening&#36827;&#34892;&#27604;&#36739;&#65292;&#35774;&#32622;cycle-&gt;listening&#30340;&#19968;&#20123;&#29366;&#24577;&#20449;&#24687;&#65292;
    </p>
    <p>
      &#25509;&#30528;&#35843;&#29992;ngx_open_listening_sockets(cycle)&#21551;&#21160;cycle-&gt;listening&#20013;&#30340;&#25152;&#26377;&#30417;&#21548;socket&#65292;&#24490;&#29615;&#35843;&#29992;socket,bind,listen&#23436;&#25104;&#26381;&#21153;&#31471;&#30417;&#21548;socket&#30340;&#21551;&#21160;&#12290;
    </p>
    <p>
      &#25509;&#30528;&#35843;&#29992;ngx_configure_listening_sockets(cycle)&#37197;&#32622;&#30417;&#21548;socket&#65292;&#20250;&#26681;&#25454;ngx_listening_t&#20013;&#30340;&#29366;&#24577;&#20449;&#24687;&#35774;&#32622;socket&#30340;&#35835;&#20889;&#32531;&#23384;&#21644;TCP_DEFER_ACCEPT&#65307;
    </p>
    <p>
      
    </p>
    <p>
      11&#12289;&#35843;&#29992;&#25152;&#26377;&#27169;&#22359;&#30340;&#38057;&#23376;<font color="#f90606"><b>init_module</b></font>&#65307;
    </p>
    <p>
      
    </p>
    <p>
      12&#12289;&#20851;&#38381;&#25110;&#32773;&#21024;&#38500;&#19968;&#20123;&#27531;&#30041;&#22312;old_cycle&#20013;&#30340;&#36164;&#28304;&#65292;&#39318;&#20808;&#37322;&#25918;&#19981;&#29992;&#30340;&#20849;&#20139;&#20869;&#23384;&#65292;&#25509;&#30528;&#20851;&#38381;&#19981;&#20351;&#29992;&#30340;&#30417;&#21548;socket&#65292;&#20877;&#20851;&#38381;&#19981;&#20351;&#29992;&#30340;&#25171;&#24320;&#25991;&#20214;&#65292;&#26368;&#21518;&#25226;old_cycle&#25918;&#20837;ngx_old_cycles&#20013;&#65292;&#36825;&#26159;&#19968;&#20010;ngx_cycle_t *&#30340;&#25968;&#32452;&#65292;&#26368;&#21518;&#35774;&#23450;&#19968;&#20010;&#23450;&#26102;&#22120;&#65292;&#23450;&#26399;&#22238;&#35843;ngx_cleaner_event&#28165;&#29702;ngx_old_cycles&#65292;&#36825;&#37324;&#35774;&#32622;&#20102;30000ms&#28165;&#29702;&#19968;&#27425;&#12290;
    </p>
  </body>
</html></richcontent>
</node>
</node>
<node CREATED="1389080330560" ID="ID_429337595" MODIFIED="1389080333554" TEXT="ngx_open_listening_sockets">
<node CREATED="1389080384455" ID="ID_1171521139" MODIFIED="1389080413215">
<richcontent TYPE="NODE"><html>
  <head>
    
  </head>
  <body>
    <p>
      ngx_init_cycle &#22312;&#35299;&#26512;&#23436;&#37197;&#32622;&#25991;&#20214;&#20043;&#21518;&#65292;
    </p>
    <p>
      &#20250;&#35843;&#29992;&#36825;&#20010;&#25509;&#21475;&#25171;&#24320;cycle-&gt;listening&#25968;&#32452;&#20013;&#30340;&#25152;&#26377;&#30417;&#21548;&#22871;&#25509;&#21475;&#65292;
    </p>
    <p>
      &#20854;&#23454;&#23601;&#26159;&#39034;&#24207;&#35843;&#29992;socket&#12289; setsockopt&#12289;bind&#12289;listen&#20960;&#20010;&#31995;&#32479;&#35843;&#29992;&#65292;
    </p>
    <p>
      &#22914;&#26524;&#20107;&#20214;&#39537;&#21160;&#19981;&#26159;&#21033;&#29992;&#24322;&#27493;IO&#27169;&#22411;&#65292;&#36824;&#20250;&#25226;&#36825;&#20123;&#30417;&#21548;&#22871;&#25509;&#21475;&#35774;&#32622;&#20026;&#38750;&#38459;&#22622;&#26041;&#24335;&#65307;
    </p>
  </body>
</html></richcontent>
</node>
</node>
<node CREATED="1389080358743" ID="ID_1158710083" MODIFIED="1389080361872" TEXT="ngx_configure_listening_sockets">
<node CREATED="1389080445710" ID="ID_676477596" MODIFIED="1389080457494">
<richcontent TYPE="NODE"><html>
  <head>
    
  </head>
  <body>
    <p>
      &#32039;&#25509;&#30528;ngx_open_listening_sockets&#25509;&#21475;&#20043;&#21518;&#35843;&#29992;&#36825;&#20010;&#25509;&#21475;&#21033;&#29992;setsockopt&#31995;&#32479;&#35843;&#29992;&#37197;&#32622;&#36825;&#20123;&#30417;&#21548;&#22871;&#25509;&#21475;
    </p>
  </body>
</html></richcontent>
</node>
</node>
<node CREATED="1389080330560" ID="ID_429337595" MODIFIED="1389106775344" TEXT="ngx_open_listening_sockets">
<node CREATED="1389080384455" ID="ID_1171521139" MODIFIED="1389080413215">
<richcontent TYPE="NODE"><html>
  <head>
    
  </head>
  <body>
    <p>
      ngx_init_cycle &#22312;&#35299;&#26512;&#23436;&#37197;&#32622;&#25991;&#20214;&#20043;&#21518;&#65292;
    </p>
    <p>
      &#20250;&#35843;&#29992;&#36825;&#20010;&#25509;&#21475;&#25171;&#24320;cycle-&gt;listening&#25968;&#32452;&#20013;&#30340;&#25152;&#26377;&#30417;&#21548;&#22871;&#25509;&#21475;&#65292;
    </p>
    <p>
      &#20854;&#23454;&#23601;&#26159;&#39034;&#24207;&#35843;&#29992;socket&#12289; setsockopt&#12289;bind&#12289;listen&#20960;&#20010;&#31995;&#32479;&#35843;&#29992;&#65292;
    </p>
    <p>
      &#22914;&#26524;&#20107;&#20214;&#39537;&#21160;&#19981;&#26159;&#21033;&#29992;&#24322;&#27493;IO&#27169;&#22411;&#65292;&#36824;&#20250;&#25226;&#36825;&#20123;&#30417;&#21548;&#22871;&#25509;&#21475;&#35774;&#32622;&#20026;&#38750;&#38459;&#22622;&#26041;&#24335;&#65307;
    </p>
  </body>
</html></richcontent>
</node>
</node>
<node CREATED="1389080358743" FOLDED="true" ID="ID_1158710083" MODIFIED="1389105022106" TEXT="ngx_configure_listening_sockets">
<node CREATED="1389080445710" ID="ID_676477596" MODIFIED="1389080457494">
<richcontent TYPE="NODE"><html>
  <head>
    
  </head>
  <body>
    <p>
      &#32039;&#25509;&#30528;ngx_open_listening_sockets&#25509;&#21475;&#20043;&#21518;&#35843;&#29992;&#36825;&#20010;&#25509;&#21475;&#21033;&#29992;setsockopt&#31995;&#32479;&#35843;&#29992;&#37197;&#32622;&#36825;&#20123;&#30417;&#21548;&#22871;&#25509;&#21475;
    </p>
  </body>
</html></richcontent>
</node>
</node>
</node>
<node CREATED="1388929486211" ID="ID_584776036" MODIFIED="1389072278931" TEXT="ngx_conf_parse&#xa;(ngx_conf_file.c)">
<node CREATED="1388929868009" ID="ID_594437396" MODIFIED="1389107418214" TEXT="ngx_conf_handler">
<node CREATED="1388929500354" FOLDED="true" ID="ID_741193246" MODIFIED="1389107447318" TEXT="&#x6e90;&#x7801;&#x5206;&#x6790;">
<node CREATED="1388929517993" ID="ID_1966129769" MODIFIED="1389072368210">
<richcontent TYPE="NODE"><html>
  <head>
    
  </head>
  <body>
    <p>
      <font color="#0925fd"><b>ngx_conf_handler</b></font>
    </p>
    <p>
      {
    </p>
    <p>
      &#160;&#160;&#160;&#160;...
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;// &#22788;&#29702;&#27169;&#22359;&#30340;&#25351;&#20196;&#38598;
    </p>
    <p>
      &#160;&#160;&#160;&#160;for (i = 0; ngx_modules[i]; i++) {
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;/* look up the directive in the appropriate modules */
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if (<font color="#f80707">ngx_modules[i]-&gt;type</font>&#160; != NGX_CONF_MODULE
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&amp;&amp; ngx_modules[i]-&gt;type != cf-&gt;module_type)
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;{
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;continue;
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;}
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;cmd = <font color="#fb0404">ngx_modules[i]-&gt;commands</font>;
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if (cmd == NULL) {
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;continue;
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;}
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;for ( /* void */ ; cmd-&gt;name.len; cmd++) {
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if (name-&gt;len != cmd-&gt;name.len) {
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;continue;
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;}
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if (ngx_strcmp(name-&gt;data, cmd-&gt;name.data) != 0) {
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;continue;
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;}
    </p>
    <p>
      
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;/* is the directive's location right ? */
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if (!(cmd-&gt;type &amp; cf-&gt;cmd_type)) {
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if (cmd-&gt;type &amp; NGX_CONF_MULTI) {
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;multi = 1;
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;continue;
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;}
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;goto not_allowed;
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;}
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if (!(cmd-&gt;type &amp; NGX_CONF_BLOCK) &amp;&amp; last != NGX_OK) {
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;ngx_conf_log_error(NGX_LOG_EMERG, cf, 0,
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&quot;directive /&quot;%s/&quot; is not terminated by /&quot;;/&quot;&quot;,
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;name-&gt;data);
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;return NGX_ERROR;
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;}
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if ((cmd-&gt;type &amp; NGX_CONF_BLOCK) &amp;&amp; last != NGX_CONF_BLOCK_START) {
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;ngx_conf_log_error(NGX_LOG_EMERG, cf, 0,
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&quot;directive /&quot;%s/&quot; has no opening /&quot;{/&quot;&quot;,
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;name-&gt;data);
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;return NGX_ERROR;
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;}
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;/* is the directive's argument count right ? */
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if (!(cmd-&gt;type &amp; NGX_CONF_ANY)) {
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if (cmd-&gt;type &amp; NGX_CONF_FLAG) {
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if (cf-&gt;args-&gt;nelts != 2) {
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;goto invalid;
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;}
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;} else if (cmd-&gt;type &amp; NGX_CONF_1MORE) {
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if (cf-&gt;args-&gt;nelts &lt; 2) {
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;goto invalid;
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;}
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;} else if (cmd-&gt;type &amp; NGX_CONF_2MORE) {
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if (cf-&gt;args-&gt;nelts &lt; 3) {
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;goto invalid;
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;}
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;} else if (cf-&gt;args-&gt;nelts &gt; NGX_CONF_MAX_ARGS) {
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;goto invalid;
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;} else if (!(cmd-&gt;type &amp; argument_number[cf-&gt;args-&gt;nelts - 1]))
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;{
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;goto invalid;
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;}
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;}
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;/* set up the directive's configuration context */
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;conf = NULL;
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if (cmd-&gt;type &amp; NGX_DIRECT_CONF) {
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;conf = ((void **) cf-&gt;ctx)[ngx_modules[i]-&gt;index];
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;} else if (cmd-&gt;type &amp; NGX_MAIN_CONF) {
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;conf = &amp;(((void **) cf-&gt;ctx)[ngx_modules[i]-&gt;index]);
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;} else if (cf-&gt;ctx) {
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;confp = *(void **) ((char *) cf-&gt;ctx + cmd-&gt;conf);
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if (confp) {
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;conf = confp[ngx_modules[i]-&gt;ctx_index];
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;}
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;}
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;// &#35843;&#24230;&#25351;&#20196;&#30340;&#38057;&#23376;set
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;rv = <font color="#f70404">cmd-&gt;set</font>(cf, cmd, conf);
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if (rv == NGX_CONF_OK) {
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;return NGX_OK;
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;}
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if (rv == NGX_CONF_ERROR) {
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;return NGX_ERROR;
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;}
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;ngx_conf_log_error(NGX_LOG_EMERG, cf, 0,
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&quot;/&quot;%s/&quot; directive %s&quot;, name-&gt;data, rv);
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;return NGX_ERROR;
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;}
    </p>
    <p>
      &#160;&#160;&#160;&#160;}
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;...
    </p>
    <p>
      }
    </p>
  </body>
</html></richcontent>
</node>
</node>
</node>
</node>
</node>
<node CREATED="1388815518113" FOLDED="true" ID="ID_1385280124" MODIFIED="1388927851847" TEXT="ngx_signal_process">
<node CREATED="1388924706878" ID="ID_11800718" MODIFIED="1388924709219" TEXT="&#x82e5;&#x6709;&#x4fe1;&#x53f7;&#xff0c;&#x5219;&#x8fdb;&#x5165;ngx_signal_process()&#x5904;&#x7406;"/>
</node>
<node CREATED="1388815527945" FOLDED="true" ID="ID_1961260984" MODIFIED="1388927852343" TEXT="ngx_init_signals">
<node CREATED="1388924721183" ID="ID_385407558" MODIFIED="1388924723148" TEXT="&#x8c03;&#x7528;ngx_init_signals()&#x521d;&#x59cb;&#x5316;&#x4fe1;&#x53f7;&#xff1b;&#x4e3b;&#x8981;&#x5b8c;&#x6210;&#x4fe1;&#x53f7;&#x5904;&#x7406;&#x7a0b;&#x5e8f;&#x7684;&#x6ce8;&#x518c;"/>
</node>
<node CREATED="1388815539410" FOLDED="true" ID="ID_1755683351" MODIFIED="1388927852855" TEXT="ngx_daemon">
<node CREATED="1388924751415" ID="ID_1153379986" MODIFIED="1388924753236" TEXT="&#x82e5;&#x65e0;&#x7ee7;&#x627f;sockets&#xff0c;&#x4e14;&#x8bbe;&#x7f6e;&#x4e86;&#x5b88;&#x62a4;&#x8fdb;&#x7a0b;&#x6807;&#x8bc6;&#xff0c;&#x5219;&#x8c03;&#x7528;ngx_daemon()&#x521b;&#x5efa;&#x5b88;&#x62a4;&#x8fdb;&#x7a0b;"/>
</node>
<node CREATED="1388815551105" ID="ID_1828039466" MODIFIED="1388815552096" TEXT="ngx_open_pipes"/>
<node BACKGROUND_COLOR="#126301" COLOR="#080f05" CREATED="1388815601954" ID="ID_1606532359" MODIFIED="1389078435757" STYLE="fork" TEXT="process_cycle">
<edge COLOR="#808080" STYLE="bezier" WIDTH="thin"/>
<font BOLD="true" NAME="SansSerif" SIZE="12"/>
<node CREATED="1388815607274" ID="ID_725828147" MODIFIED="1388933091227" TEXT="ngx_single_process_cycle"/>
<<<<<<< HEAD
<node BACKGROUND_COLOR="#27da00" CREATED="1388815615217" ID="ID_259231819" MODIFIED="1389103420782" TEXT="ngx_master_process_cycle">
=======
<node BACKGROUND_COLOR="#27da00" CREATED="1388815615217" ID="ID_259231819" MODIFIED="1389084329994" TEXT="ngx_master_process_cycle">
>>>>>>> branch 'master' of https://github.com/galebo/nginx-study.git
<font BOLD="true" NAME="SansSerif" SIZE="12"/>
<node CREATED="1388931843778" FOLDED="true" ID="ID_1985408862" LINK="http://blog.csdn.net/kenbinzhang/article/details/4696730" MODIFIED="1389099255989" TEXT="&#x6e90;&#x7801;&#x5206;&#x6790;">
<node CREATED="1388931863641" ID="ID_550103750" MODIFIED="1389099248016">
<richcontent TYPE="NODE"><html>
  <head>
    
  </head>
  <body>
    <p>
      &#22312;ngx_master_process_cycle&#20013;&#65292;&#20250;&#26681;&#25454;&#37197;&#32622;&#25991;&#20214;&#30340;worker_processes&#20540;&#21019;&#24314;&#22810;&#20010;&#23376;&#36827;&#31243;&#65292;&#21363;&#19968;&#20010;master&#36827;&#31243;&#21644;&#22810;&#20010;worker&#36827;&#31243;&#12290;&#36827;&#31243;&#20043;&#38388;&#12289;&#36827;&#31243;&#19982;&#22806;&#37096;&#20043;&#38388;&#20445;&#25345;&#36890;&#20449;&#65292;&#36827;&#31243;&#20043;&#38388;&#26159;&#36890;&#36807;socketpair&#36827;&#34892;&#36890;&#20449;&#30340;&#65292;socketpair&#26159;&#19968;&#23545;&#20840;&#21452;&#24037;&#30340;&#26080;&#21517;socket&#65292;&#21487;&#20197;&#24403;&#20316;&#31649;&#36947;&#20351;&#29992;&#65292;&#21644;&#31649;&#36947;&#19981;&#21516;&#30340;&#26159;&#65292;&#27599;&#26465;socket&#26082;&#21487;&#20197;&#35835;&#20063;&#21487;&#20197;&#20889;&#65292;&#32780;&#31649;&#36947;&#21482;&#33021;&#29992;&#20110;&#20889;&#25110;&#32773;&#29992;&#20110;&#35835;&#65307;&#36827;&#31243;&#19982;&#22806;&#37096;&#20043;&#38388;&#26159;&#36890;&#36807;&#20449;&#21495;&#36890;&#20449;&#30340;&#12290;
    </p>
    <p>
      
    </p>
    <p>
      master&#36827;&#31243;&#20027;&#35201;&#36827;&#34892;&#19968;&#20123;&#20840;&#23616;&#24615;&#30340;&#21021;&#22987;&#21270;&#24037;&#20316;&#21644;&#31649;&#29702;worker&#30340;&#24037;&#20316;&#65307;&#20107;&#20214;&#22788;&#29702;&#26159;&#22312;worker&#20013;&#36827;&#34892;&#30340;&#12290;
    </p>
    <p>
      
    </p>
    <p>
      &#36827;&#31243;&#21551;&#21160;&#30340;&#36807;&#31243;&#20013;&#65292;&#26377;&#19968;&#20123;&#37325;&#35201;&#30340;&#20840;&#23616;&#25968;&#25454;&#20250;&#34987;&#35774;&#32622;&#65292;&#26368;&#37325;&#35201;&#30340;&#26159;&#36827;&#31243;&#34920;ngx_processes&#65292;master&#27599;&#21019;&#24314;&#19968;&#20010;worker&#37117;&#20250;&#25226;&#19968;&#20010;&#35774;&#32622;&#22909;&#30340;ngx_process_t&#32467;&#26500;&#21464;&#37327;&#25918;&#20837;ngx_processes&#20013;&#65292;&#36827;&#31243;&#34920;&#38271;&#24230;&#20026;1024&#65292;&#21018;&#21019;&#24314;&#30340;&#36827;&#31243;&#23384;&#25918;&#22312;ngx_process_slot&#20301;&#32622;&#65292;ngx_last_process&#26159;&#36827;&#31243;&#34920;&#20013;&#26368;&#21518;&#19968;&#20010;&#23384;&#37327;&#36827;&#31243;&#30340;&#19979;&#19968;&#20010;&#20301;&#32622;&#65292;ngx_process_t&#26159;&#36827;&#31243;&#22312;nginx&#20013;&#30340;&#25277;&#35937;&#65306;
    </p>
    <p>
      
    </p>
    <p>
      
    </p>
    <p>
      &#36827;&#31243;&#30340;&#21551;&#21160;&#36807;&#31243;&#26159;&#27604;&#36739;&#37325;&#35201;&#30340;&#19968;&#20010;&#29615;&#33410;&#65292;&#20026;&#20102;&#25226;&#36825;&#20010;&#36807;&#31243;&#20998;&#26512;&#36879;&#24443;&#65292;&#19979;&#38754;&#20250;&#22810;&#37319;&#29992;&#27880;&#37322;&#20195;&#30721;&#30340;&#26041;&#24335;&#20998;&#26512;&#12290;
    </p>
    <p>
      
    </p>
    <p>
      &#39318;&#20808;&#20998;&#26512;ngx_master_process_cycle&#20989;&#25968;&#65292;&#21487;&#20197;&#20998;&#35299;&#20026;&#20197;&#19979;&#21508;&#27493;&#39588;&#65306;
    </p>
    <p>
      
    </p>
    <p>
      1&#12289;master&#35774;&#32622;&#19968;&#20123;&#38656;&#35201;&#22788;&#29702;&#30340;&#20449;&#21495;&#65292;&#36825;&#20123;&#20449;&#21495;&#21253;&#25324;SIGCHLD,SIGALRM,SIGIO,SIGINT,NGX_RECONFIGURE_SIGNAL(SIGHUP),NGX_REOPEN_SIGNAL(SIGUSR1),
    </p>
    <p>
      NGX_NOACCEPT_SIGNAL(SIGWINCH),NGX_TERMINATE_SIGNAL(SIGTERM),NGX_SHUTDOWN_SIGNAL(SIGQUIT),
    </p>
    <p>
      NGX_CHANGEBIN_SIGNAL(SIGUSR2)&#65307;
    </p>
    <p>
      
    </p>
    <p>
      2&#12289;&#35843;&#29992;ngx_setproctilte&#35774;&#32622;&#36827;&#31243;&#26631;&#39064;&#65292;title = &quot;master process&quot; + ngx_argv[0] + ... + ngx_argv[ngx_argc-1]&#65307;
    </p>
    <p>
      
    </p>
    <p>
      3&#12289;&#35843;&#29992;ngx_start_worker_processes(cycle, ccf-&gt;worker_processes, NGX_PROCESS_RESPAWN)&#21551;&#21160;worker&#36827;&#31243;&#65307;
    </p>
    <p>
      
    </p>
    <p>
      4&#12289;&#35843;&#29992;ngx_start_cache_manager_processes(cycle, 0)&#21551;&#21160;&#25991;&#20214;cache&#31649;&#29702;&#36827;&#31243;&#65292;&#26377;&#20123;&#27169;&#22359;&#38656;&#35201;&#25991;&#20214;cache&#65292;&#27604;&#22914;fastcgi&#27169;&#22359;&#65292;&#36825;&#20123;&#27169;&#22359;&#20250;&#25226;&#25991;&#20214;cache&#36335;&#24452;&#28155;&#21152;&#21040;cycle-&gt;paths&#20013;&#65292;&#25991;&#20214;cache&#31649;&#29702;&#36827;&#31243;&#20250;&#23450;&#26399;&#35843;&#29992;&#36825;&#20123;&#27169;&#22359;&#30340;&#25991;&#20214;cache&#22788;&#29702;&#38057;&#23376;&#22788;&#29702;&#19968;&#19979;&#25991;&#20214;cache&#65307;
    </p>
    <p>
      
    </p>
    <p>
      5&#12289;master&#24490;&#29615;&#22788;&#29702;&#20449;&#21495;&#37327;&#12290;
    </p>
    <p>
      &#160;&#160;&#160;&#160;ngx_new_binary = 0;
    </p>
    <p>
      &#160;&#160;&#160;&#160;delay = 0;
    </p>
    <p>
      &#160;&#160;&#160;&#160;live = 1;
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;for ( ;; ) {
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;// delay&#29992;&#26469;&#35774;&#32622;&#31561;&#24453;worker&#36864;&#20986;&#30340;&#26102;&#38388;&#65292;master&#25509;&#25910;&#20102;&#36864;&#20986;&#20449;&#21495;&#21518;&#39318;&#20808;&#21457;&#36865;&#36864;&#20986;&#20449;&#21495;&#32473;worker&#65292;
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;// &#32780;worker&#36864;&#20986;&#38656;&#35201;&#19968;&#20123;&#26102;&#38388;
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if (delay) {
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;delay *= 2;
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;ngx_log_debug1(NGX_LOG_DEBUG_EVENT, cycle-&gt;log, 0,
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&quot;temination cycle: %d&quot;, delay);
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;itv.it_interval.tv_sec = 0;
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;itv.it_interval.tv_usec = 0;
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;itv.it_value.tv_sec = delay / 1000;
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;itv.it_value.tv_usec = (delay % 1000 ) * 1000;
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;// &#35774;&#32622;&#23450;&#26102;&#22120;
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if (setitimer(ITIMER_REAL, &amp;itv, NULL) == -1) {
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;ngx_log_error(NGX_LOG_ALERT, cycle-&gt;log, ngx_errno,
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&quot;setitimer() failed&quot;);
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;}
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;}
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;ngx_log_debug0(NGX_LOG_DEBUG_EVENT, cycle-&gt;log, 0, &quot;sigsuspend&quot;);
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;// &#25346;&#36215;&#20449;&#21495;&#37327;&#65292;&#31561;&#24453;&#23450;&#26102;&#22120;
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;sigsuspend(&amp;set);
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;ngx_time_update(0, 0);
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;ngx_log_debug0(NGX_LOG_DEBUG_EVENT, cycle-&gt;log, 0, &quot;wake up&quot;);
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;// &#25910;&#21040;&#20102;SIGCHLD&#20449;&#21495;&#65292;&#26377;worker&#36864;&#20986;&#65288;ngx_reap==1&#65289;
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if (ngx_reap) {
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;ngx_reap = 0;
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;ngx_log_debug0(NGX_LOG_DEBUG_EVENT, cycle-&gt;log, 0, &quot;reap children&quot;);
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;// &#22788;&#29702;&#25152;&#26377;worker&#65292;&#22914;&#26524;&#26377;worker&#24322;&#24120;&#36864;&#20986;&#21017;&#37325;&#21551;&#36825;&#20010;worker&#65292;&#22914;&#26524;&#25152;&#26377;worker&#37117;&#36864;&#20986;
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;// &#36820;&#22238;0&#36171;&#20540;&#32473;live
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;live = ngx_reap_children(cycle);
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;}
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;// &#22914;&#26524;worker&#37117;&#24050;&#32463;&#36864;&#20986;&#65292;
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;// &#24182;&#19988;&#25910;&#21040;&#20102;NGX_CMD_TERMINATE&#21629;&#20196;&#25110;&#32773;SIGTERM&#20449;&#21495;&#25110;&#32773;SIGINT&#20449;&#21495;(ngx_terminate=1)
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;// &#25110;&#32773;NGX_CMD_QUIT&#21629;&#20196;&#25110;&#32773;SIGQUIT&#20449;&#21495;(ngx_quit=1)&#65292;&#21017;master&#36864;&#20986;
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if (!live &amp;&amp; (ngx_terminate || ngx_quit)) {
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;ngx_master_process_exit(cycle);
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;}
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;// &#25910;&#21040;&#20102;NGX_CMD_TERMINATE&#21629;&#20196;&#25110;&#32773;SIGTERM&#20449;&#21495;&#25110;&#32773;SIGINT&#20449;&#21495;&#65292;
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;// &#36890;&#30693;&#25152;&#26377;worker&#36864;&#20986;&#65292;&#24182;&#19988;&#31561;&#24453;worker&#36864;&#20986;
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if (ngx_terminate) {
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;// &#35774;&#32622;&#24310;&#26102;
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if (delay == 0) {
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;delay = 50;
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;}
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if (delay &gt; 1000) {
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;// &#24310;&#26102;&#24050;&#21040;&#65292;&#32473;&#25152;&#26377;worker&#21457;&#36865;SIGKILL&#20449;&#21495;&#65292;&#24378;&#21046;&#26432;&#27515;worker
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;ngx_signal_worker_processes(cycle, SIGKILL);
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;} else {
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;// &#32473;&#25152;&#26377;worker&#21457;&#36865;SIGTERM&#20449;&#21495;&#65292;&#36890;&#30693;worker&#36864;&#20986;
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;ngx_signal_worker_processes(cycle,
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; ngx_signal_value(NGX_TERMINATE_SIGNAL));
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;}
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;continue;
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;}
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;// &#25910;&#21040;&#20102;NGX_CMD_QUIT&#21629;&#20196;&#25110;&#32773;SIGQUIT&#20449;&#21495;
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if (ngx_quit) {
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;// &#32473;&#25152;&#26377;worker&#21457;&#36865;SIGQUIT&#20449;&#21495;
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;ngx_signal_worker_processes(cycle,
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; ngx_signal_value(NGX_SHUTDOWN_SIGNAL));
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;// &#20851;&#38381;&#25152;&#26377;&#30417;&#21548;&#30340;socket
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;ls = cycle-&gt;listening.elts;
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;for (n = 0; n &lt; cycle-&gt;listening.nelts; n++) {
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if (ngx_close_socket(ls[n].fd) == -1) {
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;ngx_log_error(NGX_LOG_EMERG, cycle-&gt;log, ngx_socket_errno,
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;ngx_close_socket_n &quot; %V failed&quot;,
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&amp;ls[n].addr_text);
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;}
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;}
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;cycle-&gt;listening.nelts = 0;
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;continue;
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;}
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;// &#25910;&#21040;&#20102;SIGHUP&#20449;&#21495;
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if (ngx_reconfigure) {
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;ngx_reconfigure = 0;
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;// &#20195;&#30721;&#24050;&#32463;&#34987;&#26367;&#25442;&#65292;&#37325;&#21551;worker&#65292;&#19981;&#38656;&#35201;&#37325;&#26032;&#21021;&#22987;&#21270;&#37197;&#32622;
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if (ngx_new_binary) {
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;ngx_start_worker_processes(cycle, ccf-&gt;worker_processes,
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;NGX_PROCESS_RESPAWN);
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;ngx_start_cache_manager_processes(cycle, 0);
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;ngx_noaccepting = 0;
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;continue;
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;}
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;ngx_log_error(NGX_LOG_NOTICE, cycle-&gt;log, 0, &quot;reconfiguring&quot;);
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;// &#37325;&#26032;&#21021;&#22987;&#21270;&#37197;&#32622;
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;cycle = ngx_init_cycle(cycle);
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if (cycle == NULL) {
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;cycle = (ngx_cycle_t *) ngx_cycle;
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;continue;
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;}
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;// &#37325;&#21551;worker
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;ngx_cycle = cycle;
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;ccf = (ngx_core_conf_t *) ngx_get_conf(cycle-&gt;conf_ctx,
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;ngx_core_module);
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;ngx_start_worker_processes(cycle, ccf-&gt;worker_processes,
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;NGX_PROCESS_JUST_RESPAWN);
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;ngx_start_cache_manager_processes(cycle, 1);
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;live = 1;
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;ngx_signal_worker_processes(cycle,
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; ngx_signal_value(NGX_SHUTDOWN_SIGNAL));
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;}
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;// &#24403;ngx_noaccepting=1&#30340;&#26102;&#20505;&#20250;&#25226;ngx_restart&#35774;&#20026;1&#65292;&#37325;&#21551;worker
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if (ngx_restart) {
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;ngx_restart = 0;
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;ngx_start_worker_processes(cycle, ccf-&gt;worker_processes,
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;NGX_PROCESS_RESPAWN);
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;ngx_start_cache_manager_processes(cycle, 0);
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;live = 1;
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;}
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;// &#25910;&#21040;SIGUSR1&#20449;&#21495;&#65292;&#37325;&#26032;&#25171;&#24320;log&#25991;&#20214;
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if (ngx_reopen) {
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;ngx_reopen = 0;
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;ngx_log_error(NGX_LOG_NOTICE, cycle-&gt;log, 0, &quot;reopening logs&quot;);
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;ngx_reopen_files(cycle, ccf-&gt;user);
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;ngx_signal_worker_processes(cycle,
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; ngx_signal_value(NGX_REOPEN_SIGNAL));
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;}
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;// &#25910;&#21040;SIGUSR2&#20449;&#21495;&#65292;&#28909;&#20195;&#30721;&#26367;&#25442;
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if (ngx_change_binary) {
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;ngx_change_binary = 0;
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;ngx_log_error(NGX_LOG_NOTICE, cycle-&gt;log, 0, &quot;changing binary&quot;);
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;// &#35843;&#29992;execve&#25191;&#34892;&#26032;&#30340;&#20195;&#30721;
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;ngx_new_binary = ngx_exec_new_binary(cycle, ngx_argv);
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;}
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;// &#25910;&#21040;SIGWINCH&#20449;&#21495;&#65292;&#19981;&#20877;&#25509;&#25910;&#35831;&#27714;&#65292;worker&#36864;&#20986;&#65292;master&#19981;&#36864;&#20986;
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if (ngx_noaccept) {
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;ngx_noaccept = 0;
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;ngx_noaccepting = 1;
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;ngx_signal_worker_processes(cycle,
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; ngx_signal_value(NGX_SHUTDOWN_SIGNAL));
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;}
    </p>
    <p>
      &#160;&#160;&#160;&#160;}
    </p>
    <p>
      
    </p>
  </body>
</html>
</richcontent>
</node>
</node>
<node CREATED="1388930247330" ID="ID_1813665916" MODIFIED="1389078504027" TEXT="ngx_start_worker_processes">
<node CREATED="1388932028178" FOLDED="true" ID="ID_867134993" MODIFIED="1389107101771" TEXT="&#x6e90;&#x7801;&#x5206;&#x6790;">
<node CREATED="1388932040042" ID="ID_1608569062" MODIFIED="1389099148769">
<richcontent TYPE="NODE"><html>
  <head>
    
  </head>
  <body>
    <p>
      &#30495;&#27491;&#21019;&#24314;worker&#23376;&#36827;&#31243;&#30340;&#20989;&#25968;&#26159;ngx_start_worker_processes&#65292;&#36825;&#20010;&#20989;&#25968;&#26412;&#36523;&#24456;&#31616;&#21333;&#65306;
    </p>
    <p>
      
    </p>
<<<<<<< HEAD
=======
  </body>
</html></richcontent>
</node>
</node>
<node CREATED="1388930247330" ID="ID_1813665916" MODIFIED="1389078504027" TEXT="ngx_start_worker_processes">
<node CREATED="1388932028178" FOLDED="true" ID="ID_867134993" MODIFIED="1389073293500" TEXT="&#x6e90;&#x7801;&#x5206;&#x6790;">
<node CREATED="1388932040042" ID="ID_1608569062" MODIFIED="1389073193797">
<richcontent TYPE="NODE"><html>
  <head>
    
  </head>
  <body>
>>>>>>> branch 'master' of https://github.com/galebo/nginx-study.git
    <p>
      static void
    </p>
    <p>
      ngx_start_worker_processes(ngx_cycle_t *cycle, ngx_int_t n, ngx_int_t type)
    </p>
    <p>
      {
    </p>
    <p>
      &#160;&#160;&#160;&#160;ngx_int_t&#160;&#160;&#160;&#160;&#160;&#160;i;&#160;&#160;
    </p>
    <p>
      &#160;&#160;&#160;&#160;ngx_channel_t&#160;&#160;ch;&#160;
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;ngx_log_error(NGX_LOG_NOTICE, cycle-&gt;log, 0, &quot;start worker processes&quot;);
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;// &#20256;&#36882;&#32473;&#20854;&#20182;worker&#23376;&#36827;&#31243;&#30340;&#21629;&#20196;&#65306;&#25171;&#24320;&#36890;&#20449;&#31649;&#36947;
    </p>
    <p>
      &#160;&#160;&#160;&#160;ch.command = NGX_CMD_OPEN_CHANNEL;
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;// &#21019;&#24314;n&#20010;worker&#23376;&#36827;&#31243;
    </p>
    <p>
      &#160;&#160;&#160;&#160;for (i = 0; i &lt; n; i++) {
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;cpu_affinity = ngx_get_cpu_affinity(i);
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;// ngx_spawn_process&#21019;&#24314;worker&#23376;&#36827;&#31243;&#24182;&#21021;&#22987;&#21270;&#30456;&#20851;&#36164;&#28304;&#21644;&#23646;&#24615;&#65292;
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;// &#28982;&#21518;&#25191;&#34892;&#23376;&#36827;&#31243;&#30340;&#25191;&#34892;&#20989;&#25968;ngx_worker_process_cycle
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<font color="#f70404">ngx_spawn_process</font>(cycle, <font color="#fa0505">ngx_worker_process_cycle</font>, NULL,
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&quot;worker process&quot;, type);
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;// &#21521;&#20043;&#21069;&#24050;&#32463;&#21019;&#24314;&#30340;&#25152;&#26377;worker&#24191;&#25773;&#24403;&#21069;&#21019;&#24314;&#30340;worker&#36827;&#31243;&#30340;&#20449;&#24687;&#65292;&#21518;&#38754;&#20250;&#35814;&#32454;&#20998;&#26512;
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;ch.pid = ngx_processes[ngx_process_slot].pid;
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;ch.slot = ngx_process_slot;
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;ch.fd = ngx_processes[ngx_process_slot].channel[0];
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<font color="#f90606">ngx_pass_open_channel</font>(cycle, &amp;ch);
    </p>
    <p>
      &#160;&#160;&#160;&#160;}&#160;&#160;&#160;
    </p>
    <p>
      }
    </p>
  </body>
</html></richcontent>
</node>
</node>
<<<<<<< HEAD
<node CREATED="1388930272346" ID="ID_1607397235" MODIFIED="1389103420782" TEXT="ngx_worker_process_cycle">
<arrowlink DESTINATION="ID_259231819" ENDARROW="Default" ENDINCLINATION="-62;-102;" ID="Arrow_ID_1060630299" STARTARROW="Default" STARTINCLINATION="171;-33;"/>
<node CREATED="1388932573234" FOLDED="true" ID="ID_600232947" LINK="http://blog.csdn.net/kenbinzhang/article/details/4696742" MODIFIED="1389104713978" TEXT="&#x6e90;&#x7801;&#x5206;&#x6790;">
=======
<node CREATED="1388930272346" ID="ID_1607397235" MODIFIED="1389079418574" TEXT="ngx_worker_process_cycle">
<node CREATED="1388932573234" FOLDED="true" ID="ID_600232947" LINK="http://blog.csdn.net/kenbinzhang/article/details/4696742" MODIFIED="1388932940177" TEXT="&#x6e90;&#x7801;&#x5206;&#x6790;">
>>>>>>> branch 'master' of https://github.com/galebo/nginx-study.git
<node CREATED="1388932593882" ID="ID_1952316589" MODIFIED="1388932634975">
<richcontent TYPE="NODE"><html>
  <head>
    
  </head>
  <body>
    <p>
      
    </p>
    <p>
      static void
    </p>
    <p>
      ngx_worker_process_cycle(ngx_cycle_t *cycle, void *data)
    </p>
    <p>
      {
    </p>
    <p>
      &#160;&#160;&#160;&#160;ngx_uint_t&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;i;
    </p>
    <p>
      &#160;&#160;&#160;&#160;ngx_connection_t&#160;&#160;*c;
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;// &#21021;&#22987;&#21270;
    </p>
    <p>
      &#160;&#160;&#160;&#160;ngx_worker_process_init(cycle, 1);
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;ngx_setproctitle(&quot;worker process&quot;);
    </p>
    <p>
      
    </p>
    <p>
      #if (NGX_THREADS)
    </p>
    <p>
      &#160;&#160;&#160;// &#30053;&#21435;&#20851;&#20110;&#32447;&#31243;&#30340;&#20195;&#30721;
    </p>
    <p>
      #endif
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;for ( ;; ) {
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;// &#36864;&#20986;&#29366;&#24577;&#24050;&#35774;&#32622;&#65292;&#20851;&#38381;&#25152;&#26377;&#36830;&#25509;
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if (ngx_exiting) {
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;c = cycle-&gt;connections;
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;for (i = 0; i &lt; cycle-&gt;connection_n; i++) {
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;/* THREAD: lock */
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if (c[i].fd != -1 &amp;&amp; c[i].idle) {
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;c[i].close = 1;
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;c[i].read-&gt;handler(c[i].read);
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;}
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;}
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if (ngx_event_timer_rbtree.root == ngx_event_timer_rbtree.sentinel)
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;{
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;ngx_log_error(NGX_LOG_NOTICE, cycle-&gt;log, 0, &quot;exiting&quot;);
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;ngx_worker_process_exit(cycle);
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;}
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;}
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;ngx_log_debug0(NGX_LOG_DEBUG_EVENT, cycle-&gt;log, 0, &quot;worker cycle&quot;);
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;// &#22788;&#29702;&#20107;&#20214;&#21644;&#35745;&#26102;
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;ngx_process_events_and_timers(cycle);
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;// &#25910;&#21040;NGX_CMD_TERMINATE&#21629;&#20196;
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if (ngx_terminate) {
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;ngx_log_error(NGX_LOG_NOTICE, cycle-&gt;log, 0, &quot;exiting&quot;);
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;// &#28165;&#29702;&#21518;&#36827;&#31243;&#36864;&#20986;&#65292;&#20250;&#35843;&#29992;&#25152;&#26377;&#27169;&#22359;&#30340;&#38057;&#23376;exit_process
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;ngx_worker_process_exit(cycle);
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;}
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;// &#25910;&#21040;NGX_CMD_QUIT&#21629;&#20196;
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if (ngx_quit) {
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;ngx_quit = 0;
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;ngx_log_error(NGX_LOG_NOTICE, cycle-&gt;log, 0,
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&quot;gracefully shutting down&quot;);
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;ngx_setproctitle(&quot;worker process is shutting down&quot;);
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if (!ngx_exiting) {
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;// &#20851;&#38381;&#30417;&#21548;socket&#65292;&#35774;&#32622;&#36864;&#20986;&#29366;&#24577;
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;ngx_close_listening_sockets(cycle);
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;ngx_exiting = 1;
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;}
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;}
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;// &#25910;&#21040;NGX_CMD_REOPEN&#21629;&#20196;&#65292;&#37325;&#26032;&#25171;&#24320;log
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if (ngx_reopen) {
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;ngx_reopen = 0;
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;ngx_log_error(NGX_LOG_NOTICE, cycle-&gt;log, 0, &quot;reopening logs&quot;);
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;ngx_reopen_files(cycle, -1);
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;}
    </p>
    <p>
      &#160;&#160;&#160;&#160;}
    </p>
    <p>
      }
    </p>
  </body>
</html></richcontent>
</node>
</node>
<<<<<<< HEAD
<node CREATED="1388930301538" ID="ID_1987165589" MODIFIED="1389103127272" TEXT="ngx_worker_process_init">
<node CREATED="1388932704738" FOLDED="true" ID="ID_1469313095" MODIFIED="1389105043650" TEXT="&#x6e90;&#x7801;&#x5206;&#x6790;">
<node CREATED="1388932718970" ID="ID_213440528" MODIFIED="1389104813146">
=======
<node CREATED="1388930301538" FOLDED="true" ID="ID_1987165589" MODIFIED="1389084872642" TEXT="ngx_worker_process_init">
<node CREATED="1388930326130" ID="ID_175739607" LINK="#ID_475746055" MODIFIED="1389070614353">
<richcontent TYPE="NODE"><html>
  <head>
    
  </head>
  <body>
    <p>
      &#160;&#160;&#160;&#160;// &#35843;&#24230;&#25152;&#26377;&#27169;&#22359;&#30340;&#38057;&#23376;init_process
    </p>
    <p>
      &#160;&#160;&#160;&#160;for (i = 0; ngx_modules[i]; i++) {
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if (ngx_modules[i]-&gt;init_process) {
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if (ngx_modules[i]-&gt;<font color="#f90101">init_process</font>(cycle) == NGX_ERROR) {
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;/* fatal */
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;exit(2);
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;}
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;}
    </p>
    <p>
      &#160;&#160;&#160;&#160;}
    </p>
  </body>
</html></richcontent>
</node>
<node CREATED="1388932704738" FOLDED="true" ID="ID_1469313095" MODIFIED="1388932963297" TEXT="&#x6e90;&#x7801;&#x5206;&#x6790;">
<node CREATED="1388932718970" ID="ID_213440528" MODIFIED="1388932961441">
>>>>>>> branch 'master' of https://github.com/galebo/nginx-study.git
<richcontent TYPE="NODE"><html>
  <head>
    
  </head>
  <body>
    <p>
      worker&#23376;&#36827;&#31243;&#30340;&#21021;&#22987;&#21270;&#20989;&#25968;&#26159;ngx_worker_process_init(ngx_cycle_t *cycle, ngx_uint_t priority)&#65292;&#36825;&#20010;&#20989;&#25968;&#21487;&#20998;&#35299;&#20026;&#20197;&#19979;&#27493;&#39588;&#65306;
    </p>
    <p>
      
    </p>
    <p>
      1&#12289;&#35774;&#32622;ngx_process = NGX_PROCESS_WORKER,&#22312;master&#36827;&#31243;&#20013;&#36825;&#20010;&#21464;&#37327;&#34987;&#35774;&#32622;&#20026;NGX_PROCESS_MASTER&#65307;
    </p>
    <p>
      
    </p>
    <p>
      2&#12289;&#20840;&#23616;&#24615;&#30340;&#35774;&#32622;&#65292;&#26681;&#25454;&#20840;&#23616;&#30340;&#37197;&#32622;&#20449;&#24687;&#35774;&#32622;&#25191;&#34892;&#29615;&#22659;&#12289;&#20248;&#20808;&#32423;&#12289;&#38480;&#21046;&#12289;setgid&#12289;setuid&#12289;&#20449;&#21495;&#21021;&#22987;&#21270;&#31561;&#65307;
    </p>
    <p>
      
    </p>
    <p>
      3&#12289;<font color="#fb0808">&#35843;&#29992;&#25152;&#26377;&#27169;&#22359;&#30340;&#38057;&#23376;init_process&#65307;</font>
    </p>
    <p>
      &#160;&#160;&#160;&#160;for (i = 0; ngx_modules[i]; i++) {
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if (ngx_modules[i]-&gt;init_process) {
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if (ngx_modules[i]-&gt;init_process(cycle) == NGX_ERROR) {
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;/* fatal */
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;exit(2);
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;}
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;}
    </p>
    <p>
      &#160;&#160;&#160;&#160;}
    </p>
    <p>
      4&#12289;<font color="#fa0909">&#20851;&#38381;&#19981;&#20351;&#29992;&#30340;socket&#65292;&#20851;&#38381;&#24403;&#21069;worker&#30340;channel[0]&#21477;&#26564;&#21644;&#20854;&#20182;worker&#30340;channel[1]&#21477;&#26564;&#65292;&#24403;&#21069;worker&#20250;&#20351;&#29992;&#20854;&#20182;worker&#30340;channel[0]&#21477;&#26564;&#21457;&#36865;&#28040;&#24687;&#65292;&#20351;&#29992;&#24403;&#21069;worker&#30340;channel[1]&#21477;&#26564;&#30417;&#21548;&#21487;&#35835;&#20107;&#20214;&#65306;</font>
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;for (n = 0; n &lt; ngx_last_process; n++) {
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if (ngx_processes[n].pid == -1) {
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;continue;
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;}&#160;&#160;&#160;
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if (n == ngx_process_slot) {
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;continue;
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;}&#160;&#160;&#160;
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if (ngx_processes[n].channel[1] == -1) {
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;continue;
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;}&#160;&#160;&#160;
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if (close(ngx_processes[n].channel[1]) == -1) {
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;ngx_log_error(NGX_LOG_ALERT, cycle-&gt;log, ngx_errno,
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&quot;close() channel failed&quot;);
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;}&#160;&#160;&#160;
    </p>
    <p>
      &#160;&#160;&#160;&#160;}&#160;&#160;&#160;
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;if (close(ngx_processes[ngx_process_slot].channel[0]) == -1) {
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;ngx_log_error(NGX_LOG_ALERT, cycle-&gt;log, ngx_errno,&quot;close() channel failed&quot;);
    </p>
    <p>
      &#160;&#160;&#160;&#160;}&#160;&#160;&#160;
    </p>
    <p>
      
    </p>
    <p>
      5&#12289;&#22312;&#24403;&#21069;worker&#30340;channel[1]&#21477;&#26564;&#30417;&#21548;&#21487;&#35835;&#20107;&#20214;&#65306;
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;if (<font color="#fc0707">ngx_add_channel_event</font>(cycle, ngx_channel, NGX_READ_EVENT,&#160;<font color="#fd0e0e">ngx_channel_handler</font>)&#160;&#160;&#160;&#160;&#160;&#160;&#160;== NGX_ERROR)
    </p>
    <p>
      &#160;&#160;&#160;&#160;{
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;/* fatal */
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;exit(2);
    </p>
    <p>
      &#160;&#160;&#160;&#160;}
    </p>
  </body>
</html>
</richcontent>
</node>
</node>
<node CREATED="1389103275370" FOLDED="true" ID="ID_1586195652" MODIFIED="1389106958316" TEXT="ngx_add_channel_event">
<node CREATED="1389103381172" FOLDED="true" ID="ID_57433665" MODIFIED="1389106900099" TEXT="&#x6e90;&#x7801;&#x5206;&#x6790;">
<node CREATED="1389103332523" ID="ID_1606222132" MODIFIED="1389105492554">
<richcontent TYPE="NODE"><html>
  <head>
    
  </head>
  <body>
    <p>
      ngx_int_t
    </p>
    <p>
      ngx_add_channel_event(ngx_cycle_t *cycle, ngx_fd_t fd, ngx_int_t event,
    </p>
    <p>
      &#160;&#160;&#160;&#160;ngx_event_handler_pt handler)
    </p>
    <p>
      {
    </p>
    <p>
      &#160;&#160;&#160;&#160;ngx_event_t&#160;&#160;&#160;&#160;&#160;&#160;&#160;*ev, *rev, *wev;
    </p>
    <p>
      &#160;&#160;&#160;&#160;ngx_connection_t&#160;&#160;*c;
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;c = <font color="#f90606">ngx_get_connection</font>(fd, cycle-&gt;log);
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;if (c == NULL) {
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;return NGX_ERROR;
    </p>
    <p>
      &#160;&#160;&#160;&#160;}
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;c-&gt;pool = cycle-&gt;pool;
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;rev = c-&gt;read;
    </p>
    <p>
      &#160;&#160;&#160;&#160;wev = c-&gt;write;
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;rev-&gt;log = cycle-&gt;log;
    </p>
    <p>
      &#160;&#160;&#160;&#160;wev-&gt;log = cycle-&gt;log;
    </p>
    <p>
      
    </p>
    <p>
      #if (NGX_THREADS)
    </p>
    <p>
      &#160;&#160;&#160;&#160;rev-&gt;lock = &amp;c-&gt;lock;
    </p>
    <p>
      &#160;&#160;&#160;&#160;wev-&gt;lock = &amp;c-&gt;lock;
    </p>
    <p>
      &#160;&#160;&#160;&#160;rev-&gt;own_lock = &amp;c-&gt;lock;
    </p>
    <p>
      &#160;&#160;&#160;&#160;wev-&gt;own_lock = &amp;c-&gt;lock;
    </p>
    <p>
      #endif
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;rev-&gt;channel = 1;
    </p>
    <p>
      &#160;&#160;&#160;&#160;wev-&gt;channel = 1;
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;ev = (event == NGX_READ_EVENT) ? rev : wev;
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;ev-&gt;handler = handler;
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;if (ngx_add_conn &amp;&amp; (ngx_event_flags &amp; NGX_USE_EPOLL_EVENT) == 0) {
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if (<font color="#f70808">ngx_add_conn</font>(c) ==<font color="#f50202">&#160;NGX_ERROR) { </font>
    </p>
    <p>
      <font color="#f50202">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;ngx_free_connection</font>(c);
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;return NGX_ERROR;
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;}
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;} else {
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if (<font color="#f50606">ngx_add_event</font>(ev, event, 0) == NGX_ERROR) {
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;ngx_free_connection(c);
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;return NGX_ERROR;
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;}
    </p>
    <p>
      &#160;&#160;&#160;&#160;}
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;return NGX_OK;
    </p>
    <p>
      }
    </p>
  </body>
</html>
</richcontent>
</node>
</node>
<node CREATED="1389103358419" ID="ID_1698245653" MODIFIED="1389105303945" TEXT="ngx_channel_handler">
<node CREATED="1389103381172" ID="ID_770515578" MODIFIED="1389106843180" TEXT="&#x6e90;&#x7801;&#x5206;&#x6790;">
<node CREATED="1389103332523" ID="ID_280816995" MODIFIED="1389104437820">
<richcontent TYPE="NODE"><html>
  <head>
    
  </head>
  <body>
    <p>
      ngx_add_channel_event&#25226;&#21477;&#26564;ngx_channel(&#24403;&#21069;worker&#30340;channel[1])&#19978;&#24314;&#31435;&#30340;&#36830;&#25509;&#30340;&#21487;&#35835;&#20107;&#20214;&#21152;&#20837;&#20107;&#20214;&#30417;&#25511;&#38431;&#21015;&#65292;
    </p>
    <p>
      &#20107;&#20214;&#22788;&#29702;&#20989;&#25968;&#20026;ngx_channel_hanlder(ngx_event_t *ev)&#12290;
    </p>
    <p>
      &#24403;&#26377;&#21487;&#35835;&#20107;&#20214;&#30340;&#26102;&#20505;&#65292;ngx_channel_handler&#36127;&#36131;&#22788;&#29702;&#28040;&#24687;&#65292;&#36807;&#31243;&#22914;&#19979;&#65306;
    </p>
    <p>
      
    </p>
    <p>
      static void
    </p>
    <p>
      ngx_channel_handler(<font color="#000000">ngx_event_t *ev</font>)
    </p>
    <p>
      {
    </p>
    <p>
      &#160;&#160;&#160;&#160;ngx_int_t&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;n;&#160;&#160;
    </p>
    <p>
      &#160;&#160;&#160;&#160;ngx_channel_t&#160;&#160;&#160;&#160;&#160;&#160;ch;&#160;
    </p>
    <p>
      &#160;&#160;&#160;&#160;ngx_connection_t&#160;&#160;*c;&#160;
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;if (ev-&gt;timedout) {
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;ev-&gt;timedout = 0;
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;return;
    </p>
    <p>
      &#160;&#160;&#160;&#160;}&#160;&#160;&#160;
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;c = ev-&gt;data;
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;ngx_log_debug0(NGX_LOG_DEBUG_CORE, ev-&gt;log, 0, &quot;channel handler&quot;);
    </p>
    <p>
      
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;for ( ;; ) {
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;// &#20174;channel[1]&#20013;&#35835;&#21462;&#28040;&#24687;
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;n = <font color="#ef0000">ngx_read_channel</font>(c-&gt;fd, &amp;ch, sizeof(ngx_channel_t), ev-&gt;log);
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;ngx_log_debug1(NGX_LOG_DEBUG_CORE, ev-&gt;log, 0, &quot;channel: %i&quot;, n);
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if (n == NGX_ERROR) {
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if (ngx_event_flags &amp; NGX_USE_EPOLL_EVENT) {
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<font color="#fa0505">ngx_del_conn</font>(c, 0);
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;}
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<font color="#fa0505">ngx_close_connection</font>(c);
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;return;
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;}
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if (ngx_event_flags &amp; NGX_USE_EVENTPORT_EVENT) {
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if (ngx_add_event(ev, NGX_READ_EVENT, 0) == NGX_ERROR) {
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;return;
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;}
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;}
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if (n == NGX_AGAIN) {
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;return;
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;}
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;ngx_log_debug1(NGX_LOG_DEBUG_CORE, ev-&gt;log, 0,&#160;&#160;&quot;channel command: %d&quot;, ch.command);
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;// &#22788;&#29702;&#28040;&#24687;&#21629;&#20196;
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;switch (ch.command) {
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;case NGX_CMD_QUIT:
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;ngx_quit = 1;
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;break;
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;case NGX_CMD_TERMINATE:
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;ngx_terminate = 1;
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;break;
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;case NGX_CMD_REOPEN:
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;ngx_reopen = 1;
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;break;
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;case NGX_CMD_OPEN_CHANNEL:
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;ngx_log_debug3(NGX_LOG_DEBUG_CORE, ev-&gt;log, 0,&quot;get channel s:%i pid:%P fd:%d&quot;,ch.slot, ch.pid, ch.fd);
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;ngx_processes[ch.slot].pid = ch.pid;
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;ngx_processes[ch.slot].channel[0] = ch.fd;
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;break;
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;case NGX_CMD_CLOSE_CHANNEL:
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;ngx_log_debug4(NGX_LOG_DEBUG_CORE, ev-&gt;log, 0,&quot;close channel s:%i pid:%P our:%P fd:%d&quot;,ch.slot, ch.pid, ngx_processes[ch.slot].pid,
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;ngx_processes[ch.slot].channel[0]);
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if (close(ngx_processes[ch.slot].channel[0]) == -1) {
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;ngx_log_error(NGX_LOG_ALERT, ev-&gt;log, ngx_errno,&#160;&quot;close() channel failed&quot;);
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;}
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;ngx_processes[ch.slot].channel[0] = -1;
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;break;
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;}
    </p>
    <p>
      &#160;&#160;&#160;&#160;}
    </p>
    <p>
      &#65373;
    </p>
  </body>
</html>
</richcontent>
</node>
</node>
</node>
<node CREATED="1389105081619" ID="ID_466734052" MODIFIED="1389105083119" TEXT="ngx_add_channel_event&#x628a;&#x53e5;&#x67c4;ngx_channel(&#x5f53;&#x524d;worker&#x7684;channel[1])&#x4e0a;&#x5efa;&#x7acb;&#x7684;&#x8fde;&#x63a5;&#x7684;&#x53ef;&#x8bfb;&#x4e8b;&#x4ef6;&#x52a0;&#x5165;&#x4e8b;&#x4ef6;&#x76d1;&#x63a7;&#x961f;&#x5217;"/>
</node>
</node>
<node CREATED="1389079455321" ID="ID_881902108" MODIFIED="1389079474479" TEXT="ngx_process_events_and_timers">
<node CREATED="1389084882636" FOLDED="true" ID="ID_993169513" MODIFIED="1389085095397" TEXT="&#x6e90;&#x7801;&#x5206;&#x6790;">
<node CREATED="1389084899026" ID="ID_985900609" MODIFIED="1389084907929">
<richcontent TYPE="NODE"><html>
  <head>
    
  </head>
  <body>
    <p>
      void
    </p>
    <p>
      ngx_process_events_and_timers(ngx_cycle_t *cycle)
    </p>
    <p>
      {
    </p>
    <p>
      &#160;&#160;&#160;&#160;ngx_uint_t&#160;&#160;flags;
    </p>
    <p>
      &#160;&#160;&#160;&#160;ngx_msec_t&#160;&#160;timer, delta;
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;// &#22914;&#26524;&#37197;&#32622;&#25991;&#20214;&#20013;&#35774;&#32622;&#20102;&#26102;&#38388;&#31934;&#24230;
    </p>
    <p>
      &#160;&#160;&#160;&#160;if (ngx_timer_resolution) {
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;timer = NGX_TIMER_INFINITE;
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;flags = 0;
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;} else {
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;timer = ngx_event_find_timer();
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;flags = NGX_UPDATE_TIME;
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;...
    </p>
    <p>
      &#160;&#160;&#160;&#160;}&#160;&#160;
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;// &#33509;accept&#20351;&#29992;&#19978;&#38145;
    </p>
    <p>
      &#160;&#160;&#160;&#160;if (ngx_use_accept_mutex) {
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;/*
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;ngx_accept_disabled&#26159;&#22312;&#30417;&#21548;&#22871;&#25509;&#21475;&#30340;&#20107;&#20214;&#22788;&#29702;&#20989;&#25968;ngx_event_accept&#20013;&#35774;&#32622;&#30340;
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;ngx_accept_disabled = ngx_cycle-&gt;connection_n / 8
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;- ngx_cycle-&gt;free_connection_n;
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;ngx_accept_disabled &gt; 0&#34920;&#31034;&#24403;&#21069;worker&#36827;&#31243;&#24050;&#32463;&#20998;&#37197;&#20102;&#36229;&#36807;7/8&#30340;&#36164;&#28304;&#20102;
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;*/
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if (ngx_accept_disabled &gt; 0) {
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;ngx_accept_disabled--;
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;} else {
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;// &#21152;&#38145;
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if (ngx_trylock_accept_mutex(cycle) == NGX_ERROR) {
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;return;
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;}&#160;&#160;
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;// &#25345;&#26377;&#38145;&#65292;&#35774;&#32622;&#26631;&#24535;&#20301;&#65306;&#25226;&#33719;&#21462;&#21040;&#30340;&#20107;&#20214;&#25918;&#20837;&#24310;&#36831;&#22788;&#29702;&#38431;&#21015;
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if (ngx_accept_mutex_held) {
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;flags |= NGX_POST_EVENTS;
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;} else {
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if (timer == NGX_TIMER_INFINITE
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;|| timer &gt; ngx_accept_mutex_delay)
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;{
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;timer = ngx_accept_mutex_delay;
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;}
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;}
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;}
    </p>
    <p>
      &#160;&#160;&#160;&#160;}
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;delta = ngx_current_msec;
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;// &#35843;&#29992;process_events&#38057;&#23376;&#36718;&#35757;&#20107;&#20214;&#65292;&#26377;&#20123;&#20107;&#20214;&#21363;&#26102;&#35843;&#29992;&#20107;&#20214;&#22788;&#29702;&#20989;&#25968;&#22788;&#29702;&#65292;&#26377;&#20123;&#20107;&#20214;&#25918;&#20837;&#24310;&#36831;&#38431;&#21015;&#31561;&#24453;&#21518;&#38754;&#22788;&#29702;
    </p>
    <p>
      &#160;&#160;&#160;&#160;(void) ngx_process_events(cycle, timer, flags);
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;delta = ngx_current_msec - delta;
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;ngx_log_debug1(NGX_LOG_DEBUG_EVENT, cycle-&gt;log, 0,
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&quot;timer delta: %M&quot;, delta);
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;// &#26377;&#38656;&#35201;&#24310;&#36831;&#22788;&#29702;&#30340;&#30417;&#21548;&#22871;&#25509;&#21475;&#20107;&#20214;
    </p>
    <p>
      &#160;&#160;&#160;&#160;if (ngx_posted_accept_events) {
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;// &#22788;&#29702;
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;ngx_event_process_posted(cycle, &amp;ngx_posted_accept_events);
    </p>
    <p>
      &#160;&#160;&#160;&#160;}
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;// &#37322;&#25918;&#38145;
    </p>
    <p>
      &#160;&#160;&#160;&#160;if (ngx_accept_mutex_held) {
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;ngx_shmtx_unlock(&amp;ngx_accept_mutex);
    </p>
    <p>
      &#160;&#160;&#160;&#160;}
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;if (delta) {
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;ngx_event_expire_timers();
    </p>
    <p>
      &#160;&#160;&#160;&#160;}
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;ngx_log_debug1(NGX_LOG_DEBUG_EVENT, cycle-&gt;log, 0,
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&quot;posted events %p&quot;, ngx_posted_events);
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;// &#26377;&#38656;&#35201;&#24310;&#36831;&#22788;&#29702;&#30340;&#25968;&#25454;&#22871;&#25509;&#21475;&#20107;&#20214;
    </p>
    <p>
      &#160;&#160;&#160;&#160;if (ngx_posted_events) {
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;// &#22788;&#29702;
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if (ngx_threaded) {
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;ngx_wakeup_worker_thread(cycle);
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;} else {
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;ngx_event_process_posted(cycle, &amp;ngx_posted_events);
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;}
    </p>
    <p>
      &#160;&#160;&#160;&#160;}
    </p>
    <p>
      }
    </p>
  </body>
</html></richcontent>
</node>
</node>
<node CREATED="1389085058082" ID="ID_637344757" MODIFIED="1389085061407" TEXT="ngx_process_events"/>
<node CREATED="1389085100480" ID="ID_1918104818" MODIFIED="1389085102129" TEXT="ngx_event_process_posted"/>
</node>
<<<<<<< HEAD
=======
<node CREATED="1389079455321" ID="ID_881902108" MODIFIED="1389079474479" TEXT="ngx_process_events_and_timers">
<node CREATED="1389084882636" FOLDED="true" ID="ID_993169513" MODIFIED="1389085095397" TEXT="&#x6e90;&#x7801;&#x5206;&#x6790;">
<node CREATED="1389084899026" ID="ID_985900609" MODIFIED="1389084907929">
<richcontent TYPE="NODE"><html>
  <head>
    
  </head>
  <body>
    <p>
      void
    </p>
    <p>
      ngx_process_events_and_timers(ngx_cycle_t *cycle)
    </p>
    <p>
      {
    </p>
    <p>
      &#160;&#160;&#160;&#160;ngx_uint_t&#160;&#160;flags;
    </p>
    <p>
      &#160;&#160;&#160;&#160;ngx_msec_t&#160;&#160;timer, delta;
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;// &#22914;&#26524;&#37197;&#32622;&#25991;&#20214;&#20013;&#35774;&#32622;&#20102;&#26102;&#38388;&#31934;&#24230;
    </p>
    <p>
      &#160;&#160;&#160;&#160;if (ngx_timer_resolution) {
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;timer = NGX_TIMER_INFINITE;
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;flags = 0;
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;} else {
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;timer = ngx_event_find_timer();
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;flags = NGX_UPDATE_TIME;
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;...
    </p>
    <p>
      &#160;&#160;&#160;&#160;}&#160;&#160;
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;// &#33509;accept&#20351;&#29992;&#19978;&#38145;
    </p>
    <p>
      &#160;&#160;&#160;&#160;if (ngx_use_accept_mutex) {
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;/*
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;ngx_accept_disabled&#26159;&#22312;&#30417;&#21548;&#22871;&#25509;&#21475;&#30340;&#20107;&#20214;&#22788;&#29702;&#20989;&#25968;ngx_event_accept&#20013;&#35774;&#32622;&#30340;
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;ngx_accept_disabled = ngx_cycle-&gt;connection_n / 8
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;- ngx_cycle-&gt;free_connection_n;
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;ngx_accept_disabled &gt; 0&#34920;&#31034;&#24403;&#21069;worker&#36827;&#31243;&#24050;&#32463;&#20998;&#37197;&#20102;&#36229;&#36807;7/8&#30340;&#36164;&#28304;&#20102;
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;*/
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if (ngx_accept_disabled &gt; 0) {
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;ngx_accept_disabled--;
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;} else {
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;// &#21152;&#38145;
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if (ngx_trylock_accept_mutex(cycle) == NGX_ERROR) {
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;return;
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;}&#160;&#160;
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;// &#25345;&#26377;&#38145;&#65292;&#35774;&#32622;&#26631;&#24535;&#20301;&#65306;&#25226;&#33719;&#21462;&#21040;&#30340;&#20107;&#20214;&#25918;&#20837;&#24310;&#36831;&#22788;&#29702;&#38431;&#21015;
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if (ngx_accept_mutex_held) {
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;flags |= NGX_POST_EVENTS;
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;} else {
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if (timer == NGX_TIMER_INFINITE
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;|| timer &gt; ngx_accept_mutex_delay)
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;{
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;timer = ngx_accept_mutex_delay;
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;}
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;}
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;}
    </p>
    <p>
      &#160;&#160;&#160;&#160;}
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;delta = ngx_current_msec;
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;// &#35843;&#29992;process_events&#38057;&#23376;&#36718;&#35757;&#20107;&#20214;&#65292;&#26377;&#20123;&#20107;&#20214;&#21363;&#26102;&#35843;&#29992;&#20107;&#20214;&#22788;&#29702;&#20989;&#25968;&#22788;&#29702;&#65292;&#26377;&#20123;&#20107;&#20214;&#25918;&#20837;&#24310;&#36831;&#38431;&#21015;&#31561;&#24453;&#21518;&#38754;&#22788;&#29702;
    </p>
    <p>
      &#160;&#160;&#160;&#160;(void) ngx_process_events(cycle, timer, flags);
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;delta = ngx_current_msec - delta;
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;ngx_log_debug1(NGX_LOG_DEBUG_EVENT, cycle-&gt;log, 0,
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&quot;timer delta: %M&quot;, delta);
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;// &#26377;&#38656;&#35201;&#24310;&#36831;&#22788;&#29702;&#30340;&#30417;&#21548;&#22871;&#25509;&#21475;&#20107;&#20214;
    </p>
    <p>
      &#160;&#160;&#160;&#160;if (ngx_posted_accept_events) {
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;// &#22788;&#29702;
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;ngx_event_process_posted(cycle, &amp;ngx_posted_accept_events);
    </p>
    <p>
      &#160;&#160;&#160;&#160;}
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;// &#37322;&#25918;&#38145;
    </p>
    <p>
      &#160;&#160;&#160;&#160;if (ngx_accept_mutex_held) {
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;ngx_shmtx_unlock(&amp;ngx_accept_mutex);
    </p>
    <p>
      &#160;&#160;&#160;&#160;}
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;if (delta) {
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;ngx_event_expire_timers();
    </p>
    <p>
      &#160;&#160;&#160;&#160;}
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;ngx_log_debug1(NGX_LOG_DEBUG_EVENT, cycle-&gt;log, 0,
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&quot;posted events %p&quot;, ngx_posted_events);
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;// &#26377;&#38656;&#35201;&#24310;&#36831;&#22788;&#29702;&#30340;&#25968;&#25454;&#22871;&#25509;&#21475;&#20107;&#20214;
    </p>
    <p>
      &#160;&#160;&#160;&#160;if (ngx_posted_events) {
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;// &#22788;&#29702;
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if (ngx_threaded) {
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;ngx_wakeup_worker_thread(cycle);
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;} else {
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;ngx_event_process_posted(cycle, &amp;ngx_posted_events);
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;}
    </p>
    <p>
      &#160;&#160;&#160;&#160;}
    </p>
    <p>
      }
    </p>
  </body>
</html>
</richcontent>
</node>
</node>
<node CREATED="1389085058082" ID="ID_637344757" MODIFIED="1389085061407" TEXT="ngx_process_events"/>
<node CREATED="1389085100480" ID="ID_1918104818" MODIFIED="1389085102129" TEXT="ngx_event_process_posted"/>
</node>
>>>>>>> branch 'master' of https://github.com/galebo/nginx-study.git
<node CREATED="1388930308705" FOLDED="true" ID="ID_1702739686" MODIFIED="1389084874018" TEXT="ngx_worker_process_exit">
<node CREATED="1388930358778" ID="ID_1476584593" LINK="#ID_1607511909" MODIFIED="1389070595779" STYLE="fork">
<richcontent TYPE="NODE"><html>
  <head>
    
  </head>
  <body>
    <p>
      &#160;&#160;&#160;&#160;// &#35843;&#24230;&#25152;&#26377;&#27169;&#22359;&#30340;&#38057;&#23376;exit_process
    </p>
    <p>
      &#160;&#160;&#160;&#160;for (i = 0; ngx_modules[i]; i++) {
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if (ngx_modules[i]-&gt;exit_process) {
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;ngx_modules[i]-&gt;<font color="#f10a0a">exit_process</font>(cycle);
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;}
    </p>
    <p>
      &#160;&#160;&#160;&#160;}
    </p>
  </body>
</html></richcontent>
</node>
</node>
</node>
<node CREATED="1388932298578" ID="ID_1783902408" MODIFIED="1389079316907" TEXT="// for i = 0 to n&#xa;     ngx_spawn_process">
<node CREATED="1389063891967" FOLDED="true" ID="ID_1195727618" MODIFIED="1389065189198" TEXT="&#x6e90;&#x7801;&#x5206;&#x6790;">
<node CREATED="1389063906575" ID="ID_467713069" MODIFIED="1389065187199">
<richcontent TYPE="NODE"><html>
  <head>
    
  </head>
  <body>
    <p>
      &#31532;&#19977;&#20010;&#35201;&#21078;&#24320;&#30340;&#20989;&#25968;&#26159;&#21019;&#24314;&#23376;&#36827;&#31243;&#30340;
    </p>
    <p>
      ngx_pid_t ngx_spawn_process(ngx_cycle_t *cycle,&#160;&#160;ngx_spawn_proc_pt proc, void *data, char *name, ngx_int_t respawn)&#65292;
    </p>
    <p>
      &#36825;&#20010;&#20989;&#25968;&#23450;&#20041;&#22312;src/os/unix/ngx_process.c&#20013;&#65292;proc&#26159;&#23376;&#36827;&#31243;&#30340;&#25191;&#34892;&#20989;&#25968;&#65292;data&#26159;&#20854;&#21442;&#25968;&#65292;name&#26159;&#23376;&#36827;&#31243;&#30340;&#21517;&#23383;&#12290;
    </p>
    <p>
      
    </p>
    <p>
      {
    </p>
    <p>
      &#160;&#160;&#160;&#160;u_long&#160;&#160;&#160;&#160;&#160;on;
    </p>
    <p>
      &#160;&#160;&#160;&#160;ngx_pid_t&#160;&#160;pid;
    </p>
    <p>
      &#160;&#160;&#160;&#160;ngx_int_t&#160;&#160;s; // &#23558;&#35201;&#21019;&#24314;&#30340;&#23376;&#36827;&#31243;&#22312;&#36827;&#31243;&#34920;&#20013;&#30340;&#20301;&#32622;
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;if (respawn &gt;= 0) {
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;// &#26367;&#25442;&#36827;&#31243;ngx_processes[respawn]&#65292;&#21487;&#23433;&#20840;&#37325;&#29992;&#35813;&#36827;&#31243;&#34920;&#39033;
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;s = respawn;
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;} else {
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;// &#20808;&#25214;&#21040;&#19968;&#20010;&#34987;&#22238;&#25910;&#30340;&#36827;&#31243;&#34920;&#39033;
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;for (s = 0; s &lt; ngx_last_process; s++) {
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if (ngx_processes[s].pid == -1) {
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;break;
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;}
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;}
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;// &#36827;&#31243;&#34920;&#24050;&#28385;
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if (s == NGX_MAX_PROCESSES) {
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;ngx_log_error(NGX_LOG_ALERT, cycle-&gt;log, 0,
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&quot;no more than %d processes can be spawned&quot;,
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;NGX_MAX_PROCESSES);
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;return NGX_INVALID_PID;
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;}
    </p>
    <p>
      &#160;&#160;&#160;&#160;}
    </p>
    <p>
      
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;// &#19981;&#26159;&#20998;&#31163;&#30340;&#23376;&#36827;&#31243;
    </p>
    <p>
      &#160;&#160;&#160;&#160;if (respawn != NGX_PROCESS_DETACHED) {
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;/* Solaris 9 still has no AF_LOCAL */
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;/*
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#21019;&#24314;socketpair&#29992;&#20110;&#36827;&#31243;&#38388;&#36890;&#20449;&#65292;master&#36827;&#31243;&#20026;&#27599;&#20010;worker&#21019;&#24314;&#19968;&#23545;socket&#65292;&#160;master&#36827;&#31243;&#31354;&#38388;&#25171;&#24320;&#25152;&#26377;socketpair&#30340;channel[0]&#65292;channel[1]&#20004;&#31471;&#21477;&#26564;&#12290;
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#24403;&#21019;&#24314;&#19968;&#20010;worker&#30340;&#26102;&#20505;&#65292;&#36825;&#20010;worker&#20250;&#32487;&#25215;master&#24403;&#21069;&#24050;&#32463;&#21019;&#24314;&#24182;&#25171;&#24320;&#30340;&#25152;&#26377;
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;socketpair&#65292;&#36825;&#20010;worker&#21021;&#22987;&#21270;&#30340;&#26102;&#20505;&#65288;&#35843;&#29992;ngx_worker_process_init&#65289;&#20250;
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#20851;&#38381;&#25481;&#26412;&#36827;&#31243;&#23545;&#24212;socketpair&#30340;channel[0]&#21644;&#20854;&#20182;worker&#23545;&#24212;&#30340;channel[1]&#65292;
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#20445;&#25345;&#25171;&#24320;&#26412;&#36827;&#31243;&#23545;&#24212;socketpair&#30340;channel[1]&#21644;&#20854;&#20182;worker&#23545;&#24212;&#30340;channel[0]&#65292;
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#24182;&#30417;&#21548;&#26412;&#36827;&#31243;&#23545;&#24212;socketpair&#30340;channel[1]&#30340;&#21487;&#35835;&#20107;&#20214;&#12290;&#36825;&#26679;&#65292;<font color="#f80b0b">&#27599;&#20010;worker&#23601; </font>
    </p>
    <p>
      <font color="#f80b0b">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#25317;&#26377;&#20102;&#20854;&#20182;worker&#30340;channel[0]&#65292;&#21487;&#20197;sendmsg(channel[0], ...)&#21521;&#20854;&#20182;worker </font>
    </p>
    <p>
      <font color="#f80b0b">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#21457;&#36865;&#28040;&#24687;</font>&#12290;
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#32454;&#24515;&#30340;&#35835;&#32773;&#20250;&#21457;&#29616;&#65292;&#20808;&#20110;&#24403;&#21069;worker&#21019;&#24314;&#30340;worker&#36890;&#36807;&#32487;&#25215;&#24471;&#21040;&#20102;&#20854;channel[0],
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#20294;&#26159;&#20043;&#21518;&#21019;&#24314;&#30340;&#36827;&#31243;&#30340;channel[0]&#35813;&#22914;&#20309;&#33719;&#24471;&#21602;&#65292;&#31572;&#26696;&#22312;&#19978;&#38754;&#65288;ngx_start_worker_processes)
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;master&#22312;&#21019;&#24314;&#24182;&#21551;&#21160;&#23436;&#25104;&#19968;&#20010;worker&#20043;&#21518;&#65292;&#20250;&#35843;&#29992;ngx_pass_open_channel
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#25226;&#36825;&#20010;worker&#30340;channel[0]&#21644;&#36827;&#31243;id&#12289;&#22312;&#36827;&#31243;&#34920;&#20013;&#30340;&#20559;&#31227;slot&#24191;&#25773;&#32473;&#25152;&#26377;&#20854;&#20182;&#24050;&#32463;
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#21019;&#24314;&#30340;worker&#65292;&#36825;&#26679;&#65292;&#21019;&#24314;&#23436;&#25152;&#26377;&#36827;&#31243;&#20043;&#21518;&#65292;&#27599;&#20010;worker&#23601;&#33719;&#24471;&#20102;&#25152;&#26377;&#20854;&#20182;worker
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#30340;channel[0]&#20102;&#12290;
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;*/
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;// &#21019;&#24314;&#19968;&#23545;&#24050;&#32463;&#36830;&#25509;&#30340;&#26080;&#21517;socket
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if (socketpair(AF_UNIX, SOCK_STREAM, 0, ngx_processes[s].channel) == -1)
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;{
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;ngx_log_error(NGX_LOG_ALERT, cycle-&gt;log, ngx_errno,
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&quot;socketpair() failed while spawning /&quot;%s/&quot;&quot;, name);
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;return NGX_INVALID_PID;
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;}
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;ngx_log_debug2(NGX_LOG_DEBUG_CORE, cycle-&gt;log, 0,
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&quot;channel %d:%d&quot;,
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;ngx_processes[s].channel[0],
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;ngx_processes[s].channel[1]);
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;// &#35774;&#32622;socket&#20026;&#38750;&#38459;&#22622;&#27169;&#24335;
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if (ngx_nonblocking(ngx_processes[s].channel[0]) == -1) {
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;ngx_log_error(NGX_LOG_ALERT, cycle-&gt;log, ngx_errno,
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;ngx_nonblocking_n &quot; failed while spawning /&quot;%s/&quot;&quot;,
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;name);
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;ngx_close_channel(ngx_processes[s].channel, cycle-&gt;log);
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;return NGX_INVALID_PID;
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;}
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if (ngx_nonblocking(ngx_processes[s].channel[1]) == -1) {
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;ngx_log_error(NGX_LOG_ALERT, cycle-&gt;log, ngx_errno,
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;ngx_nonblocking_n &quot; failed while spawning /&quot;%s/&quot;&quot;,
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;name);
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;ngx_close_channel(ngx_processes[s].channel, cycle-&gt;log);
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;return NGX_INVALID_PID;
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;}
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;// &#24320;&#21551;channel[0]&#30340;&#28040;&#24687;&#39537;&#21160;IO
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;on = 1;
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if (ioctl(ngx_processes[s].channel[0], FIOASYNC, &amp;on) == -1) {
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;ngx_log_error(NGX_LOG_ALERT, cycle-&gt;log, ngx_errno,
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&quot;ioctl(FIOASYNC) failed while spawning /&quot;%s/&quot;&quot;, name);
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;ngx_close_channel(ngx_processes[s].channel, cycle-&gt;log);
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;return NGX_INVALID_PID;
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;}
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;// &#35774;&#32622;channel[0]&#30340;&#23646;&#20027;&#65292;&#25511;&#21046;channel[0]&#30340;SIGIO&#20449;&#21495;&#21482;&#21457;&#32473;&#36825;&#20010;&#36827;&#31243;
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if (fcntl(ngx_processes[s].channel[0], F_SETOWN, ngx_pid) == -1) {
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;ngx_log_error(NGX_LOG_ALERT, cycle-&gt;log, ngx_errno,
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&quot;fcntl(F_SETOWN) failed while spawning /&quot;%s/&quot;&quot;, name);
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;ngx_close_channel(ngx_processes[s].channel, cycle-&gt;log);
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;return NGX_INVALID_PID;
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;}
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;// &#33509;&#36827;&#31243;&#25191;&#34892;&#20102;exec&#21518;&#20851;&#38381;socket
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if (fcntl(ngx_processes[s].channel[0], F_SETFD, FD_CLOEXEC) == -1) {
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;ngx_log_error(NGX_LOG_ALERT, cycle-&gt;log, ngx_errno,
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&quot;fcntl(FD_CLOEXEC) failed while spawning /&quot;%s/&quot;&quot;,
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;name);
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;ngx_close_channel(ngx_processes[s].channel, cycle-&gt;log);
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;return NGX_INVALID_PID;
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;}
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if (fcntl(ngx_processes[s].channel[1], F_SETFD, FD_CLOEXEC) == -1) {
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;ngx_log_error(NGX_LOG_ALERT, cycle-&gt;log, ngx_errno,
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&quot;fcntl(FD_CLOEXEC) failed while spawning /&quot;%s/&quot;&quot;,
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;name);
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;ngx_close_channel(ngx_processes[s].channel, cycle-&gt;log);
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;return NGX_INVALID_PID;
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;}
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;// &#29992;&#20110;&#30417;&#21548;&#21487;&#35835;&#20107;&#20214;&#30340;socket
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;ngx_channel = ngx_processes[s].channel[1];
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;} else {
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;ngx_processes[s].channel[0] = -1;
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;ngx_processes[s].channel[1] = -1;
    </p>
    <p>
      &#160;&#160;&#160;&#160;}
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;// &#35774;&#32622;&#24403;&#21069;&#23376;&#36827;&#31243;&#30340;&#36827;&#31243;&#34920;&#39033;&#32034;&#24341;
    </p>
    <p>
      &#160;&#160;&#160;&#160;ngx_process_slot = s;
    </p>
    <p>
      
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;// &#21019;&#24314;&#23376;&#36827;&#31243;
    </p>
    <p>
      &#160;&#160;&#160;&#160;pid = fork();
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;switch (pid) {
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;case -1:
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;ngx_log_error(NGX_LOG_ALERT, cycle-&gt;log, ngx_errno,
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&quot;fork() failed while spawning /&quot;%s/&quot;&quot;, name);
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;ngx_close_channel(ngx_processes[s].channel, cycle-&gt;log);
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;return NGX_INVALID_PID;
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;case 0:
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;// &#35774;&#32622;&#24403;&#21069;&#23376;&#36827;&#31243;&#30340;&#36827;&#31243;id
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;ngx_pid = ngx_getpid();
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;// &#23376;&#36827;&#31243;&#36816;&#34892;&#25191;&#34892;&#20989;&#25968;
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;proc(cycle, data);
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;break;
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;default:
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;break;
    </p>
    <p>
      &#160;&#160;&#160;&#160;}
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;ngx_log_error(NGX_LOG_NOTICE, cycle-&gt;log, 0, &quot;start %s %P&quot;, name, pid);
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;// &#35774;&#32622;&#19968;&#20123;&#36827;&#31243;&#34920;&#39033;&#23383;&#27573;
    </p>
    <p>
      &#160;&#160;&#160;&#160;ngx_processes[s].pid = pid;
    </p>
    <p>
      &#160;&#160;&#160;&#160;ngx_processes[s].exited = 0;
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;// &#26367;&#25442;&#36827;&#31243;ngx_processes[respawn]&#65292;&#19981;&#29992;&#35774;&#32622;&#20854;&#20182;&#36827;&#31243;&#34920;&#39033;&#23383;&#27573;&#20102;
    </p>
    <p>
      &#160;&#160;&#160;&#160;if (respawn &gt;= 0) {
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;return pid;
    </p>
    <p>
      &#160;&#160;&#160;&#160;}
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;// &#35774;&#32622;&#20854;&#20182;&#30340;&#36827;&#31243;&#34920;&#39033;&#23383;&#27573;
    </p>
    <p>
      &#160;&#160;&#160;&#160;ngx_processes[s].proc = proc;
    </p>
    <p>
      &#160;&#160;&#160;&#160;ngx_processes[s].data = data;
    </p>
    <p>
      &#160;&#160;&#160;&#160;ngx_processes[s].name = name;
    </p>
    <p>
      &#160;&#160;&#160;&#160;ngx_processes[s].exiting = 0;
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;// &#35774;&#32622;&#36827;&#31243;&#34920;&#39033;&#30340;&#19968;&#20123;&#29366;&#24577;&#23383;&#27573;
    </p>
    <p>
      &#160;&#160;&#160;&#160;switch (respawn) {
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;case NGX_PROCESS_NORESPAWN:
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;ngx_processes[s].respawn = 0;
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;ngx_processes[s].just_spawn = 0;
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;ngx_processes[s].detached = 0;
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;break;
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;case NGX_PROCESS_JUST_SPAWN:
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;ngx_processes[s].respawn = 0;
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;ngx_processes[s].just_spawn = 1;
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;ngx_processes[s].detached = 0;
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;break;
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;case NGX_PROCESS_RESPAWN:
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;ngx_processes[s].respawn = 1;
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;ngx_processes[s].just_spawn = 0;
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;ngx_processes[s].detached = 0;
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;break;
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;case NGX_PROCESS_JUST_RESPAWN:
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;ngx_processes[s].respawn = 1;
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;ngx_processes[s].just_spawn = 1;
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;ngx_processes[s].detached = 0;
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;break;
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;// &#20998;&#31163;&#30340;&#23376;&#36827;&#31243;&#65292;&#19981;&#21463;master&#25511;&#21046;&#65311;
    </p>
    <p>
      &#160;&#160;&#160;&#160;case NGX_PROCESS_DETACHED:
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;ngx_processes[s].respawn = 0;
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;ngx_processes[s].just_spawn = 0;
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;ngx_processes[s].detached = 1;
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;break;
    </p>
    <p>
      &#160;&#160;&#160;&#160;}
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;if (s == ngx_last_process) {
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;ngx_last_process++;
    </p>
    <p>
      &#160;&#160;&#160;&#160;}
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;return pid;
    </p>
    <p>
      }
    </p>
  </body>
</html></richcontent>
</node>
</node>
</node>
<node CREATED="1388932110474" FOLDED="true" ID="ID_677316329" MODIFIED="1389103018113" TEXT="ngx_pass_open_channel">
<node CREATED="1388932114658" FOLDED="true" ID="ID_362402934" MODIFIED="1389103016874" TEXT="&#x6e90;&#x7801;&#x5206;&#x6790;">
<node CREATED="1388932128026" ID="ID_518487630" MODIFIED="1389063880319">
<richcontent TYPE="NODE"><html>
  <head>
    
  </head>
  <body>
    <p>
      &#25226;ngx_pass_open_channel&#23637;&#24320;&#22914;&#19979;&#65306;
    </p>
    <p>
      
    </p>
    <p>
      static void
    </p>
    <p>
      ngx_pass_open_channel(ngx_cycle_t *cycle, ngx_channel_t *ch)
    </p>
    <p>
      {
    </p>
    <p>
      &#160;&#160;&#160;&#160;ngx_int_t&#160;&#160;i;
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;for (i = 0; i &lt; ngx_last_process; i++) {
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;// &#36339;&#36807;&#33258;&#24049;&#21644;&#24322;&#24120;&#30340;worker
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if (i == ngx_process_slot
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;|| ngx_processes[i].pid == -1
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;|| ngx_processes[i].channel[0] == -1)
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;{
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;continue;
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;}
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;ngx_log_debug6(NGX_LOG_DEBUG_CORE, cycle-&gt;log, 0,
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&quot;pass channel s:%d pid:%P fd:%d to s:%i pid:%P fd:%d&quot;,
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;ch-&gt;slot, ch-&gt;pid, ch-&gt;fd,
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;i, ngx_processes[i].pid,
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;ngx_processes[i].channel[0]);
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;/* TODO: NGX_AGAIN */
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;// &#21457;&#36865;&#28040;&#24687;&#32473;&#20854;&#20182;&#30340;worker
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;ngx_write_channel(ngx_processes[i].channel[0],
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;ch, sizeof(ngx_channel_t), cycle-&gt;log);
    </p>
    <p>
      &#160;&#160;&#160;&#160;}
    </p>
    <p>
      }
    </p>
    <p>
      
    </p>
    <p>
      
    </p>
  </body>
</html></richcontent>
</node>
</node>
</node>
</node>
<node CREATED="1388930255282" FOLDED="true" ID="ID_1746613876" MODIFIED="1389082281186" TEXT="ngx_master_process_exit">
<node CREATED="1388930391394" ID="ID_929255851" MODIFIED="1389082171646">
<richcontent TYPE="NODE"><html>
  <head>
    
  </head>
  <body>
    <p>
      ngx_master_process_exit
    </p>
    <p>
      {
    </p>
    <p>
      &#160;&#160;&#160;&#160;...
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;// &#35843;&#24230;&#25152;&#26377;&#27169;&#22359;&#30340;&#38057;&#23376;exit_master
    </p>
    <p>
      &#160;&#160;&#160;&#160;for (i = 0; ngx_modules[i]; i++) {
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if (ngx_modules[i]-&gt;exit_master) {
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; <b><font color="#f30404">ngx_modules[i]-&gt;exit_master</font></b>(cycle);
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;}
    </p>
    <p>
      &#160;&#160;&#160;&#160;}
    </p>
    <p>
      &#160;&#160;&#160;&#160;ngx_close_listening_sockets
    </p>
    <p>
      &#160;&#160;&#160;&#160;...
    </p>
    <p>
      }
    </p>
  </body>
</html></richcontent>
</node>
</node>
<node CREATED="1389098899238" ID="ID_660698004" MODIFIED="1389098902151" TEXT="ngx_signal_worker_processes">
<node CREATED="1388932028178" FOLDED="true" ID="ID_501594873" MODIFIED="1389107171355" TEXT="&#x6e90;&#x7801;&#x5206;&#x6790;">
<node CREATED="1388932040042" ID="ID_1256679313" MODIFIED="1389107120723">
<richcontent TYPE="NODE"><html>
  <head>
    
  </head>
  <body>
    <p>
      static void
    </p>
    <p>
      ngx_signal_worker_processes(ngx_cycle_t *cycle, int signo)
    </p>
    <p>
      {
    </p>
    <p>
      &#160;&#160;&#160;&#160;ngx_int_t&#160;&#160;&#160;&#160;&#160;&#160;i;
    </p>
    <p>
      &#160;&#160;&#160;&#160;ngx_err_t&#160;&#160;&#160;&#160;&#160;&#160;err;
    </p>
    <p>
      &#160;&#160;&#160;&#160;ngx_channel_t&#160;&#160;ch;
    </p>
    <p>
      
    </p>
    <p>
      #if (NGX_BROKEN_SCM_RIGHTS)
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;ch.command = 0;
    </p>
    <p>
      
    </p>
    <p>
      #else
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;switch (signo) {
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;case ngx_signal_value(NGX_SHUTDOWN_SIGNAL):
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;ch.command = NGX_CMD_QUIT;
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;break;
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;case ngx_signal_value(NGX_TERMINATE_SIGNAL):
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;ch.command = NGX_CMD_TERMINATE;
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;break;
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;case ngx_signal_value(NGX_REOPEN_SIGNAL):
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;ch.command = NGX_CMD_REOPEN;
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;break;
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;default:
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;ch.command = 0;
    </p>
    <p>
      &#160;&#160;&#160;&#160;}
    </p>
    <p>
      
    </p>
    <p>
      #endif
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;ch.fd = -1;
    </p>
    <p>
      
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;for (i = 0; i &lt; ngx_last_process; i++) {
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;ngx_log_debug7(NGX_LOG_DEBUG_EVENT, cycle-&gt;log, 0,
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&quot;child: %d %P e:%d t:%d d:%d r:%d j:%d&quot;,
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;i,
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;ngx_processes[i].pid,
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;ngx_processes[i].exiting,
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;ngx_processes[i].exited,
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;ngx_processes[i].detached,
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;ngx_processes[i].respawn,
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;ngx_processes[i].just_spawn);
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if (ngx_processes[i].detached || ngx_processes[i].pid == -1) {
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;continue;
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;}
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if (ngx_processes[i].just_spawn) {
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;ngx_processes[i].just_spawn = 0;
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;continue;
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;}
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if (ngx_processes[i].exiting
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&amp;&amp; signo == ngx_signal_value(NGX_SHUTDOWN_SIGNAL))
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;{
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;continue;
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;}
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if (ch.command) {
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if (<font color="#f50606">ngx_write_channel</font>(ngx_processes[i].channel[0],
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&amp;ch, sizeof(ngx_channel_t), cycle-&gt;log)
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;== NGX_OK)
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;{
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if (signo != ngx_signal_value(NGX_REOPEN_SIGNAL)) {
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;ngx_processes[i].exiting = 1;
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;}
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;continue;
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;}
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;}
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;ngx_log_debug2(NGX_LOG_DEBUG_CORE, cycle-&gt;log, 0,
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&quot;kill (%P, %d)&quot; , ngx_processes[i].pid, signo);
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if (kill(ngx_processes[i].pid, signo) == -1) {
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;err = ngx_errno;
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;ngx_log_error(NGX_LOG_ALERT, cycle-&gt;log, err,
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&quot;kill(%P, %d) failed&quot;, ngx_processes[i].pid, signo);
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if (err == NGX_ESRCH) {
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;ngx_processes[i].exited = 1;
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;ngx_processes[i].exiting = 0;
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;ngx_reap = 1;
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;}
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;continue;
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;}
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if (signo != ngx_signal_value(NGX_REOPEN_SIGNAL)) {
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;ngx_processes[i].exiting = 1;
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;}
    </p>
    <p>
      &#160;&#160;&#160;&#160;}
    </p>
    <p>
      }
    </p>
  </body>
</html></richcontent>
</node>
</node>
</node>
<node CREATED="1389099012319" ID="ID_943246970" MODIFIED="1389099014420" TEXT="ngx_start_cache_manager_processes"/>
</node>
</node>
<<<<<<< HEAD
</node>
<node CREATED="1388816679113" ID="ID_1770322126" MODIFIED="1389097863156" POSITION="left" TEXT="&#x5168;&#x5c40;&#x53d8;&#x91cf;">
=======
<node CREATED="1388816679113" FOLDED="true" ID="ID_1770322126" MODIFIED="1389082288171" POSITION="left" TEXT="&#x5168;&#x5c40;&#x53d8;&#x91cf;">
>>>>>>> branch 'master' of https://github.com/galebo/nginx-study.git
<node CREATED="1388816693569" ID="ID_1774761060" MODIFIED="1388816695882" TEXT="ngx_dump_config"/>
<node CREATED="1389063190084" ID="ID_523846253" MODIFIED="1389105502690" TEXT="&#x8fdb;&#x7a0b;&#x76f8;&#x5173;">
<node CREATED="1389063202261" FOLDED="true" ID="ID_554064286" MODIFIED="1389107681387" TEXT="ngx_last_process">
<node CREATED="1389098087008" ID="ID_90320232" MODIFIED="1389098101627">
<richcontent TYPE="NODE"><html>
  <head>
    
  </head>
  <body>
    <p>
      ngx_last_process&#26159;&#36827;&#31243;&#34920;&#20013;
    </p>
    <p>
      &#26368;&#21518;&#19968;&#20010;&#23384;&#37327;&#36827;&#31243;&#30340;&#19979;&#19968;&#20010;&#20301;&#32622;
    </p>
  </body>
</html>
</richcontent>
</node>
</node>
<node CREATED="1389063038507" FOLDED="true" ID="ID_742601978" MODIFIED="1389107680579" TEXT="ngx_processes">
<node CREATED="1389065279013" ID="ID_966833515" MODIFIED="1389098037590">
<richcontent TYPE="NODE"><html>
  <head>
    
  </head>
  <body>
    <p>
      &#36827;&#31243;&#20449;&#24687;&#38431;&#21015;
    </p>
    <p>
      master&#27599;&#21019;&#24314;&#19968;&#20010;worker&#37117;&#20250;&#25226;&#19968;&#20010;
    </p>
    <p>
      &#35774;&#32622;&#22909;&#30340;ngx_process_t&#32467;&#26500;&#21464;&#37327;&#25918;&#20837;
    </p>
    <p>
      ngx_processes&#20013;&#65292;&#36827;&#31243;&#34920;&#38271;&#24230;&#20026;1024
    </p>
  </body>
</html>
</richcontent>
</node>
</node>
<node CREATED="1389063217892" FOLDED="true" ID="ID_431150701" MODIFIED="1389107682140" TEXT="ngx_process_slot">
<node CREATED="1389065264039" ID="ID_1159279638" MODIFIED="1389098062292">
<richcontent TYPE="NODE"><html>
  <head>
    
  </head>
  <body>
    <p>
      &#24403;&#21069;&#36827;&#31243;&#32034;&#24341;
    </p>
    <p>
      &#21018;&#21019;&#24314;&#30340;&#36827;&#31243;&#23384;&#25918;&#22312;ngx_process_slot&#20301;&#32622;
    </p>
  </body>
</html>
</richcontent>
</node>
</node>
<node CREATED="1389063262403" ID="ID_1480522545" MODIFIED="1389063271318" TEXT="ngx_channel">
<node CREATED="1389065217030" ID="ID_1607178394" MODIFIED="1389065219571" TEXT="// &#x7528;&#x4e8e;&#x76d1;&#x542c;&#x53ef;&#x8bfb;&#x4e8b;&#x4ef6;&#x7684;socket"/>
</node>
</node>
<node CREATED="1389105507572" ID="ID_1415660789" MODIFIED="1389105518458" TEXT="&#x4e8b;&#x4ef6;&#x76f8;&#x5173;">
<node CREATED="1389105522876" ID="ID_1354763285" LINK="#ID_1076558626" MODIFIED="1389105726262" TEXT="ngx_event_actions"/>
</node>
<<<<<<< HEAD
<node CREATED="1389106372749" ID="ID_1529522723" MODIFIED="1389106384361" TEXT="&#x7ed3;&#x6784;&#x4f53;&#x5b9e;&#x4f8b;">
<node CREATED="1389083923064" FOLDED="true" ID="ID_604673369" LINK="#ID_1262072544" MODIFIED="1389107676211" TEXT="ngx_epoll_module_ctx">
<node CREATED="1389083929172" ID="ID_664627156" MODIFIED="1389083943804">
<richcontent TYPE="NODE"><html>
  <head>
    
  </head>
  <body>
    <p>
      ngx_event_module_t&#160;&#160;ngx_epoll_module_ctx = {
    </p>
    <p>
      &#160;&#160;&#160;&#160;&amp;epoll_name,
    </p>
    <p>
      &#160;&#160;&#160;&#160;ngx_epoll_create_conf,&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;/* create configuration */
    </p>
    <p>
      &#160;&#160;&#160;&#160;ngx_epoll_init_conf,&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;/* init configuration */
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;{
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;ngx_epoll_add_event,&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;/* add an event */
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;ngx_epoll_del_event,&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;/* delete an event */
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;ngx_epoll_add_event,&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;/* enable an event */
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;ngx_epoll_del_event,&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;/* disable an event */
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;ngx_epoll_add_connection,&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;/* add an connection */
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;ngx_epoll_del_connection,&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;/* delete an connection */
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;NULL,&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;/* process the changes */
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;ngx_epoll_process_events,&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;/* process the events */
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;ngx_epoll_init,&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;/* init the events */
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;ngx_epoll_done,&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;/* done the events */
    </p>
    <p>
      &#160;&#160;&#160;&#160;}
    </p>
    <p>
      };
    </p>
  </body>
</html></richcontent>
</node>
<node CREATED="1389106030710" ID="ID_249818564" MODIFIED="1389106033379" TEXT="ngx_epoll_init">
<node CREATED="1389106003573" ID="ID_1876181447" MODIFIED="1389106007054" TEXT="ngx_event_actions = ngx_epoll_module_ctx.actions;"/>
</node>
</node>
<node BACKGROUND_COLOR="#9c7b7b" CREATED="1389087106865" FOLDED="true" ID="ID_1336422711" LINK="#ID_552558133" MODIFIED="1389107656200" TEXT="ngx_events_module">
<icon BUILTIN="full-0"/>
<node CREATED="1389088285082" FOLDED="true" ID="ID_824770665" MODIFIED="1389106452203" TEXT="ngx_events_commands">
<node CREATED="1389088290682" ID="ID_257180594" LINK="#ID_1463245406" MODIFIED="1389088503998">
<richcontent TYPE="NODE"><html>
  <head>
    
  </head>
  <body>
    <p>
      static ngx_command_t&#160;&#160;ngx_events_commands[] = {
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;{ ngx_string(&quot;events&quot;),
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;NGX_MAIN_CONF|NGX_CONF_BLOCK|NGX_CONF_NOARGS,
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;<font color="#f60909">ngx_events_block</font>,
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;0,
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;0,
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;NULL },
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;ngx_null_command
    </p>
    <p>
      };
    </p>
  </body>
</html></richcontent>
</node>
</node>
<node CREATED="1389088339104" ID="ID_1593217833" MODIFIED="1389088375313">
<richcontent TYPE="NODE"><html>
  <head>
    
  </head>
  <body>
    <p>
      ngx_module_t&#160;&#160;ngx_events_module = {
    </p>
    <p>
      &#160;&#160;&#160;&#160;NGX_MODULE_V1,
    </p>
    <p>
      &#160;&#160;&#160;&#160;&amp;ngx_events_module_ctx,&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;/* module context */
    </p>
    <p>
      &#160;&#160;&#160;&#160;<font color="#fc0b0b">ngx_events_commands</font>,&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;/* module directives */
    </p>
    <p>
      &#160;&#160;&#160;&#160;NGX_CORE_MODULE,&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;/* module type */
    </p>
    <p>
      &#160;&#160;&#160;&#160;NULL,&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;/* init master */
    </p>
    <p>
      &#160;&#160;&#160;&#160;NULL,&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;/* init module */
    </p>
    <p>
      &#160;&#160;&#160;&#160;NULL,&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;/* init process */
    </p>
    <p>
      &#160;&#160;&#160;&#160;NULL,&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;/* init thread */
    </p>
    <p>
      &#160;&#160;&#160;&#160;NULL,&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;/* exit thread */
    </p>
    <p>
      &#160;&#160;&#160;&#160;NULL,&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;/* exit process */
    </p>
    <p>
      &#160;&#160;&#160;&#160;NULL,&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;/* exit master */
    </p>
    <p>
      &#160;&#160;&#160;&#160;NGX_MODULE_V1_PADDING
    </p>
    <p>
      };
    </p>
  </body>
</html></richcontent>
</node>
</node>
<node BACKGROUND_COLOR="#9c7b7b" CREATED="1389084135274" FOLDED="true" ID="ID_1871189453" LINK="#ID_552558133" MODIFIED="1389107662140" TEXT="ngx_event_core_module">
<icon BUILTIN="full-0"/>
<node CREATED="1389084139984" ID="ID_1907965041" MODIFIED="1389084669333">
<richcontent TYPE="NODE"><html>
  <head>
    
  </head>
  <body>
    <p>
      ngx_module_t&#160;&#160;ngx_event_core_module = {
    </p>
    <p>
      &#160;&#160;&#160;&#160;NGX_MODULE_V1,
    </p>
    <p>
      &#160;&#160;&#160;&#160;&amp;ngx_event_core_module_ctx,&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;/* module context */
    </p>
    <p>
      &#160;&#160;&#160;&#160;ngx_event_core_commands,&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;/* module directives */
    </p>
    <p>
      &#160;&#160;&#160;&#160;NGX_EVENT_MODULE,&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;/* module type */
    </p>
    <p>
      &#160;&#160;&#160;&#160;NULL,&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;/* init master */
    </p>
    <p>
      &#160;&#160;&#160;&#160;ngx_event_module_init,&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;/* init module */
    </p>
    <p>
      &#160;&#160;&#160;&#160;<font color="#f70404">ngx_event_process_init</font>,&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;/* init process */
    </p>
    <p>
      &#160;&#160;&#160;&#160;NULL,&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;/* init thread */
    </p>
    <p>
      &#160;&#160;&#160;&#160;NULL,&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;/* exit thread */
    </p>
    <p>
      &#160;&#160;&#160;&#160;NULL,&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;/* exit process */
    </p>
    <p>
      &#160;&#160;&#160;&#160;NULL,&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;/* exit master */
    </p>
    <p>
      &#160;&#160;&#160;&#160;NGX_MODULE_V1_PADDING
    </p>
    <p>
      };
    </p>
  </body>
</html></richcontent>
</node>
<node CREATED="1389084640567" ID="ID_1167452659" MODIFIED="1389084642538" TEXT="ngx_event_process_init">
<node CREATED="1389084519801" ID="ID_607686762" LINK="#ID_281294392" MODIFIED="1389084784825" TEXT="ngx_event_accept"/>
</node>
</node>
</node>
</node>
<node CREATED="1388928033225" ID="ID_898182286" MODIFIED="1389103749560" POSITION="left" TEXT="&#x7ed3;&#x6784;&#x4f53;">
<node CREATED="1388928059241" FOLDED="true" ID="ID_552558133" MODIFIED="1389107545237" TEXT="ngx_module_t">
<icon BUILTIN="full-0"/>
=======
<node CREATED="1388928033225" ID="ID_898182286" MODIFIED="1389084387293" POSITION="left" TEXT="&#x7ed3;&#x6784;&#x4f53;">
<node CREATED="1388928059241" FOLDED="true" ID="ID_552558133" MODIFIED="1389088237218" TEXT="ngx_module_t">
>>>>>>> branch 'master' of https://github.com/galebo/nginx-study.git
<node CREATED="1388928269427" FOLDED="true" ID="ID_1509930937" LINK="http://blog.csdn.net/kenbinzhang/article/details/4656815" MODIFIED="1389071818529" TEXT="&#x6e90;&#x7801;&#x5206;&#x6790;">
<node CREATED="1388928091633" ID="ID_880334976" MODIFIED="1388928246439" TEXT="#define NGX_MODULE_V1          0, 0, 0, 0, 0, 0, 1&#xa;#define NGX_MODULE_V1_PADDING  0, 0, 0, 0, 0, 0, 0, 0&#xa;&#xa;struct ngx_module_s {&#xa;    ngx_uint_t            ctx_index;&#xa;    ngx_uint_t            index;&#xa;&#xa;    ngx_uint_t            spare0;&#xa;    ngx_uint_t            spare1;&#xa;    ngx_uint_t            spare2;&#xa;    ngx_uint_t            spare3;&#xa;&#xa;    ngx_uint_t            version;&#xa;&#xa;    void                 *ctx;&#xa;    ngx_command_t        *commands;&#xa;    ngx_uint_t            type;&#xa;&#xa;    ngx_int_t           (*init_master)(ngx_log_t *log);&#xa;&#xa;    ngx_int_t           (*init_module)(ngx_cycle_t *cycle);&#xa;&#xa;    ngx_int_t           (*init_process)(ngx_cycle_t *cycle);&#xa;    ngx_int_t           (*init_thread)(ngx_cycle_t *cycle);&#xa;    void                (*exit_thread)(ngx_cycle_t *cycle);&#xa;    void                (*exit_process)(ngx_cycle_t *cycle);&#xa;&#xa;    void                (*exit_master)(ngx_cycle_t *cycle);&#xa;&#xa;    uintptr_t             spare_hook0;&#xa;    uintptr_t             spare_hook1;&#xa;    uintptr_t             spare_hook2;&#xa;    uintptr_t             spare_hook3;&#xa;    uintptr_t             spare_hook4;&#xa;    uintptr_t             spare_hook5;&#xa;    uintptr_t             spare_hook6;&#xa;    uintptr_t             spare_hook7;&#xa;};&#xa;&#xa;index&#x662f;&#x4e00;&#x4e2a;&#x6a21;&#x5757;&#x8ba1;&#x6570;&#x5668;&#xff0c;&#x6309;&#x7167;&#x6bcf;&#x4e2a;&#x6a21;&#x5757;&#x5728;ngx_modules[]&#x6570;&#x7ec4;&#x4e2d;&#x7684;&#x58f0;&#x660e;&#x987a;&#x5e8f;&#xff08;&#x89c1;objs/ngx_modules.c&#xff09;&#xff0c;&#x4ece;0&#x5f00;&#x59cb;&#x4f9d;&#x6b21;&#x7ed9;&#x6bcf;&#x4e2a;&#x6a21;&#x5757;&#x8fdb;&#x884c;&#x7f16;&#x53f7;&#xff1a;&#xa;&#xa;    ngx_max_module = 0;&#xa;    for (i = 0; ngx_modules[i]; i++) {&#xa;        ngx_modules[i]-&gt;index = ngx_max_module++;&#xa;    }&#xa;&#xff08;&#x89c1;src/core/nginx.c&#xff09;&#xa;&#xa;ctx_index&#x662f;&#x5206;&#x7c7b;&#x7684;&#x6a21;&#x5757;&#x8ba1;&#x6570;&#x5668;&#xff0c;nginx&#x7684;&#x6a21;&#x5757;&#x53ef;&#x4ee5;&#x5206;&#x4e3a;&#x56db;&#x79cd;&#xff1a;core&#x3001;event&#x3001;http&#x548c;mail&#xff0c;&#x6bcf;&#x4e00;&#x79cd;&#x7684;&#x6a21;&#x5757;&#x53c8;&#x4f1a;&#x5404;&#x81ea;&#x8ba1;&#x6570;&#x4e00;&#x4e0b;&#xff0c;&#x8fd9;&#x4e2a;ctx_index&#x5c31;&#x662f;&#x6bcf;&#x4e2a;&#x6a21;&#x5757;&#x5728;&#x5176;&#x6240;&#x5c5e;&#x7c7b;&#x7ec4;&#x7684;&#x8ba1;&#x6570;&#x503c;:&#xa;&#xa;    ngx_event_max_module = 0;&#xa;    for (i = 0; ngx_modules[i]; i++) {&#xa;        if (ngx_modules[i]-&gt;type != NGX_EVENT_MODULE) {&#xa;            continue;&#xa;        }&#xa;&#xa;        ngx_modules[i]-&gt;ctx_index = ngx_event_max_module++;&#xa;    }&#xa;&#xff08;&#x89c1;src/event/ngx_event.c&#xff09;&#xa;&#xa;    ngx_http_max_module = 0;&#xa;    for (m = 0; ngx_modules[m]; m++) {&#xa;        if (ngx_modules[m]-&gt;type != NGX_HTTP_MODULE) {&#xa;            continue;&#xa;        }&#xa;&#xa;        ngx_modules[m]-&gt;ctx_index = ngx_http_max_module++;&#xa;    }&#xa;&#xff08;&#x89c1;src/http/ngx_http.c&#xff09;&#xa;&#xa;    ngx_mail_max_module = 0;&#xa;    for (m = 0; ngx_modules[m]; m++) {&#xa;        if (ngx_modules[m]-&gt;type != NGX_MAIL_MODULE) {&#xa;            continue;&#xa;        }&#xa;&#xa;        ngx_modules[m]-&gt;ctx_index = ngx_mail_max_module++;&#xa;    }&#xa;&#xff08;&#x89c1;src/mail/ngx_mail.c&#xff09;&#xa;&#xa;ctx&#x662f;&#x6a21;&#x5757;&#x7684;&#x4e0a;&#x4e0b;&#x6587;&#xff0c;&#x4e0d;&#x540c;&#x79cd;&#x7c7b;&#x7684;&#x6a21;&#x5757;&#x6709;&#x4e0d;&#x540c;&#x7684;&#x4e0a;&#x4e0b;&#x6587;&#xff0c;&#x56db;&#x7c7b;&#x6a21;&#x5757;&#x5c31;&#x6709;&#x56db;&#x79cd;&#x6a21;&#x5757;&#x4e0a;&#x4e0b;&#x6587;&#xff0c;&#x5b9e;&#x73b0;&#x4e3a;&#x56db;&#x4e2a;&#x4e0d;&#x540c;&#x7684;&#x7ed3;&#x6784;&#x4f53;&#xff0c;&#x6240;&#x4ee5;ctx&#x662f;void *&#x3002;&#x8fd9;&#x662f;&#x4e00;&#x4e2a;&#x5f88;&#x91cd;&#x8981;&#x7684;&#x5b57;&#x6bb5;&#xff0c;&#x540e;&#x9762;&#x4f1a;&#x8be6;&#x7ec6;&#x5256;&#x6790;&#x3002;&#xa;&#xa;commands &#x662f;&#x6a21;&#x5757;&#x7684;&#x6307;&#x4ee4;&#x96c6;&#xff0c;nginx&#x7684;&#x6bcf;&#x4e2a;&#x6a21;&#x5757;&#x90fd;&#x53ef;&#x4ee5;&#x5b9e;&#x73b0;&#x4e00;&#x4e9b;&#x81ea;&#x5b9a;&#x4e49;&#x7684;&#x6307;&#x4ee4;&#xff0c;&#x8fd9;&#x4e9b;&#x6307;&#x4ee4;&#x5199;&#x5728;&#x914d;&#x7f6e;&#x6587;&#x4ef6;&#x7684;&#x9002;&#x5f53;&#x914d;&#x7f6e;&#x9879;&#x4e2d;&#xff0c;&#x6bcf;&#x4e00;&#x4e2a;&#x6307;&#x4ee4;&#x5728;&#x6e90;&#x7801;&#x4e2d;&#x5bf9;&#x5e94;&#x7740;&#x4e00;&#x4e2a; ngx_command_t&#x7ed3;&#x6784;&#x7684;&#x53d8;&#x91cf;&#xff0c;nginx&#x4f1a;&#x4ece;&#x914d;&#x7f6e;&#x6587;&#x4ef6;&#x4e2d;&#x628a;&#x6a21;&#x5757;&#x7684;&#x6307;&#x4ee4;&#x8bfb;&#x53d6;&#x51fa;&#x6765;&#x653e;&#x5230;&#x6a21;&#x5757;&#x7684;commands&#x6307;&#x4ee4;&#x6570;&#x7ec4;&#x4e2d;&#xff0c;&#x8fd9;&#x4e9b;&#x6307;&#x4ee4;&#x4e00;&#x822c;&#x662f;&#x628a;&#x914d;&#x7f6e;&#x9879;&#x7684; &#x53c2;&#x6570;&#x503c;&#x8d4b;&#x7ed9;&#x4e00;&#x4e9b;&#x7a0b;&#x5e8f;&#x4e2d;&#x7684;&#x53d8;&#x91cf;&#x6216;&#x8005;&#x662f;&#x5728;&#x4e0d;&#x540c;&#x7684;&#x53d8;&#x91cf;&#x4e4b;&#x95f4;&#x5408;&#x5e76;&#x6216;&#x8f6c;&#x6362;&#x6570;&#x636e;&#xff08;&#x4f8b;&#x5982;include&#x6307;&#x4ee4;&#xff09;&#xff0c;&#x6307;&#x4ee4;&#x53ef;&#x4ee5;&#x5e26;&#x53c2;&#x6570;&#x4e5f;&#x53ef;&#x4ee5;&#x4e0d;&#x5e26;&#x53c2;&#x6570;&#xff0c;&#x4f60;&#x53ef;&#x4ee5;&#x628a;&#x8fd9;&#x4e9b;&#x6307;&#x4ee4;&#x60f3;&#x8c61;&#x4e3a; unix&#x7684;&#x547d;&#x4ee4;&#x884c;&#x6216;&#x8005;&#x662f;&#x4e00;&#x79cd;&#x6a21;&#x677f;&#x8bed;&#x8a00;&#x7684;&#x6307;&#x4ee4;&#x3002;&#x5728;nginx&#x7684;wiki&#x4e0a;&#x6709;&#x6bcf;&#x4e2a;&#x7cfb;&#x7edf;&#x5185;&#x7f6e;&#x6a21;&#x5757;&#x7684;&#x6307;&#x4ee4;&#x8bf4;&#x660e;&#x3002;&#x6307;&#x4ee4;&#x96c6;&#x4f1a;&#x5728;&#x4e0b;&#x4e00;&#x7bc7;&#x4e2d;&#x8be6;&#x7ec6;&#x5256;&#x6790;&#x3002;&#xa;&#xa;type&#x5c31;&#x662f;&#x6a21;&#x5757;&#x7684;&#x79cd;&#x7c7b;&#xff0c;&#x524d;&#x9762;&#x5df2;&#x7ecf;&#x8bf4;&#x8fc7;&#xff0c;nginx&#x6a21;&#x5757;&#x5206;&#x4e3a;core&#x3001;event&#x3001;http&#x548c;mail&#x56db;&#x7c7b;&#xff0c;type&#x7528;&#x5b8f;&#x5b9a;&#x4e49;&#x6807;&#x8bc6;&#x56db;&#x4e2a;&#x5206;&#x7c7b;&#x3002;&#xa;&#xa;init_master&#x3001; init_module&#x3001;init_process&#x3001;init_thread&#x3001;exit_thread&#x3001;exit_process&#x3001; exit_master&#x662f;&#x51fd;&#x6570;&#x6307;&#x9488;&#xff0c;&#x6307;&#x5411;&#x6a21;&#x5757;&#x5b9e;&#x73b0;&#x7684;&#x81ea;&#x5b9a;&#x4e49;&#x56de;&#x8c03;&#x51fd;&#x6570;&#xff0c;&#x8fd9;&#x4e9b;&#x56de;&#x8c03;&#x51fd;&#x6570;&#x5206;&#x522b;&#x5728;&#x521d;&#x59cb;&#x5316;master&#x3001;&#x521d;&#x59cb;&#x5316;&#x6a21;&#x5757;&#x3001;&#x521d;&#x59cb;&#x5316;&#x5de5;&#x4f5c;&#x8fdb;&#x7a0b;&#x3001;&#x521d;&#x59cb;&#x5316;&#x7ebf;&#x7a0b;&#x3001;&#x9000; &#x51fa;&#x7ebf;&#x7a0b;&#x3001;&#x9000;&#x51fa;&#x5de5;&#x4f5c;&#x8fdb;&#x7a0b;&#x548c;&#x9000;&#x51fa;master&#x7684;&#x65f6;&#x5019;&#x88ab;&#x8c03;&#x7528;&#xff0c;&#x5982;&#x679c;&#x6a21;&#x5757;&#x9700;&#x8981;&#x5728;&#x8fd9;&#x4e9b;&#x65f6;&#x673a;&#x505a;&#x5904;&#x7406;&#xff0c;&#x5c31;&#x53ef;&#x4ee5;&#x5b9e;&#x73b0;&#x5bf9;&#x5e94;&#x7684;&#x51fd;&#x6570;&#xff0c;&#x5e76;&#x628a;&#x5b83;&#x8d4b;&#x503c;&#x7ed9;&#x5bf9;&#x5e94;&#x7684;&#x51fd;&#x6570;&#x6307;&#x9488;&#x6765;&#x6ce8;&#x518c;&#x4e00;&#x4e2a;&#x56de;&#x8c03; &#x51fd;&#x6570;&#x63a5;&#x53e3;&#x3002;&#xa;&#xa;&#x5176;&#x4f59;&#x7684;&#x53c2;&#x6570;&#x6ca1;&#x7814;&#x7a76;&#x8fc7;&#xff0c;&#x8c8c;&#x4f3c;&#x4ece;&#x6765;&#x6ca1;&#x6709;&#x7528;&#x8fc7;&#xff0c;&#x5728;&#x5b9a;&#x4e49;&#x6a21;&#x5757;&#x7684;&#x65f6;&#x5019;&#xff0c;&#x6700;&#x524d;&#x9762;&#x7684;7&#x4e2a;&#x5b57;&#x6bb5;&#x548c;&#x6700;&#x540e;&#x9762;&#x7684;8&#x4e2a;&#x5b57;&#x6bb5;&#x7684;&#x521d;&#x59cb;&#x5316;&#x662f;&#x4f7f;&#x7528;&#x5b8f;NGX_MODULE_V1&#x548c;NGX_MODULE_V1_PADDING&#x5b8c;&#x6210;&#x7684;&#xff0c;&#x4f8b;&#x5982;&#xff1a;&#xa;&#xa;ngx_module_t  ngx_core_module = {&#xa;    NGX_MODULE_V1,&#xa;    &amp;ngx_core_module_ctx,                  /* module context */&#xa;    ngx_core_commands,                     /* module directives */&#xa;    NGX_CORE_MODULE,                       /* module type */&#xa;    NULL,                                  /* init master */&#xa;    NULL,                                  /* init module */&#xa;    NULL,                                  /* init process */&#xa;    NULL,                                  /* init thread */&#xa;    NULL,                                  /* exit thread */&#xa;    NULL,                                  /* exit process */&#xa;    NULL,                                  /* exit master */&#xa;    NGX_MODULE_V1_PADDING&#xa;};&#xff08;&#x89c1;src/core/nginx.c&#xff09;&#xa;&#xa;&#x63a5; &#x4e0b;&#x6765;&#x5256;&#x6790;&#x4e00;&#x4e0b;ngx_module_t&#x7684;ctx&#x6210;&#x5458;&#xff0c;&#x8fd9;&#x4e2a;&#x6210;&#x5458;&#x7684;&#x610f;&#x4e49;&#x662f;&#x6bcf;&#x4e2a;&#x6a21;&#x5757;&#x7684;&#x4e0a;&#x4e0b;&#x6587;&#xff0c;&#x6240;&#x8c13;&#x7684;&#x4e0a;&#x4e0b;&#x6587;&#xff0c;&#x4e5f;&#x5c31;&#x662f;&#x8fd9;&#x4e2a;&#x6a21;&#x5757;&#x7a76;&#x7adf;&#x53ef;&#x4ee5;&#x505a;&#x4ec0;&#x4e48;&#xff0c;&#x4ece;&#x524d;&#x9762;&#x7684;&#x5206;&#x6790;&#x53ef;&#x4ee5; &#x77e5;&#x9053;nginx&#x628a;&#x6240;&#x6709;&#x6a21;&#x5757;&#x5206;&#x4e3a;&#x56db;&#x7c7b;&#xff08;core/event/http/mail&#xff09;&#xff0c;&#x5bf9;&#x5e94;&#x7684;&#xff0c;nginx&#x4e5f;&#x8ba4;&#x4e3a;&#x6a21;&#x5757;&#x7684;&#x4e0a;&#x4e0b;&#x6587;&#x662f;&#x56db;&#x79cd;&#xff0c;&#x5206;&#x522b;&#x7528;&#x56db;&#x4e2a;&#x7ed3;&#x6784;&#x4f53;&#x8868; &#x793a;&#xff1a;ngx_core_module_t&#x3001;ngx_event_module_t&#x3001;ngx_http_module_t&#x3001; ngx_mail_module_t&#x3002;&#x4e5f;&#x5c31;&#x662f;&#x8bf4;&#xff0c;&#x5982;&#x679c;&#x4e00;&#x4e2a;&#x6a21;&#x5757;&#x5c5e;&#x4e8e;core&#x5206;&#x7c7b;&#xff0c;&#x90a3;&#x4e48;&#x5176;&#x4e0a;&#x4e0b;&#x6587;&#x5c31;&#x662f;ngx_core_module_t&#x7ed3;&#x6784;&#x7684;&#x53d8;&#x91cf;&#xff0c;&#x5176;&#x4ed6;&#x7c7b; &#x63a8;&#x3002;&#x8fd9;&#x56db;&#x4e2a;&#x7ed3;&#x6784;&#x4f53;&#x7c7b;&#x4f3c;&#x4e8e;ngx_module_t&#xff0c;&#x4e5f;&#x662f;&#x4e00;&#x4e9b;&#x51fd;&#x6570;&#x6307;&#x9488;&#x7684;&#x96c6;&#x5408;&#xff0c;&#x6bcf;&#x4e2a;&#x6a21;&#x5757;&#x6839;&#x636e;&#x81ea;&#x5df1;&#x6240;&#x5c5e;&#x7684;&#x5206;&#x7c7b;&#xff0c;&#x81ea;&#x5b9a;&#x4e49;&#x4e00;&#x4e9b;&#x64cd;&#x4f5c;&#x51fd;&#x6570;&#xff0c;&#x901a;&#x8fc7;&#x628a;&#x8fd9;&#x4e9b;&#x64cd;&#x4f5c;&#x51fd;&#x6570;&#x8d4b;&#x503c;&#x4e3a; &#x5bf9;&#x5e94;&#x5206;&#x7c7b;&#x7ed3;&#x6784;&#x4f53;&#x4e2d;&#x7684;&#x51fd;&#x6570;&#x6307;&#x9488;&#xff0c;&#x8fd9;&#x5c31;&#x6ce8;&#x518c;&#x4e86;&#x4e00;&#x4e2a;&#x56de;&#x8c03;&#x51fd;&#x6570;&#x63a5;&#x53e3;&#xff0c;&#x4ece;&#x800c;&#x5c31;&#x53ef;&#x4ee5;&#x5b9e;&#x73b0;&#x66f4;&#x7ec6;&#x81f4;&#x7684;&#x529f;&#x80fd;&#x4e86;&#xff0c;&#x4f8b;&#x5982;&#x53ef;&#x4ee5;&#x4e3a;event&#x6a21;&#x5757;&#x6dfb;&#x52a0;&#x4e8b;&#x4ef6;&#x5904;&#x7406;&#x51fd;&#x6570;&#xff0c;&#x53ef;&#x4ee5;&#x4e3a;http&#x6a21;&#x5757;&#x6dfb;&#x52a0;&#x8fc7;&#x6ee4;&#x51fd;&#x6570;&#x7b49;&#x3002;&#xa;&#xa;&#x8fd9;&#x56db;&#x4e2a;&#x7ed3;&#x6784;&#x4f53;&#x548c;commands&#x4f1a;&#x5728;&#x4e0b;&#x4e00;&#x7bc7;&#x4e2d;&#x8be6;&#x7ec6;&#x5256;&#x6790;&#xff0c;&#x73b0;&#x5728;&#x628a;&#x6ce8;&#x610f;&#x529b;&#x8f6c;&#x79fb;&#x4e00;&#x4e0b;&#xff0c;&#x6765;&#x54c1;&#x5473;&#x4e00;&#x4e0b;nginx&#x7684;&#x547d;&#x540d;&#xff0c;&#x627e;&#x51fa;&#x5176;&#x89c4;&#x5f8b;&#xff0c;&#x8fd9;&#x5bf9;&#x9605;&#x8bfb;&#x6e90;&#x7801;&#x7684;&#x5e2e;&#x52a9;&#x662f;&#x975e;&#x5e38;&#x5927;&#x7684;&#x3002;&#xa;&#xa;&#x9996;&#x5148;&#x662f;&#x6a21;&#x5757;&#xff0c;&#x6a21;&#x5757;&#x662f;ngx_module_t&#x7ed3;&#x6784;&#x7684;&#x53d8;&#x91cf;&#xff0c;&#x5176;&#x547d;&#x540d;&#x683c;&#x5f0f;&#x4e3a;&#xff1a;ngx_&lt;module name&gt;_module&#x3002;&#xa;&#x7136;&#x540e;&#x662f;&#x6a21;&#x5757;&#x4e0a;&#x4e0b;&#x6587;&#xff0c;&#x6a21;&#x5757;&#x4e0a;&#x4e0b;&#x6587;&#x6839;&#x636e;&#x4e0d;&#x540c;&#x7684;&#x6a21;&#x5757;&#x5206;&#x7c7b;&#x5206;&#x522b;&#x662f;ngx_core_module_t&#x3001;ngx_event_module_t&#x3001; ngx_http_module_t&#x548c;ngx_mail_module_t&#x7ed3;&#x6784;&#x7684;&#x53d8;&#x91cf;&#xff0c;&#x5176;&#x547d;&#x540d;&#x683c;&#x5f0f;&#x4e3a;&#xff1a;ngx_&lt;module name&gt;_module_ctx&#x3002;&#xa;&#x63a5;&#x7740;&#x662f;&#x6a21;&#x5757;&#x547d;&#x4ee4;&#x96c6;&#xff0c;&#x6a21;&#x5757;&#x547d;&#x4ee4;&#x96c6;&#x662f;ngx_command_t&#x7684;&#x6307;&#x9488;&#x6570;&#x7ec4;&#xff0c;&#x5176;&#x547d;&#x540d;&#x683c;&#x5f0f;&#x4e3a;&#xff1a;ngx_&lt;module name&gt;_commands&#x3002;"/>
</node>
<node CREATED="1388928539349" FOLDED="true" ID="ID_945087301" LINK="http://blog.csdn.net/kenbinzhang/article/details/4663258" MODIFIED="1389072376005" TEXT="&#x6e90;&#x7801;&#x5206;&#x6790;">
<node CREATED="1388928543889" ID="ID_1694430654" MODIFIED="1389072245712">
<richcontent TYPE="NODE"><html>
  <head>
    
  </head>
  <body>
    <p>
      &#27169;&#22359;&#30340;&#19978;&#19979;&#25991;&#26159;&#22235;&#20010;&#32467;&#26500;&#20307;&#23450;&#20041;&#30340;&#65306;ngx_core_module_t&#12289;ngx_event_module_t&#12289;ngx_http_module_t&#12289;ngx_mail_module_t&#65292;&#20998;&#21035;&#23545;&#24212;&#20110;&#22235;&#31867;&#27169;&#22359;&#12290;
    </p>
    <p>
      
    </p>
    <p>
      
    </p>
    <p>
      &#36825; &#22235;&#20010;&#32467;&#26500;&#20307;&#37117;&#25552;&#20379;&#20102;&#38057;&#23376;&#20379;&#27169;&#22359;&#27880;&#20876;&#19982;&#19978;&#19979;&#25991;&#26377;&#20851;&#30340;&#25805;&#20316;&#65292;&#26680;&#24515;&#27169;&#22359;&#25552;&#20379;&#20102;create_conf&#21644;init_conf&#20004;&#20010;&#38057;&#23376;&#65307;event&#27169;&#22359;&#20063;&#25552;&#20379;&#20102; create_conf&#21644;init_conf&#20004;&#20010;&#38057;&#23376;&#65292;&#38500;&#27492;&#20043;&#22806;&#36824;&#25552;&#20379;&#20102;&#19968;&#38598;&#25805;&#20316;&#20107;&#20214;&#30340;&#38057;&#23376;&#65307;http&#27169;&#22359;&#25552;&#20379;&#20102;&#20960;&#20010;&#22312;&#35835;&#21462;&#37197;&#32622;&#25991;&#20214;&#21069;&#21518;&#21644;&#25805;&#20316; mail/srv/loc&#37197;&#32622;&#39033;&#26102;&#20505;&#25191;&#34892;&#30340;&#38057;&#23376;&#65307;mail&#27169;&#22359;&#20063;&#25552;&#20379;&#19968;&#20123;&#31867;&#20284;&#20110;http&#27169;&#22359;&#30340;&#38057;&#23376;&#65292;&#19981;&#36807;&#27604;http&#27169;&#22359;&#31616;&#21333;&#19968;&#20123;&#12290;
    </p>
    <p>
      
    </p>
    <p>
      &#21482;&#35201;&#35774; &#32622;&#20102;&#38057;&#23376;&#65292;&#36825;&#20123;&#38057;&#23376;&#23601;&#20250;&#22312;&#29305;&#23450;&#30340;&#26102;&#26426;&#34987;&#27491;&#30830;&#35843;&#29992;&#65292;&#21482;&#19981;&#36807;&#27169;&#22359;&#30340;&#31181;&#31867;&#19981;&#21516;&#65292;&#20854;&#38057;&#23376;&#35843;&#29992;&#30340;&#26102;&#26426;&#20063;&#23601;&#22823;&#19981;&#21516;&#65292;&#36825;&#26159;&#30001;&#20110;nginx&#30340;&#22235;&#31181;&#27169;&#22359;&#20043;&#38388;&#30340;&#24046;&#21035;&#24456;&#22823;&#65306;&#26680;&#24515; &#31867;&#27169;&#22359;&#19968;&#33324;&#26159;&#20840;&#23616;&#24615;&#30340;&#27169;&#22359;&#65292;&#23427;&#20204;&#20250;&#22312;&#31995;&#32479;&#30340;&#35768;&#22810;&#37096;&#20998;&#34987;&#20351;&#29992;&#65292;&#27604;&#22914;errlog&#27169;&#22359;&#36127;&#36131;&#20889;&#38169;&#35823;&#26085;&#24535;&#65292;&#23427;&#34987;&#20351;&#29992;&#22312;&#35768;&#22810;&#22320;&#26041;&#65307;event&#31867;&#27169;&#22359;&#26159;&#20107;&#20214;&#39537;&#21160;&#30456;&#20851;&#30340; &#27169;&#22359;&#65292;nginx&#22312;&#19981;&#21516;&#25805;&#20316;&#31995;&#32479;&#19978;&#37117;&#20250;&#26377;&#32467;&#21512;&#35813;&#25805;&#20316;&#31995;&#32479;&#29305;&#26377;&#25509;&#21475;&#30340;&#20107;&#20214;&#22788;&#29702;&#27169;&#22359;&#65292;&#27604;&#22914;&#22312;linux&#20013;&#21487;&#20197;&#20351;&#29992;epoll&#27169;&#22359;&#65292;&#22312;freebsd&#20013;&#21487;&#20197;&#20351;&#29992; kqueue&#27169;&#22359;&#65292;&#22312;solaris&#20013;&#21487;&#20197;&#20351;&#29992;devpoll&#20107;&#20214;&#31561;&#65307;http&#31867;&#27169;&#22359;&#26159;&#29992;&#20110;&#22788;&#29702;http&#36755;&#20837;&#65292;&#20135;&#29983;&#36755;&#20986;&#65292;&#36807;&#28388;&#36755;&#20986;&#65292;&#36127;&#36733;&#22343;&#34913;&#31561;&#30340;&#27169;&#22359;&#65292;&#36825; &#26159;nginx&#20316;&#20026;web&#26381;&#21153;&#22120;&#30340;&#26680;&#24515;&#37096;&#20998;&#65292;Emiller&#30340;&#35770;&#25991;&#23601;&#26159;&#20851;&#20110;http&#27169;&#22359;&#30340;&#24320;&#21457;&#25351;&#24341;&#65307;mail&#31867;&#27169;&#22359;&#26159;&#23454;&#29616;&#37038;&#20214;&#20195;&#29702;&#30340;&#27169;&#22359;&#65292;&#23454;&#29616;&#20102; smtp/pop3/imap&#31561;&#21327;&#35758;&#30340;&#37038;&#20214;&#20195;&#29702;&#12290;
    </p>
    <p>
      
    </p>
    <p>
      &#21040;&#36825;&#37324;&#65292;&#24050;&#32463;&#25226;nginx&#25286;&#24320;&#20026;&#19968;&#20010;&#20010;&#30340;&#27169;&#22359;&#65292;&#21518;&#38754;&#30340;&#20998;&#26512;&#23601;&#21487;&#20197;&#23545;&#27599;&#20010;&#27169;&#22359;&#36827;&#34892;&#35814;&#32454;&#30340;&#21078;&#26512;&#65292;&#20063;&#23601;&#21487;&#20197;&#36827;&#20837;&#38405;&#35835;&#28304;&#30721;&#30340;&#31934;&#35835;&#38454;&#27573;&#20102;&#12290;&#22312;&#36825;&#20043;&#21069;&#65292;&#20877;&#23581;&#35797;&#25226;&#36825;&#20123;&#29420;&#31435;&#30340;&#27169;&#22359;&#20018;&#19968;&#19979;&#65292;&#20174;main&#24320;&#22987;&#65292;&#30475;&#30475;nginx&#26159;&#20309;&#26102;&#22312;&#20309;&#22320;&#35843;&#24230;&#36825;&#20123;&#27169;&#22359;&#24178;&#27963;&#30340;&#12290;
    </p>
    <p>
      
    </p>
    <p>
      <font color="#080bfb"><b>main</b></font>
    </p>
    <p>
      {
    </p>
    <p>
      &#160;&#160;&#160;&#160;...
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;// &#25152;&#26377;&#27169;&#22359;&#28857;&#19968;&#19979;&#25968;
    </p>
    <p>
      &#160;&#160;&#160;&#160;ngx_max_module = 0;
    </p>
    <p>
      &#160;&#160;&#160;&#160;for (i = 0; ngx_modules[i]; i++) {
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160; <font color="#f80707">ngx_modules[i]-&gt;index</font>&#160; = ngx_max_module++;
    </p>
    <p>
      &#160;&#160;&#160;&#160;}
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;// &#20027;&#35201;&#30340;&#21021;&#22987;&#21270;&#36807;&#31243;&#65292;&#20840;&#23616;&#30340;&#25968;&#25454;&#23384;&#25918;&#21040;ngx_cycle_t&#32467;&#26500;&#30340;&#21464;&#37327;&#20013;
    </p>
    <p>
      &#160;&#160;&#160;&#160;cycle = ngx_init_cycle(&amp;init_cycle);
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;...
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;// &#21551;&#21160;&#36827;&#31243;&#24178;&#27963;
    </p>
    <p>
      &#160;&#160;&#160;&#160;if (ngx_process == NGX_PROCESS_SINGLE) {
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;ngx_single_process_cycle(cycle);
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;} else {
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;ngx_master_process_cycle(cycle);
    </p>
    <p>
      &#160;&#160;&#160;&#160;}
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;return 0;
    </p>
    <p>
      }
    </p>
    <p>
      
    </p>
    <p>
      <font color="#260bee"><b>ngx_init_cycle</b></font>
    </p>
    <p>
      {
    </p>
    <p>
      &#160;&#160;&#160;&#160;...
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;// &#35843;&#24230;core&#27169;&#22359;&#30340;&#38057;&#23376;create_conf&#65292;&#24182;&#19988;&#25226;&#21019;&#24314;&#30340;&#37197;&#32622;&#32467;&#26500;&#20307;&#21464;&#37327;&#23384;&#25918;&#21040;cyclep-&gt;conf_ctx&#20013;
    </p>
    <p>
      &#160;&#160;&#160;&#160;for (i = 0; ngx_modules[i]; i++) {
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if (<font color="#ec0707">ngx_modules[i]-&gt;type</font>&#160; != NGX_CORE_MODULE) {
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;continue;
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;}
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;module = ngx_modules[i]-&gt;ctx;
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if (module-&gt;create_conf) {
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;rv = module-&gt;create_conf(cycle);
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if (rv == NULL) {
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;ngx_destroy_pool(pool);
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;return NULL;
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;}
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;cycle-&gt;conf_ctx[ngx_modules[i]-&gt;index] = rv;
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;}
    </p>
    <p>
      &#160;&#160;&#160;&#160;}
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;...
    </p>
    <p>
      &#160;&#160;&#160;&#160;ngx_conf_parse
    </p>
    <p>
      &#160;&#160;&#160;&#160;...
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;// &#35843;&#24230;core&#27169;&#22359;&#30340;&#38057;&#23376;init_conf&#65292;&#35774;&#32622;&#21018;&#25165;&#21019;&#24314;&#30340;&#37197;&#32622;&#32467;&#26500;&#20307;&#21464;&#37327;&#65288;&#29992;&#20174;&#37197;&#32622;&#25991;&#20214;&#20013;&#35835;&#21462;&#30340;&#25968;&#25454;&#36171;&#20540;&#65289;
    </p>
    <p>
      &#160;&#160;&#160;&#160;for (i = 0; ngx_modules[i]; i++) {
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if (ngx_modules[i]-&gt;type != NGX_CORE_MODULE) {
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;continue;
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;}
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;module = ngx_modules[i]-&gt;ctx;
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if (<font color="#f90a0a">module-&gt;init_conf</font>) {
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if (module-&gt;init_conf(cycle, cycle-&gt;conf_ctx[ngx_modules[i]-&gt;index])
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;== NGX_CONF_ERROR)
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;{
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;ngx_destroy_cycle_pools(&amp;conf);
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;return NULL;
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;}
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;}
    </p>
    <p>
      &#160;&#160;&#160;&#160;}
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;...
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;// &#35843;&#24230;&#25152;&#26377;&#27169;&#22359;&#30340;init_module&#38057;&#23376;&#65292;&#21021;&#22987;&#21270;&#27169;&#22359;
    </p>
    <p>
      &#160;&#160;&#160;&#160;for (i = 0; ngx_modules[i]; i++) {
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if (ngx_modules[i]-&gt;init_module) {
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if (<font color="#f30404">ngx_modules[i]-&gt;init_module</font>(cycle) != NGX_OK) {
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;/* fatal */
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;exit(1);
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;}
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;}
    </p>
    <p>
      &#160;&#160;&#160;&#160;}
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;...
    </p>
    <p>
      }
    </p>
    <p>
      
    </p>
    <p>
      <font color="#0e0af6"><b>ngx_conf_parse</b></font>
    </p>
    <p>
      {
    </p>
    <p>
      &#160;&#160;&#160;&#160;...
    </p>
    <p>
      &#160;&#160;&#160;&#160;ngx_conf_handler
    </p>
    <p>
      &#160;&#160;&#160;&#160;...
    </p>
    <p>
      }
    </p>
    <p>
      
    </p>
    <p>
      <font color="#0925fd"><b>ngx_conf_handler</b></font>
    </p>
    <p>
      {
    </p>
    <p>
      &#160;&#160;&#160;&#160;...
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;// &#22788;&#29702;&#27169;&#22359;&#30340;&#25351;&#20196;&#38598;
    </p>
    <p>
      &#160;&#160;&#160;&#160;for (i = 0; ngx_modules[i]; i++) {
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;/* look up the directive in the appropriate modules */
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if (<font color="#f80707">ngx_modules[i]-&gt;type</font>&#160; != NGX_CONF_MODULE
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&amp;&amp; ngx_modules[i]-&gt;type != cf-&gt;module_type)
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;{
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;continue;
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;}
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;cmd = <font color="#fb0404">ngx_modules[i]-&gt;commands</font>;
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if (cmd == NULL) {
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;continue;
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;}
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;for ( /* void */ ; cmd-&gt;name.len; cmd++) {
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if (name-&gt;len != cmd-&gt;name.len) {
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;continue;
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;}
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if (ngx_strcmp(name-&gt;data, cmd-&gt;name.data) != 0) {
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;continue;
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;}
    </p>
    <p>
      
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;/* is the directive's location right ? */
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if (!(cmd-&gt;type &amp; cf-&gt;cmd_type)) {
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if (cmd-&gt;type &amp; NGX_CONF_MULTI) {
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;multi = 1;
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;continue;
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;}
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;goto not_allowed;
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;}
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if (!(cmd-&gt;type &amp; NGX_CONF_BLOCK) &amp;&amp; last != NGX_OK) {
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;ngx_conf_log_error(NGX_LOG_EMERG, cf, 0,
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&quot;directive /&quot;%s/&quot; is not terminated by /&quot;;/&quot;&quot;,
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;name-&gt;data);
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;return NGX_ERROR;
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;}
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if ((cmd-&gt;type &amp; NGX_CONF_BLOCK) &amp;&amp; last != NGX_CONF_BLOCK_START) {
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;ngx_conf_log_error(NGX_LOG_EMERG, cf, 0,
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&quot;directive /&quot;%s/&quot; has no opening /&quot;{/&quot;&quot;,
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;name-&gt;data);
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;return NGX_ERROR;
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;}
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;/* is the directive's argument count right ? */
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if (!(cmd-&gt;type &amp; NGX_CONF_ANY)) {
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if (cmd-&gt;type &amp; NGX_CONF_FLAG) {
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if (cf-&gt;args-&gt;nelts != 2) {
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;goto invalid;
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;}
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;} else if (cmd-&gt;type &amp; NGX_CONF_1MORE) {
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if (cf-&gt;args-&gt;nelts &lt; 2) {
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;goto invalid;
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;}
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;} else if (cmd-&gt;type &amp; NGX_CONF_2MORE) {
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if (cf-&gt;args-&gt;nelts &lt; 3) {
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;goto invalid;
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;}
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;} else if (cf-&gt;args-&gt;nelts &gt; NGX_CONF_MAX_ARGS) {
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;goto invalid;
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;} else if (!(cmd-&gt;type &amp; argument_number[cf-&gt;args-&gt;nelts - 1]))
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;{
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;goto invalid;
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;}
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;}
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;/* set up the directive's configuration context */
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;conf = NULL;
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if (cmd-&gt;type &amp; NGX_DIRECT_CONF) {
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;conf = ((void **) cf-&gt;ctx)[ngx_modules[i]-&gt;index];
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;} else if (cmd-&gt;type &amp; NGX_MAIN_CONF) {
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;conf = &amp;(((void **) cf-&gt;ctx)[ngx_modules[i]-&gt;index]);
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;} else if (cf-&gt;ctx) {
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;confp = *(void **) ((char *) cf-&gt;ctx + cmd-&gt;conf);
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if (confp) {
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;conf = confp[ngx_modules[i]-&gt;ctx_index];
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;}
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;}
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;// &#35843;&#24230;&#25351;&#20196;&#30340;&#38057;&#23376;set
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;rv = <font color="#f70404">cmd-&gt;set</font>(cf, cmd, conf);
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if (rv == NGX_CONF_OK) {
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;return NGX_OK;
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;}
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if (rv == NGX_CONF_ERROR) {
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;return NGX_ERROR;
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;}
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;ngx_conf_log_error(NGX_LOG_EMERG, cf, 0,
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&quot;/&quot;%s/&quot; directive %s&quot;, name-&gt;data, rv);
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;return NGX_ERROR;
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;}
    </p>
    <p>
      &#160;&#160;&#160;&#160;}
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;...
    </p>
    <p>
      }
    </p>
    <p>
      
    </p>
    <p>
      ngx_master_process_cycle
    </p>
    <p>
      {
    </p>
    <p>
      &#160;&#160;&#160;&#160;...
    </p>
    <p>
      &#160;&#160;&#160;&#160;ngx_start_worker_processes
    </p>
    <p>
      &#160;&#160;&#160;&#160;...
    </p>
    <p>
      &#160;&#160;&#160;&#160;ngx_master_process_exit
    </p>
    <p>
      &#160;&#160;&#160;&#160;...
    </p>
    <p>
      }
    </p>
    <p>
      
    </p>
    <p>
      ngx_start_worker_processes
    </p>
    <p>
      {
    </p>
    <p>
      &#160;&#160;&#160;&#160;...
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;// for i = 0 to n
    </p>
    <p>
      &#160;&#160;&#160;&#160;ngx_worker_process_cycle
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;...
    </p>
    <p>
      }
    </p>
    <p>
      
    </p>
    <p>
      ngx_worker_process_cycle
    </p>
    <p>
      {
    </p>
    <p>
      &#160;&#160;&#160;&#160;...
    </p>
    <p>
      &#160;&#160;&#160;&#160;ngx_worker_process_init
    </p>
    <p>
      &#160;&#160;&#160;&#160;...
    </p>
    <p>
      &#160;&#160;&#160;&#160;ngx_worker_process_exit
    </p>
    <p>
      &#160;&#160;&#160;&#160;...
    </p>
    <p>
      }
    </p>
    <p>
      
    </p>
    <p>
      ngx_worker_process_init
    </p>
    <p>
      {
    </p>
    <p>
      &#160;&#160;&#160;&#160;...
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;// &#35843;&#24230;&#25152;&#26377;&#27169;&#22359;&#30340;&#38057;&#23376;init_process
    </p>
    <p>
      &#160;&#160;&#160;&#160;for (i = 0; ngx_modules[i]; i++) {
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if (ngx_modules[i]-&gt;init_process) {
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if (ngx_modules[i]-&gt;<font color="#fa0909">init_process</font>(cycle) == NGX_ERROR) {
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;/* fatal */
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;exit(2);
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;}
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;}
    </p>
    <p>
      &#160;&#160;&#160;&#160;}
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;...
    </p>
    <p>
      }
    </p>
    <p>
      
    </p>
    <p>
      ngx_worker_process_exit
    </p>
    <p>
      {
    </p>
    <p>
      &#160;&#160;&#160;&#160;...
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;// &#35843;&#24230;&#25152;&#26377;&#27169;&#22359;&#30340;&#38057;&#23376;exit_process
    </p>
    <p>
      &#160;&#160;&#160;&#160;for (i = 0; ngx_modules[i]; i++) {
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if (ngx_modules[i]-&gt;exit_process) {
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;ngx_modules[i]-&gt;<font color="#fb0808">exit_process</font>(cycle);
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;}
    </p>
    <p>
      &#160;&#160;&#160;&#160;}
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;...
    </p>
    <p>
      }
    </p>
    <p>
      
    </p>
    <p>
      ngx_master_process_exit
    </p>
    <p>
      {
    </p>
    <p>
      &#160;&#160;&#160;&#160;...
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;// &#35843;&#24230;&#25152;&#26377;&#27169;&#22359;&#30340;&#38057;&#23376;exit_master
    </p>
    <p>
      &#160;&#160;&#160;&#160;for (i = 0; ngx_modules[i]; i++) {
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if (ngx_modules[i]-&gt;exit_master) {
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;ngx_modules[i]-&gt;<font color="#fb0404">exit_master</font>(cycle);
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;}
    </p>
    <p>
      &#160;&#160;&#160;&#160;}
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;...
    </p>
    <p>
      }
    </p>
    <p>
      
    </p>
    <p>
      &#22312;&#36825;&#20010;&#35843;&#24230;&#27969;&#20013;&#65292;&#25105;&#20204;&#24182;&#27809;&#26377;&#30475;&#21040;event&#31867;&#27169;&#22359;&#12289;http&#31867;&#27169;&#22359;&#21644;mail&#31867;&#27169;&#22359;&#38057;&#23376;&#30340;&#35843;&#24230;&#65292;&#37027;&#26159;&#30001;&#20110;&#36825;&#19977;&#31867;&#27169;&#22359;&#27880;&#20876;&#21040;ngx_module_t&#30340;&#38057;&#23376;&#21644;ngx_command_t&#30340;&#38057;&#23376;&#19978;&#30340;&#25805;&#20316;&#20013;&#35843;&#24230;&#20102;&#36825;&#20123;&#29420;&#29305;&#30340;&#27169;&#22359;&#19978;&#19979;&#25991;&#30340;&#38057;&#23376;
    </p>
  </body>
</html></richcontent>
</node>
</node>
<node CREATED="1389071862448" ID="ID_1099663295" MODIFIED="1389071867650" TEXT="init_master"/>
<node CREATED="1389071881236" ID="ID_514595002" LINK="#ID_929255851" MODIFIED="1389073067734" TEXT="exit_master"/>
<node CREATED="1389071898360" ID="ID_1889264682" LINK="#ID_1428001477" MODIFIED="1389072625883" TEXT="init_module"/>
<node COLOR="#080d06" CREATED="1388930930010" ID="ID_475746055" LINK="#ID_213440528" MODIFIED="1389104970637" TEXT="init_process"/>
<node CREATED="1389070521808" ID="ID_1607511909" LINK="#ID_1476584593" MODIFIED="1389070578811" TEXT="exit_process"/>
<<<<<<< HEAD
<node CREATED="1389071735683" ID="ID_1947333285" LINK="#ID_1428001477" MODIFIED="1389073332593" TEXT="ctx"/>
<node CREATED="1389072414336" ID="ID_646652948" LINK="#ID_1428001477" MODIFIED="1389072478077" TEXT="type"/>
<node CREATED="1389072543587" ID="ID_1464638327" MODIFIED="1389072547340" TEXT="index"/>
<node CREATED="1389072558267" ID="ID_1494756140" MODIFIED="1389072564991" TEXT="ctx_index"/>
</node>
<node CREATED="1388928327257" FOLDED="true" ID="ID_13477724" LINK="#ID_594437396" MODIFIED="1389107638080" TEXT="ngx_command_t">
<icon BUILTIN="full-2"/>
<node CREATED="1388928340305" FOLDED="true" ID="ID_1478861915" LINK="http://blog.csdn.net/kenbinzhang/article/details/4658085" MODIFIED="1389105627234" TEXT="&#x6e90;&#x7801;&#x5206;&#x6790;">
<node CREATED="1388928363577" ID="ID_689473945" MODIFIED="1388928399963" TEXT="&#x6a21;&#x5757;&#x7684;&#x6307;&#x4ee4;&#x5728;&#x6e90;&#x7801;&#x4e2d;&#x662f;ngx_command_t&#x7ed3;&#x6784;&#x7684;&#x53d8;&#x91cf;&#xff0c;ngx_command_t&#x7684;&#x58f0;&#x660e;&#x5728;src/core/ngx_conf_file.h&#x4e2d;:&#xa;&#xa;struct ngx_command_s {&#xa;    ngx_str_t             name;&#xa;    ngx_uint_t            type;&#xa;    char               *(*set)(ngx_conf_t *cf, ngx_command_t *cmd, void *conf);&#xa;    ngx_uint_t            conf;&#xa;    ngx_uint_t            offset;&#xa;    void                 *post;&#xa;};&#xa;&#xa;name&#x662f;&#x6307;&#x4ee4;&#x540d;&#x79f0;&#x7684;&#x5b57;&#x7b26;&#x4e32;&#xff0c;&#x4e0d;&#x5305;&#x542b;&#x7a7a;&#x683c;&#x3002;&#xa;&#xa;type&#x662f;&#x6807;&#x8bc6;&#x7b26;&#x96c6;&#xff0c;&#x6807;&#x8bc6;&#x6307;&#x4ee4;&#x5728;&#x914d;&#x7f6e;&#x6587;&#x4ef6;&#x4e2d;&#x7684;&#x5408;&#x6cd5;&#x4f4d;&#x7f6e;&#x548c;&#x6307;&#x4ee4;&#x7684;&#x53c2;&#x6570;&#x4e2a;&#x6570;&#x3002;&#x8fd9;&#x662f;&#x4e00;&#x4e2a;&#x81f3;&#x5c11;&#x6709;32bit&#x7684;&#x65e0;&#x7b26;&#x53f7;&#x6574;&#x5f62;&#xff0c;&#x524d;16bit&#x7528;&#x4e8e;&#x6807;&#x8bc6;&#x4f4d;&#x7f6e;&#xff0c;&#x540e;16bit&#x7528;&#x4e8e;&#x6807;&#x8bc6;&#x53c2;&#x6570;&#x3002;&#xa;&#xa;&#x5148;&#x770b;&#x770b;&#x53c2;&#x6570;&#x7684;&#x6807;&#x8bc6;&#xff0c;&#x5b8f;&#x5b9a;&#x4e49;&#x5728;src/core/ngx_conf_file.h&#x4e2d;:&#xa;&#xa;#define NGX_CONF_NOARGS      0x00000001 &#xff08;&#x6ca1;&#x6709;&#x53c2;&#x6570;&#xff09;&#xa;#define NGX_CONF_TAKE1       0x00000002 &#xff08;&#x6709;1&#x4e2a;&#x53c2;&#x6570;&#xff09;&#xa;#define NGX_CONF_TAKE2       0x00000004 &#xff08;&#x6709;2&#x4e2a;&#x53c2;&#x6570;&#xff09;&#xa;#define NGX_CONF_TAKE3       0x00000008 &#xff08;&#x6709;3&#x4e2a;&#x53c2;&#x6570;&#xff09;&#xa;#define NGX_CONF_TAKE4       0x00000010 &#xff08;&#x6709;4&#x4e2a;&#x53c2;&#x6570;&#xff09;&#xa;#define NGX_CONF_TAKE5       0x00000020 &#xff08;&#x6709;5&#x4e2a;&#x53c2;&#x6570;&#xff09;&#xa;#define NGX_CONF_TAKE6       0x00000040 &#xff08;&#x6709;6&#x4e2a;&#x53c2;&#x6570;&#xff09;&#xa;#define NGX_CONF_TAKE7       0x00000080 &#xff08;&#x6709;7&#x4e2a;&#x53c2;&#x6570;&#xff09;&#xa;&#xa;#define NGX_CONF_MAX_ARGS    8&#xa;&#xa;#define NGX_CONF_TAKE12      (NGX_CONF_TAKE1|NGX_CONF_TAKE2) &#xff08;&#x6709;1&#x4e2a;&#x6216;&#x8005;&#x6709;2&#x4e2a;&#x53c2;&#x6570;&#xff09;&#xa;#define NGX_CONF_TAKE13      (NGX_CONF_TAKE1|NGX_CONF_TAKE3)&#xa;&#xa;#define NGX_CONF_TAKE23      (NGX_CONF_TAKE2|NGX_CONF_TAKE3)&#xa;&#xa;#define NGX_CONF_TAKE123     (NGX_CONF_TAKE1|NGX_CONF_TAKE2|NGX_CONF_TAKE3)&#xa;#define NGX_CONF_TAKE1234    (NGX_CONF_TAKE1|NGX_CONF_TAKE2|NGX_CONF_TAKE3   /&#xa;                              |NGX_CONF_TAKE4)&#xa;&#xa;#define NGX_CONF_ARGS_NUMBER 0x000000ff&#xa;#define NGX_CONF_BLOCK       0x00000100  (&#x5757;&#x57df;&#xff0c;&#x540e;&#x9762;&#x8ddf;{...}&#xff0c;&#x4f8b;&#x5982;:events {...})&#xa;#define NGX_CONF_FLAG        0x00000200 &#xff08;&#x6709;&#x4e00;&#x4e2a;&#x5e03;&#x5c14;&#x578b;&#x53c2;&#x6570;&#xff09;&#xa;#define NGX_CONF_ANY         0x00000400&#xa;#define NGX_CONF_1MORE       0x00000800 &#xff08;&#x81f3;&#x591a;&#x6709;1&#x4e2a;&#x53c2;&#x6570;&#xff09;&#xa;#define NGX_CONF_2MORE       0x00001000 &#xff08;&#x81f3;&#x591a;&#x6709;2&#x4e2a;&#x53c2;&#x6570;&#xff09;&#xa;#define NGX_CONF_MULTI       0x00002000&#xa;&#xa;&#x518d;&#x770b;&#x770b;&#x4f4d;&#x7f6e;&#x7684;&#x6807;&#x8bc6;&#xff0c;&#x4f4d;&#x7f6e;&#x7684;&#x6807;&#x8bc6;&#x5b8f;&#x5b9a;&#x4e49;&#x5728;&#x51e0;&#x4e2a;&#x6587;&#x4ef6;&#x4e2d;:&#xa;&#xa;src/core/ngx_conf_file.h:&#xa;#define NGX_DIRECT_CONF      0x00010000&#xa;&#xa;#define NGX_MAIN_CONF        0x01000000&#xa;#define NGX_ANY_CONF         0x0F000000&#xa;&#xa;src/event/ngx_event.h:&#xa;#define NGX_EVENT_CONF        0x02000000&#xa;&#xa;src/http/ngx_http_config.h:&#xa;#define NGX_HTTP_MAIN_CONF        0x02000000&#xa;#define NGX_HTTP_SRV_CONF         0x04000000&#xa;#define NGX_HTTP_LOC_CONF         0x08000000&#xa;#define NGX_HTTP_UPS_CONF         0x10000000&#xa;#define NGX_HTTP_SIF_CONF         0x20000000&#xa;#define NGX_HTTP_LIF_CONF         0x40000000&#xa;#define NGX_HTTP_LMT_CONF         0x80000000&#xa;&#xa;src/mail/ngx_mail.h:&#xa;#define NGX_MAIL_MAIN_CONF      0x02000000&#xa;#define NGX_MAIL_SRV_CONF       0x04000000&#xa;&#xa;&#x8981;&#x7406;&#x89e3;&#x4e0a;&#x9762;&#x6240;&#x8c13;&#x7684;&#x5408;&#x6cd5;&#x4f4d;&#x7f6e;&#x7684;&#x771f;&#x6b63;&#x542b;&#x4e49;&#xff0c;&#x5c31;&#x8981;&#x4e86;&#x89e3;&#x4e00;&#x4e0b;nginx&#x7684;&#x914d;&#x7f6e;&#x6587;&#x4ef6;&#x4e86;&#xff0c;&#x8fd9;&#x91cc;&#x5c31;&#x4e0d;&#x7d2f;&#x8ff0;&#x4e86;&#xff0c;&#x4e0d;&#x5f71;&#x54cd;&#x4e0b;&#x9762;&#x7684;&#x5206;&#x6790;&#xff0c;&#x6211;&#x4f1a;&#x5728;&#x5f88;&#x540e;&#x9762;&#x7684;&#x65f6;&#x5019;&#x5206;&#x6790;&#x4e00;&#x4e0b;nginx&#x7684;&#x914d;&#x7f6e;&#x6587;&#x4ef6;&#xff0c;&#x56e0;&#x4e3a;&#x90a3;&#x662f;&#x4e00;&#x4e2a;big topic&#x3002;&#xa;&#xa;set&#x662f;&#x4e00;&#x4e2a;&#x51fd;&#x6570;&#x6307;&#x9488;&#xff0c;&#x8fd9;&#x4e2a;&#x51fd;&#x6570;&#x4e3b;&#x8981;&#x662f;&#x4ece;&#x914d;&#x7f6e;&#x6587;&#x4ef6;&#x4e2d;&#x628a;&#x8be5;&#x6307;&#x4ee4;&#x7684;&#x53c2;&#x6570;&#xff08;&#x5b58;&#x653e;&#x5728;ngx_conf_t&#x4e2d;&#xff09;&#x8f6c;&#x6362;&#x4e3a;&#x5408;&#x9002;&#x7684;&#x6570;&#x636e;&#x7c7b;&#x578b;&#x5e76;&#x5c06;&#x8f6c;&#x6362;&#x540e;&#x7684;&#x503c;&#x4fdd;&#x5b58;&#x5230;&#x6a21;&#x5757;&#x7684;&#x914d;&#x7f6e;&#x7ed3;&#x6784;&#x4f53;&#x4e2d;&#xff08;void *conf&#xff09;&#xff0c;&#x8fd9;&#x4e2a;&#x914d;&#x7f6e;&#x7ed3;&#x6784;&#x4f53;&#x53c8;&#x662f;&#x7528;void *&#x6307;&#x5411;&#x7684;&#xff0c;&#x5e94;&#x8be5;&#x53ef;&#x4ee5;&#x6599;&#x5230;&#x8fd9;&#x8bf4;&#x660e;&#x6bcf;&#x4e2a;&#x6a21;&#x5757;&#x7684;&#x914d;&#x7f6e;&#x7ed3;&#x6784;&#x4f53;&#x662f;&#x4e0d;&#x540c;&#x7684;&#xff0c;&#x8fd9;&#x4e9b;&#x7ed3;&#x6784;&#x4f53;&#x547d;&#x540d;&#x683c;&#x5f0f;&#x4e3a;:ngx_&lt;module name&gt;_conf_t&#xff0c;&#x81f3;&#x4e8e;&#x8981;&#x628a;&#x8f6c;&#x6362;&#x540e;&#x7684;&#x503c;&#x653e;&#x5230;&#x914d;&#x7f6e;&#x7ed3;&#x6784;&#x4f53;&#x7684;&#x4ec0;&#x4e48;&#x4f4d;&#x7f6e;&#xff0c;&#x5c31;&#x8981;&#x4f9d;&#x9760;offset&#x4e86;&#xff0c;offset&#x662f;&#x8c03;&#x7528;&#x4e86;offsetof&#x51fd;&#x6570;&#x8ba1;&#x7b97;&#x51fa;&#x7684;&#x7ed3;&#x6784;&#x4f53;&#x4e2d;&#x67d0;&#x4e2a;&#x6210;&#x5458;&#x7684;&#x504f;&#x79fb;&#x4f4d;&#x7f6e;&#x3002;&#xa;&#xa;&#x5e76;&#x4e0d;&#x662f;&#x6240;&#x6709;&#x7684;&#x6a21;&#x5757;&#x90fd;&#x8981;&#x5b9a;&#x4e49;&#x4e00;&#x4e2a;&#x914d;&#x7f6e;&#x7ed3;&#x6784;&#x4f53;&#xff0c;&#x56e0;&#x4e3a;set&#x4e5f;&#x53ef;&#x80fd;&#x662f;&#x4e00;&#x4e2a;&#x7b80;&#x5355;&#x7684;&#x64cd;&#x4f5c;&#x51fd;&#x6570;&#xff0c;&#x5b83;&#x53ef;&#x80fd;&#x53ea;&#x662f;&#x4ece;&#x914d;&#x7f6e;&#x4e2d;&#xff08;ngx_conf_t&#xff09;&#x8bfb;&#x53d6;&#x4e00;&#x4e9b;&#x6570;&#x636e;&#x8fdb;&#x884c;&#x7b80;&#x5355;&#x7684;&#x64cd;&#x4f5c;&#xff0c;&#x6bd4;&#x5982;errlog&#x6a21;&#x5757;&#x7684;&#x201c;error_log&#x201d;&#x6307;&#x4ee4;&#x5c31;&#x662f;&#x8c03;&#x7528;ngx_error_log&#x5199;&#x4e00;&#x6761;&#x65e5;&#x5fd7;&#xff0c;&#x5e76;&#x4e0d;&#x9700;&#x8981;&#x5b58;&#x50a8;&#x4ec0;&#x4e48;&#x914d;&#x7f6e;&#x6570;&#x636e;&#x3002;&#xa;&#xa;conf&#x548c;offset&#xff0c;offset&#x524d;&#x9762;&#x5df2;&#x7ecf;&#x63d0;&#x5230;&#xff0c;&#x5b83;&#x662f;&#x914d;&#x7f6e;&#x7ed3;&#x6784;&#x4f53;&#x4e2d;&#x6210;&#x5458;&#x7684;&#x504f;&#x79fb;&#x3002;conf&#x4e5f;&#x662f;&#x4e00;&#x4e2a;&#x504f;&#x79fb;&#x503c;&#xff0c;&#x4e0d;&#x8fc7;&#x5b83;&#x662f;&#x914d;&#x7f6e;&#x6587;&#x4ef6;&#x7ed3;&#x6784;&#x4f53;&#x7684;&#xff08;ngx_conf_t&#xff09;&#x6210;&#x5458;ctx&#x7684;&#x6210;&#x5458;&#x7684;&#x504f;&#x79fb;&#xff0c;&#x4e00;&#x822c;&#x662f;&#x7528;&#x6765;&#x628a;ctx&#x4e2d;&#x6307;&#x5b9a;&#x504f;&#x79fb;&#x4f4d;&#x7f6e;&#x7684;&#x6210;&#x5458;&#x8d4b;&#x503c;&#x7ed9;void *conf&#x3002;&#xa;&#xa;post&#x6307;&#x5411;&#x6a21;&#x5757;&#x8bfb;&#x914d;&#x7f6e;&#x7684;&#x65f6;&#x5019;&#x9700;&#x8981;&#x7684;&#x4e00;&#x4e9b;&#x96f6;&#x788e;&#x53d8;&#x91cf;&#x3002;&#xa;&#xa;&#x4ece;&#x4e0a;&#x9762;&#x7684;&#x5206;&#x6790;&#x53ef;&#x4ee5;&#x770b;&#x51fa;&#xff0c;&#x6bcf;&#x4e2a;&#x6a21;&#x5757;&#x4f1a;&#x6620;&#x5c04;&#x5230;&#x914d;&#x7f6e;&#x6587;&#x4ef6;&#x4e2d;&#x7684;&#x67d0;&#x4e2a;&#x4f4d;&#x7f6e;&#xff0c;&#x5168;&#x5c40;&#x4f4d;&#x7f6e;&#x7684;&#x914d;&#x7f6e;&#x4f1a;&#x88ab;&#x4e0b;&#x4e00;&#x7ea7;&#x7684;&#x914d;&#x7f6e;&#x7ee7;&#x627f;&#xff0c;&#x6bd4;&#x5982;http_main&#x4f1a;&#x88ab;http_svr&#x7ee7;&#x627f;&#xff0c;http_svr&#x4f1a;&#x88ab;http_loc&#x7ee7;&#x627f;&#xff0c;&#x8fd9;&#x4e9b;&#x7ee7;&#x627f;&#x5728;&#x6e90;&#x7801;&#x4e2d;&#x662f;&#x8c03;&#x7528;&#x6a21;&#x5757;&#x4e0a;&#x4e0b;&#x6587;&#x7684;&#x5408;&#x5e76;&#x914d;&#x7f6e;&#x7684;&#x63a5;&#x53e3;&#x5b8c;&#x6210;&#x7684;&#x3002;&#xa;&#xa;ngx_command_t&#x7684;set&#x6210;&#x5458;&#x4e5f;&#x53ef;&#x4ee5;&#x4f5c;&#x4e3a;&#x4e00;&#x4e2a;&#x56de;&#x8c03;&#x51fd;&#x6570;&#xff0c;&#x901a;&#x8fc7;&#x628a;&#x81ea;&#x5b9a;&#x4e49;&#x7684;&#x64cd;&#x4f5c;&#x51fd;&#x6570;&#x8d4b;&#x503c;&#x7ed9;set&#x6765;&#x6ce8;&#x518c;&#x4e00;&#x4e9b;&#x64cd;&#x4f5c;&#x3002;&#xa;&#xa;&#x5230;&#x76ee;&#x524d;&#x4e3a;&#x6b62;&#xff0c;&#x5df2;&#x7ecf;&#x4e86;&#x89e3;&#x4e0d;&#x5c11;&#x56de;&#x8c03;&#x51fd;&#x6570;&#x4e86;&#xff0c;&#x8fd9;&#x4e9b;&#x56de;&#x8c03;&#x51fd;&#x6570;&#x7528;&#x6765;&#x6ce8;&#x518c;&#x6a21;&#x5757;&#x7684;&#x81ea;&#x5b9a;&#x4e49;&#x64cd;&#x4f5c;&#xff0c;&#x6211;&#x6709;&#x65f6;&#x79f0;&#x5b83;&#x4e3a;&#x63a5;&#x53e3;&#xff0c;&#x6709;&#x65f6;&#x79f0;&#x5b83;&#x4e3a;&#x56de;&#x8c03;&#x51fd;&#x6570;&#xff0c;&#x6709;&#x70b9;&#x6df7;&#x4e71;&#xff0c;&#x63a5;&#x4e0b;&#x6765;&#x7684;&#x5206;&#x6790;&#x6587;&#x7ae0;&#x4e2d;&#xff0c;&#x8fdb;&#x884c;&#x4e00;&#x4e0b;&#x7edf;&#x4e00;&#xff0c;&#x5168;&#x90e8;&#x79f0;&#x4e3a;&#x94a9;&#x5b50;&#xff08;hook&#xff09;&#x3002;&#x628a;&#x73b0;&#x5728;&#x5df2;&#x7ecf;&#x5206;&#x6790;&#x8fc7;&#x7684;&#x94a9;&#x5b50;&#x7f57;&#x5217;&#x4e00;&#x4e0b;&#xff1a;&#xa;&#xa;ngx_module_t -&gt; init_master&#xa;ngx_module_t -&gt; init_module&#xa;ngx_module_t -&gt; init_process&#xa;ngx_module_t -&gt; init_thread&#xa;ngx_module_t -&gt; exit_thread&#xa;ngx_module_t -&gt; exit_process&#xa;ngx_module_t -&gt; exit_master&#xa;&#xa;ngx_command_t -&gt; set&#xa;&#xa;&#x4e0b;&#x4e00;&#x7bc7;&#x5256;&#x6790;&#x6a21;&#x5757;&#x4e0a;&#x4e0b;&#x6587;&#x7684;&#x65f6;&#x5019;&#xff0c;&#x4f1a;&#x6709;&#x66f4;&#x591a;&#x7684;&#x94a9;&#x5b50;&#xff0c;&#x8fd9;&#x5c31;&#x662f;&#x4e3a;&#x4ec0;&#x4e48;&#x8981;&#x5bf9;c&#x8bed;&#x8a00;&#x7684;&#x6307;&#x9488;&#x6df1;&#x5165;&#x7406;&#x89e3;&#x7684;&#x539f;&#x56e0;&#x4e86;&#xff0c;nginx&#x4e2d;&#x5230;&#x5904;&#x90fd;&#x662f;&#x94a9;&#x5b50;&#xff0c;&#x5047;&#x5982;&#x8981;&#x81ea;&#x5df1;&#x5199;&#x4e00;&#x4e2a;&#x6a21;&#x5757;&#xff0c;&#x53ef;&#x4ee5;&#x901a;&#x8fc7;&#x8fd9;&#x4e9b;&#x94a9;&#x5b50;&#x628a;&#x81ea;&#x5df1;&#x7684;&#x6a21;&#x5757;&#x6302;&#x5230;nginx&#x7684;&#x5904;&#x7406;&#x6d41;&#x4e2d;&#xff0c;&#x53c2;&#x4e0e;&#x5230;nginx&#x8fd0;&#x884c;&#x7684;&#x6bcf;&#x4e2a;&#x7279;&#x5b9a;&#x9636;&#x6bb5;&#xff0c;&#x5f53;&#x7136;&#xff0c;&#x4e5f;&#x4e0d;&#x662f;&#x968f;&#x610f;&#x7684;&#x5d4c;&#x5165;&#xff0c;&#x8981;&#x7cbe;&#x786e;&#x5b9a;&#x4e49;&#x6a21;&#x5757;&#x4f55;&#x65f6;&#x5982;&#x4f55;&#x4ea7;&#x751f;&#x4f5c;&#x7528;&#x624d;&#x662f;&#x6709;&#x610f;&#x4e49;&#x7684;&#xff0c;&#x8fd9;&#x4e0d;&#x662f;&#x4e00;&#x4ef6;&#x8f7b;&#x677e;&#x7684;&#x4e8b;&#x60c5;&#x3002;"/>
</node>
</node>
<node CREATED="1389070818829" FOLDED="true" ID="ID_888530876" MODIFIED="1389107626790" TEXT="ngx_core_module_t">
<icon BUILTIN="full-3"/>
<node CREATED="1389070919651" ID="ID_888607773" LINK="#ID_1428001477" MODIFIED="1389071131905">
<richcontent TYPE="NODE"><html>
  <head>
    
  </head>
  <body>
    <p>
      typedef struct {
    </p>
    <p>
      &#160;&#160;&#160;&#160;ngx_str_t&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;name;
    </p>
    <p>
      &#160;&#160;&#160;&#160;void&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;*(*<font color="#f40707">create_conf</font>)(ngx_cycle_t *cycle);
    </p>
    <p>
      &#160;&#160;&#160;&#160;char&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;*(*<font color="#f60101">init_conf</font>)(ngx_cycle_t *cycle, void *conf);
    </p>
    <p>
      } ngx_core_module_t;&#65288;&#35265;src/core/ngx_conf_file.h&#65289;
    </p>
  </body>
</html></richcontent>
</node>
</node>
<node CREATED="1388928664866" FOLDED="true" ID="ID_1052880603" MODIFIED="1389107626790" TEXT="ngx_http_module_t">
<icon BUILTIN="full-3"/>
<node CREATED="1389071288907" ID="ID_1810498453" MODIFIED="1389071304304">
<richcontent TYPE="NODE"><html>
  <head>
    
  </head>
  <body>
    <p>
      
    </p>
    <p>
      typedef struct {
    </p>
    <p>
      &#160;&#160;&#160;&#160;ngx_int_t&#160;&#160;&#160;(*preconfiguration)(ngx_conf_t *cf);
    </p>
    <p>
      &#160;&#160;&#160;&#160;ngx_int_t&#160;&#160;&#160;(*postconfiguration)(ngx_conf_t *cf);
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;void&#160;&#160;&#160;&#160;&#160;&#160;&#160;*(*create_main_conf)(ngx_conf_t *cf);
    </p>
    <p>
      &#160;&#160;&#160;&#160;char&#160;&#160;&#160;&#160;&#160;&#160;&#160;*(*init_main_conf)(ngx_conf_t *cf, void *conf);
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;void&#160;&#160;&#160;&#160;&#160;&#160;&#160;*(*create_srv_conf)(ngx_conf_t *cf);
    </p>
    <p>
      &#160;&#160;&#160;&#160;char&#160;&#160;&#160;&#160;&#160;&#160;&#160;*(*merge_srv_conf)(ngx_conf_t *cf, void *prev, void *conf);
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;void&#160;&#160;&#160;&#160;&#160;&#160;&#160;*(*create_loc_conf)(ngx_conf_t *cf);
    </p>
    <p>
      &#160;&#160;&#160;&#160;char&#160;&#160;&#160;&#160;&#160;&#160;&#160;*(*merge_loc_conf)(ngx_conf_t *cf, void *prev, void *conf);
    </p>
    <p>
      } ngx_http_module_t;&#65288;&#35265;src/http/ngx_http_config.h&#65289;
    </p>
    <p>
      
    </p>
  </body>
</html></richcontent>
</node>
</node>
<node CREATED="1388928654001" FOLDED="true" ID="ID_1262072544" MODIFIED="1389107626789" TEXT="ngx_event_module_t">
<icon BUILTIN="full-3"/>
=======
<node CREATED="1389071735683" ID="ID_1947333285" LINK="#ID_1428001477" MODIFIED="1389073332593" TEXT="ctx">
<node CREATED="1388928531921" ID="ID_843131025" MODIFIED="1389087082244" TEXT="module_ctx">
<node CREATED="1388928654001" FOLDED="true" ID="ID_1262072544" MODIFIED="1389083976250" TEXT="ngx_event_module_t">
>>>>>>> branch 'master' of https://github.com/galebo/nginx-study.git
<node CREATED="1389071198024" ID="ID_1223233075" MODIFIED="1389071281582">
<richcontent TYPE="NODE"><html>
  <head>
    
  </head>
  <body>
    <p>
      
    </p>
    <p>
      
    </p>
    <p>
      typedef struct {
    </p>
    <p>
      &#160;&#160;&#160;&#160;ngx_int_t&#160;&#160;(*add)(ngx_event_t *ev, ngx_int_t event, ngx_uint_t flags);
    </p>
    <p>
      &#160;&#160;&#160;&#160;ngx_int_t&#160;&#160;(*del)(ngx_event_t *ev, ngx_int_t event, ngx_uint_t flags);
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;ngx_int_t&#160;&#160;(*enable)(ngx_event_t *ev, ngx_int_t event, ngx_uint_t flags);
    </p>
    <p>
      &#160;&#160;&#160;&#160;ngx_int_t&#160;&#160;(*disable)(ngx_event_t *ev, ngx_int_t event, ngx_uint_t flags);
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;ngx_int_t&#160;&#160;(*add_conn)(ngx_connection_t *c);
    </p>
    <p>
      &#160;&#160;&#160;&#160;ngx_int_t&#160;&#160;(*del_conn)(ngx_connection_t *c, ngx_uint_t flags);
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;ngx_int_t&#160;&#160;(*process_changes)(ngx_cycle_t *cycle, ngx_uint_t nowait);
    </p>
    <p>
      &#160;&#160;&#160;&#160;ngx_int_t&#160;&#160;(*process_events)(ngx_cycle_t *cycle, ngx_msec_t timer,
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;ngx_uint_t flags);
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;ngx_int_t&#160;&#160;(*init)(ngx_cycle_t *cycle, ngx_msec_t timer);
    </p>
    <p>
      &#160;&#160;&#160;&#160;void&#160;&#160;&#160;&#160;&#160;&#160;&#160;(*done)(ngx_cycle_t *cycle);
    </p>
    <p>
      } ngx_event_actions_t;
    </p>
    <p>
      
    </p>
    <p>
      typedef struct {
    </p>
    <p>
      &#160;&#160;&#160;&#160;ngx_str_t&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;*name;
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;void&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;*(*create_conf)(ngx_cycle_t *cycle);
    </p>
    <p>
      &#160;&#160;&#160;&#160;char&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;*(*init_conf)(ngx_cycle_t *cycle, void *conf);
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;ngx_event_actions_t&#160;&#160;&#160;&#160;&#160;actions;
    </p>
    <p>
      } ngx_event_module_t;&#65288;&#35265;src/event/ngx_event.h&#65289;
    </p>
  </body>
</html></richcontent>
</node>
</node>
<node CREATED="1388928672641" FOLDED="true" ID="ID_37683736" MODIFIED="1389107626790" TEXT="ngx_mail_module_t">
<icon BUILTIN="full-3"/>
<node CREATED="1389071313931" ID="ID_301055846" MODIFIED="1389071331162">
<richcontent TYPE="NODE"><html>
  <head>
    
  </head>
  <body>
    <p>
      typedef struct {
    </p>
    <p>
      &#160;&#160;&#160;&#160;ngx_mail_protocol_t&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;*protocol;
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;void&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;*(*create_main_conf)(ngx_conf_t *cf);
    </p>
    <p>
      &#160;&#160;&#160;&#160;char&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;*(*init_main_conf)(ngx_conf_t *cf, void *conf);
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;void&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;*(*create_srv_conf)(ngx_conf_t *cf);
    </p>
    <p>
      &#160;&#160;&#160;&#160;char&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;*(*merge_srv_conf)(ngx_conf_t *cf, void *prev,
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;void *conf);
    </p>
    <p>
      } ngx_mail_module_t;&#65288;&#35265;src/mail/ngx_mail.h&#65289;
    </p>
  </body>
</html></richcontent>
</node>
</node>
<node CREATED="1389082295120" FOLDED="true" ID="ID_1182449313" MODIFIED="1389107602567" TEXT="ngx_connection_s">
<icon BUILTIN="full-4"/>
<node CREATED="1389080693298" FOLDED="true" ID="ID_1362060121" MODIFIED="1389098608813" TEXT="&#x7ed3;&#x6784;&#x5206;&#x6790;">
<node CREATED="1389082303128" ID="ID_1037291221" MODIFIED="1389082312727">
<richcontent TYPE="NODE"><html>
  <head>
    
  </head>
  <body>
    <p>
      struct ngx_connection_s {
    </p>
    <p>
      &#160;&#160;&#160;&#160;void&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;*data; // next connection | ...
    </p>
    <p>
      &#160;&#160;&#160;&#160;ngx_event_t&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;*read; // &#35835;&#20107;&#20214;
    </p>
    <p>
      &#160;&#160;&#160;&#160;ngx_event_t&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;*write; // &#20889;&#20107;&#20214;
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;ngx_socket_t&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;fd; // &#36830;&#25509;&#22871;&#25509;&#21475;&#30340;&#22871;&#25509;&#21475;&#25551;&#36848;&#23383;
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;ngx_recv_pt&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;recv;
    </p>
    <p>
      &#160;&#160;&#160;&#160;ngx_send_pt&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;send;
    </p>
    <p>
      &#160;&#160;&#160;&#160;ngx_recv_chain_pt&#160;&#160;&#160;recv_chain;
    </p>
    <p>
      &#160;&#160;&#160;&#160;ngx_send_chain_pt&#160;&#160;&#160;send_chain;
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;ngx_listening_t&#160;&#160;&#160;&#160;*listening; // &#35813;&#36830;&#25509;&#23545;&#24212;&#30340;&#30417;&#21548;
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;off_t&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;sent;
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;ngx_log_t&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;*log;
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;ngx_pool_t&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;*pool;
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;struct sockaddr&#160;&#160;&#160;&#160;*sockaddr;
    </p>
    <p>
      &#160;&#160;&#160;&#160;socklen_t&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;socklen;
    </p>
    <p>
      &#160;&#160;&#160;&#160;ngx_str_t&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;addr_text;
    </p>
    <p>
      
    </p>
    <p>
      #if (NGX_SSL)
    </p>
    <p>
      &#160;&#160;&#160;&#160;ngx_ssl_connection_t&#160;&#160;*ssl;
    </p>
    <p>
      #endif
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;struct sockaddr&#160;&#160;&#160;&#160;*local_sockaddr;
    </p>
    <p>
      &#160;&#160;&#160;&#160;socklen_t&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;local_socklen;
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;ngx_buf_t&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;*buffer;
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;ngx_atomic_uint_t&#160;&#160;&#160;number;
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;ngx_uint_t&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;requests;
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;unsigned&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;buffered:8;
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;unsigned&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;log_error:3;&#160;&#160;&#160;&#160;&#160;/* ngx_connection_log_error_e */
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;unsigned&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;single_connection:1;
    </p>
    <p>
      &#160;&#160;&#160;&#160;unsigned&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;unexpected_eof:1;
    </p>
    <p>
      &#160;&#160;&#160;&#160;unsigned&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;timedout:1;
    </p>
    <p>
      &#160;&#160;&#160;&#160;unsigned&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;error:1;
    </p>
    <p>
      &#160;&#160;&#160;&#160;unsigned&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;destroyed:1;
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;unsigned&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;idle:1;
    </p>
    <p>
      &#160;&#160;&#160;&#160;unsigned&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;close:1;
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;unsigned&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;sendfile:1;
    </p>
    <p>
      &#160;&#160;&#160;&#160;unsigned&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;sndlowat:1;
    </p>
    <p>
      &#160;&#160;&#160;&#160;unsigned&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;tcp_nodelay:2;&#160;&#160;&#160;/* ngx_connection_tcp_nodelay_e */
    </p>
    <p>
      &#160;&#160;&#160;&#160;unsigned&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;tcp_nopush:2;&#160;&#160;&#160;&#160;/* ngx_connection_tcp_nopush_e */
    </p>
    <p>
      &#160;&#160;&#160;&#160;...
    </p>
    <p>
      }
    </p>
  </body>
</html></richcontent>
</node>
</node>
<node CREATED="1389080781400" ID="ID_502036955" MODIFIED="1389082557027" TEXT="&#x64cd;&#x4f5c;&#x51fd;&#x6570;">
<node CREATED="1389080684894" FOLDED="true" ID="ID_1741429812" LINK="#ID_1606222132" MODIFIED="1389106817573" TEXT="ngx_get_connection">
<node CREATED="1389080728395" ID="ID_1346886923" MODIFIED="1389082595243">
<richcontent TYPE="NODE"><html>
  <head>
    
  </head>
  <body>
    <p>
      1&#12289;ngx_connection_t *ngx_get_connection(ngx_socket_t s, ngx_log_t *log);
    </p>
    <p>
      
    </p>
    <p>
      &#20174;cycle-&gt;connections&#38142;&#34920;&#20013;&#25688;&#21462;&#19968;&#20010;&#31354;&#38386;&#30340;&#36830;&#25509;&#32467;&#26500;&#21464;&#37327;&#24182;&#20462;&#25913;&#31354;&#38386;&#38142;&#65292;&#28982;&#21518;&#35774;&#32622;&#36830;&#25509;&#36164;&#28304;&#30340;&#35835;&#20889;&#20107;&#20214;&#30340;&#21021;&#22987;&#29366;&#24577;&#20449;&#24687;&#65307;
    </p>
  </body>
</html></richcontent>
</node>
</node>
<node CREATED="1389080908949" ID="ID_982627151" LINK="#ID_280816995" MODIFIED="1389106919029" TEXT="ngx_close_connection">
<node CREATED="1389080787544" ID="ID_253358243" MODIFIED="1389082674982">
<richcontent TYPE="NODE"><html>
  <head>
    
  </head>
  <body>
    <p>
      2&#12289;void ngx_close_connection(ngx_connection_t *c);
    </p>
    <p>
      
    </p>
    <p>
      &#20851;&#38381;&#36830;&#25509;&#65292;&#39318;&#20808;&#28165;&#29702;&#36830;&#25509;&#19978;&#30340;&#35835;&#20889;&#20107;&#20214;&#65292;&#36825;&#21487;&#33021;&#20250;&#21024;&#38500;&#23450;&#26102;&#22120;&#12289;&#21024;&#38500;&#31561;&#24453;&#20107;&#20214;&#65292;&#28982;&#21518;&#37322;&#25918;&#36830;&#25509;&#36164;&#28304;&#65292;&#24182;&#20851;&#38381;&#36830;&#25509;&#23545;&#24212;&#30340;&#22871;&#25509;&#21475;&#65307;
    </p>
  </body>
</html></richcontent>
</node>
</node>
<node CREATED="1389080858663" FOLDED="true" ID="ID_1773264369" LINK="#ID_1606222132" MODIFIED="1389106828190" TEXT="ngx_free_connection">
<node CREATED="1389080811624" ID="ID_1035688370" MODIFIED="1389082723191">
<richcontent TYPE="NODE"><html>
  <head>
    
  </head>
  <body>
    <p>
      3&#12289;void ngx_free_connection(ngx_connection_t *c);
    </p>
    <p>
      
    </p>
    <p>
      &#37322;&#25918;&#36830;&#25509;&#36164;&#28304;&#65292;&#25226;&#36830;&#25509;&#36164;&#28304;&#25918;&#22238;&#31354;&#38386;&#36830;&#25509;&#38142;&#34920;&#20013;&#12290;
    </p>
  </body>
</html></richcontent>
</node>
</node>
</node>
</node>
<node CREATED="1389082295120" FOLDED="true" ID="ID_92558679" MODIFIED="1389107602568" TEXT="ngx_event_s">
<icon BUILTIN="full-4"/>
<node CREATED="1389080693298" FOLDED="true" ID="ID_545698639" LINK="#ID_280816995" MODIFIED="1389105613298" TEXT="&#x7ed3;&#x6784;&#x5206;&#x6790;">
<node CREATED="1389082303128" ID="ID_131084705" MODIFIED="1389103908469">
<richcontent TYPE="NODE"><html>
  <head>
    
  </head>
  <body>
    <p>
      &#20107;&#20214;&#32467;&#26500;&#20307;&#21253;&#21547;&#20102;&#23545;&#24212;&#30340;&#36830;&#25509;&#36164;&#28304;&#12289;&#20107;&#20214;&#22788;&#29702;&#20989;&#25968;&#21644;&#33509;&#24178;&#20107;&#20214;&#29366;&#24577;&#26631;&#24535;&#20301;&#31561;&#25104;&#21592;&#65306;
    </p>
    <p>
      
    </p>
    <p>
      struct ngx_event_s {
    </p>
    <p>
      &#160;&#160;&#160;&#160;void&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;*<font color="#fa0909">data; // ngx_conncection_t | </font>...
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;unsigned&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;write:1;
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;unsigned&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;accept:1;
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;/* used to detect the stale events in kqueue, rtsig, and epoll */
    </p>
    <p>
      &#160;&#160;&#160;&#160;unsigned&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;instance:1;
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;/*
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;* the event was passed or would be passed to a kernel;
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;* in aio mode - operation was posted.
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;*/
    </p>
    <p>
      &#160;&#160;&#160;&#160;unsigned&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;active:1;
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;unsigned&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;disabled:1;
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;/* the ready event; in aio mode 0 means that no operation can be posted */
    </p>
    <p>
      &#160;&#160;&#160;&#160;unsigned&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;ready:1;
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;unsigned&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;oneshot:1;
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;/* aio operation is complete */
    </p>
    <p>
      &#160;&#160;&#160;&#160;unsigned&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;complete:1;
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;unsigned&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;eof:1;
    </p>
    <p>
      &#160;&#160;&#160;&#160;unsigned&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;error:1;
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;unsigned&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<font color="#fa0505">timedout</font>:1;
    </p>
    <p>
      &#160;&#160;&#160;&#160;unsigned&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;timer_set:1;
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;unsigned&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;delayed:1;
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;unsigned&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;read_discarded:1;
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;unsigned&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;unexpected_eof:1;
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;unsigned&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;deferred_accept:1;
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;/* the pending eof reported by kqueue or in aio chain operation */
    </p>
    <p>
      &#160;&#160;&#160;&#160;unsigned&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;pending_eof:1;
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;...
    </p>
    <p>
      
    </p>
    <p>
      #if (NGX_HAVE_KQUEUE) || (NGX_HAVE_IOCP)
    </p>
    <p>
      &#160;&#160;&#160;&#160;int&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;available;
    </p>
    <p>
      #else
    </p>
    <p>
      &#160;&#160;&#160;&#160;unsigned&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;available:1;
    </p>
    <p>
      #endif
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;ngx_event_handler_pt&#160;&#160;handler;
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;...&#160;
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;ngx_uint_t&#160;&#160;&#160;&#160;&#160;&#160;&#160;index;
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;<font color="#f90a0a">ngx_log_t&#160;&#160;&#160;&#160;&#160;&#160;&#160;*log;</font>
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;ngx_rbtree_node_t&#160;&#160;&#160;timer;
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;unsigned&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;closed:1;
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;/* to test on worker exit */
    </p>
    <p>
      &#160;&#160;&#160;&#160;unsigned&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;channel:1;
    </p>
    <p>
      &#160;&#160;&#160;&#160;unsigned&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;resolver:1;
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;...
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;/* the links of the posted queue */
    </p>
    <p>
      &#160;&#160;&#160;&#160;ngx_event_t&#160;&#160;&#160;&#160;&#160;*next;
    </p>
    <p>
      &#160;&#160;&#160;&#160;ngx_event_t&#160;&#160;&#160;&#160;**prev;
    </p>
    <p>
      &#160;&#160;&#160;&#160;...
    </p>
    <p>
      }
    </p>
    <p>
      &#20851;&#20110;&#20107;&#20214;&#30340;&#20960;&#20010;&#25805;&#20316;&#25509;&#21475;&#23601;&#26159;&#21069;&#38754;&#21453;&#22797;&#25552;&#21040;&#36807;&#30340;10&#20010;actions&#38057;&#23376;&#65292;&#36825;&#20123;&#38057;&#23376;&#23553;&#35013;&#20102;&#19968;&#22871;&#20107;&#20214;&#39537;&#21160;&#30340;&#25509;&#21475;&#65292;&#19981;&#21516;&#30340;IO&#27169;&#22411;&#19981;&#21516;&#30340;&#23454;&#29616;&#26041;&#24335;
    </p>
  </body>
</html></richcontent>
</node>
</node>
<node CREATED="1389080781400" FOLDED="true" ID="ID_1027129987" MODIFIED="1389103767538" TEXT="epoll&#x64cd;&#x4f5c;&#x51fd;&#x6570;">
<node CREATED="1389080781400" FOLDED="true" ID="ID_1063652266" MODIFIED="1389084394243" TEXT="ngx_epoll_init">
<node CREATED="1389080728395" ID="ID_1671917710" MODIFIED="1389083591770">
<richcontent TYPE="NODE"><html>
  <head>
    
  </head>
  <body>
    <p>
      1&#12289;static ngx_int_t ngx_epoll_init(ngx_cycle_t *cycle, ngx_msec_t timer);
    </p>
    <p>
      
    </p>
    <p>
      init&#38057;&#23376;&#65292;&#21019;&#24314;&#19968;&#20010;epoll&#21477;&#26564;ep&#65292;&#25351;&#23450;&#22312;&#20854;&#19978;&#30340;&#30417;&#25511;&#22871;&#25509;&#23383;&#25968;&#37327;&#20026;&#27599;&#20010;worker&#26368;&#22823;&#36830;&#25509;&#25968;&#30340;&#19968;&#21322;&#65292;&#24182;&#20998;&#37197;&#36275;&#22815;&#30340;epoll_event&#32467;&#26500;&#25968;&#32452;event_list&#29992;&#20110;&#19982;&#20869;&#26680;&#38388;&#20256;&#36882;&#20107;&#20214;&#65292;&#25968;&#37327;nevents&#21487;&#20197;&#37197;&#32622;&#25991;&#20214;&#25351;&#23450;&#65292;&#40664;&#35748;&#20026;512&#65307;
    </p>
    <p>
      
    </p>
  </body>
</html></richcontent>
</node>
</node>
<node CREATED="1389080781400" FOLDED="true" ID="ID_596525694" MODIFIED="1389083831186" TEXT=" ngx_epoll_done">
<node CREATED="1389080728395" ID="ID_1099071634" MODIFIED="1389083532013">
<richcontent TYPE="NODE"><html>
  <head>
    
  </head>
  <body>
    <p>
      2&#12289;static void ngx_epoll_done(ngx_cycle_t *cycle);
    </p>
    <p>
      
    </p>
    <p>
      done&#38057;&#23376;&#65292;&#37322;&#25918;epoll&#21477;&#26564;&#36164;&#28304;&#21644;event_list&#65307;
    </p>
  </body>
</html></richcontent>
</node>
</node>
<node CREATED="1389080781400" FOLDED="true" ID="ID_540339760" MODIFIED="1389084395082" TEXT="ngx_epoll_add_event">
<node CREATED="1389080728395" ID="ID_1153898483" MODIFIED="1389083501114">
<richcontent TYPE="NODE"><html>
  <head>
    
  </head>
  <body>
    <p>
      3&#12289;static ngx_int_t ngx_epoll_add_event(ngx_event_t *ev, ngx_int_t event,
    </p>
    <p>
      &#160;&#160;&#160;&#160;ngx_uint_t flags);
    </p>
    <p>
      
    </p>
    <p>
      add &#21644;enable&#38057;&#23376;&#65292;&#35843;&#29992;epoll_ctl(ep, EPOLL_CTL_MOD/EPOLL_CTL_ADD, c-&gt;fd, &amp;ee)&#28155;&#21152;&#23545;&#36830;&#25509;&#22871;&#25509;&#21475;&#30340;&#35835;&#20107;&#20214;&#25110;&#32773;&#20889;&#20107;&#20214;&#30417;&#25511;&#65292;&#24182;&#19988;&#35774;&#32622;&#20107;&#20214;&#30340;&#29366;&#24577;&#20301;&#65306;ev-&gt;action = 1&#65292;&#24403;&#28155;&#21152;&#35835;&#20107;&#20214;&#30340;&#26102;&#20505;&#20250;&#21028;&#26029;&#20889;&#20107;&#20214;&#26159;&#21542;&#24050;&#32463;&#35774;&#32622;&#65288;wev-&gt;action=1?&#65289;&#65292;&#20174;&#32780;&#20915;&#23450;op&#26159;&#21542;&#20351;&#29992;EPOLL_CTL_MOD&#65292;&#28155;&#21152;&#20889;&#20107;&#20214; &#20063;&#35201;&#21028;&#26029;&#35835;&#20107;&#20214;&#30340;&#29366;&#24577;&#65307;
    </p>
  </body>
</html></richcontent>
</node>
</node>
<node CREATED="1389080781400" FOLDED="true" ID="ID_1934047575" MODIFIED="1389084395859" TEXT="ngx_epoll_del_event">
<node CREATED="1389080728395" ID="ID_891331617" MODIFIED="1389083477414">
<richcontent TYPE="NODE"><html>
  <head>
    
  </head>
  <body>
    <p>
      4&#12289;static ngx_int_t ngx_epoll_del_event(ngx_event_t *ev, ngx_int_t event,
    </p>
    <p>
      &#160;&#160;&#160;&#160;ngx_uint_t flags);
    </p>
    <p>
      
    </p>
    <p>
      del &#21644;disable&#38057;&#23376;&#65292;&#35843;&#29992;epoll_ctl(ep, EPOLL_CTL_MOD/EPOLL_CTL_DEL, c-&gt;fd, &amp;ee)&#21024;&#38500;&#23545;&#36830;&#25509;&#22871;&#25509;&#21475;&#30340;&#35835;&#20107;&#20214;&#25110;&#32773;&#20889;&#20107;&#20214;&#30340;&#30417;&#25511;&#65292;&#24182;&#19988;&#35774;&#32622;&#20107;&#20214;&#30340;&#29366;&#24577;&#20301;&#65306;ev-&gt;action = 0&#65292;&#24403;&#21024;&#38500;&#35835;&#20107;&#20214;&#30340;&#26102;&#20505;&#20250;&#21028;&#26029;&#20889;&#20107;&#20214;&#26159;&#21542;&#24050;&#32463;&#35774;&#32622;&#65288;wev-&gt;action=1?&#65289;&#65292;&#20174;&#32780;&#20915;&#23450;op&#26159;&#21542;&#20351;&#29992;EPOLL_CTL_MOD&#65292;&#21024;&#38500;&#20889;&#20107;&#20214; &#20063;&#35201;&#21028;&#26029;&#35835;&#20107;&#20214;&#30340;&#29366;&#24577;
    </p>
  </body>
</html></richcontent>
</node>
</node>
<node CREATED="1389080781400" FOLDED="true" ID="ID_1352445767" MODIFIED="1389084397075" TEXT="ngx_epoll_add_connection">
<node CREATED="1389080728395" ID="ID_1089126682" MODIFIED="1389083268383">
<richcontent TYPE="NODE"><html>
  <head>
    
  </head>
  <body>
    <p>
      5&#12289;static ngx_int_t ngx_epoll_add_connection(ngx_connection_t *c);
    </p>
    <p>
      
    </p>
    <p>
      add_conn&#38057;&#23376;&#65292;&#35843;&#29992;epoll_ctl(ep, EPOLL_CTL_ADD, c-&gt;fd, &amp;ee)&#21516;&#26102;&#28155;&#21152;&#23545;&#19968;&#26465;&#36830;&#25509;&#30340;&#35835;&#20889;&#20107;&#20214;&#30340;&#30417;&#25511;&#65292;&#24182;&#35774;&#32622;&#20854;&#35835;&#20889;&#20107;&#20214;&#30340;&#29366;&#24577;active = 1&#65307;
    </p>
    <p>
      
    </p>
  </body>
</html></richcontent>
</node>
</node>
<node CREATED="1389083333281" FOLDED="true" ID="ID_211497441" MODIFIED="1389084397858" TEXT="ngx_epoll_del_connection">
<node CREATED="1389080811624" ID="ID_128263472" MODIFIED="1389083095381">
<richcontent TYPE="NODE"><html>
  <head>
    
  </head>
  <body>
    <p>
      6&#12289;static ngx_int_t ngx_epoll_del_connection(ngx_connection_t *c,
    </p>
    <p>
      &#160;&#160;&#160;&#160;ngx_uint_t flags);
    </p>
    <p>
      
    </p>
    <p>
      del_conn&#38057;&#23376;&#65292;&#35843;&#29992;epoll_ctl(ep, EPOLL_CTL_DEL, c-&gt;fd, &amp;ee)&#21516;&#26102;&#21024;&#38500;&#23545;&#19968;&#26465;&#36830;&#25509;&#30340;&#35835;&#20889;&#20107;&#20214;&#30340;&#30417;&#25511;&#65292;&#24182;&#35774;&#32622;&#20854;&#35835;&#20889;&#20107;&#20214;&#30340;&#29366;&#24577;active = 0&#65307;
    </p>
  </body>
</html></richcontent>
</node>
</node>
<node CREATED="1389083356719" FOLDED="true" ID="ID_18578350" MODIFIED="1389084398655" TEXT="ngx_epoll_process_events">
<node CREATED="1389080787544" ID="ID_1803542907" MODIFIED="1389082962080">
<richcontent TYPE="NODE"><html>
  <head>
    
  </head>
  <body>
    <p>
      7&#12289;static ngx_int_t ngx_epoll_process_events(ngx_cycle_t *cycle, ngx_msec_t timer,
    </p>
    <p>
      &#160;&#160;&#160;&#160;ngx_uint_t flags);
    </p>
    <p>
      
    </p>
    <p>
      process_events &#38057;&#23376;&#65292;&#35843;&#29992;events = epoll_wait(ep, event_list, (int) nevents, timer)&#36718;&#35810;&#20107;&#20214;&#65292;&#36229;&#26102;&#20540;&#20026;timer&#65292;&#20107;&#20214;&#23384;&#25918;&#20110;event_list&#25968;&#32452;&#20013;&#65292;&#26368;&#22823;&#25968;&#37327;&#20026;nevents&#12290;&#23545;&#20110;&#21457;&#29983;&#30340;&#35835;&#20107;&#20214;&#65292;&#33509;flags&#20013;&#32622;&#20301;&#20102; NGX_POST_EVENTS&#65292;&#20877;&#26681;&#25454;&#34987;&#30417;&#25511;&#30340;&#22871;&#25509;&#21475;&#26159;&#30417;&#21548;&#22871;&#25509;&#21475;&#36824;&#26159;&#25968;&#25454;&#22871;&#25509;&#21475;&#20915;&#23450;&#26242;&#26102;&#25237;&#36882;&#21040;&#20107;&#20214;&#38431;&#21015; ngx_posted_accept_events&#36824;&#26159;ngx_posted_events&#31561;&#24453;&#36827;&#31243;&#22788;&#29702;&#65292;&#21542;&#21017;&#23601;&#30452;&#25509;&#35843;&#29992;&#20107;&#20214;&#22788;&#29702;&#20989;&#25968; rev-&gt;handler&#22788;&#29702;&#20107;&#20214;&#65307;&#23545;&#20110;&#21457;&#29983;&#30340;&#20889;&#20107;&#20214;&#65292;&#33509;flags&#32622;&#20301;&#20102;NGX_POST_EVENTS&#65292;&#25237;&#36882;&#21040;&#20107;&#20214;&#38431;&#21015; ngx_posted_events&#31561;&#24453;&#22788;&#29702;&#65292;&#21542;&#21017;&#23601;&#30452;&#25509;&#35843;&#29992;&#20107;&#20214;&#22788;&#29702;&#20989;&#25968;wev-&gt;handler&#22788;&#29702;&#20107;&#20214;&#12290;
    </p>
  </body>
</html></richcontent>
</node>
</node>
</node>
</node>
<node CREATED="1389105695555" FOLDED="true" ID="ID_1076558626" MODIFIED="1389107602567" TEXT="ngx_event_actions_t">
<icon BUILTIN="full-4"/>
<node CREATED="1389105668972" ID="ID_1751221106" MODIFIED="1389105681442" TEXT="typedef struct {&#xa;    ngx_int_t  (*add)(ngx_event_t *ev, ngx_int_t event, ngx_uint_t flags);&#xa;    ngx_int_t  (*del)(ngx_event_t *ev, ngx_int_t event, ngx_uint_t flags);&#xa;&#xa;    ngx_int_t  (*enable)(ngx_event_t *ev, ngx_int_t event, ngx_uint_t flags);&#xa;    ngx_int_t  (*disable)(ngx_event_t *ev, ngx_int_t event, ngx_uint_t flags);&#xa;&#xa;    ngx_int_t  (*add_conn)(ngx_connection_t *c);&#xa;    ngx_int_t  (*del_conn)(ngx_connection_t *c, ngx_uint_t flags);&#xa;&#xa;    ngx_int_t  (*process_changes)(ngx_cycle_t *cycle, ngx_uint_t nowait);&#xa;    ngx_int_t  (*process_events)(ngx_cycle_t *cycle, ngx_msec_t timer,&#xa;                   ngx_uint_t flags);&#xa;&#xa;    ngx_int_t  (*init)(ngx_cycle_t *cycle, ngx_msec_t timer);&#xa;    void       (*done)(ngx_cycle_t *cycle);&#xa;} ngx_event_actions_t;&#xa;"/>
</node>
<node CREATED="1389077677218" FOLDED="true" ID="ID_1214962495" MODIFIED="1389107602567" TEXT="ngx_listening_s">
<icon BUILTIN="full-4"/>
<node CREATED="1389080693298" FOLDED="true" ID="ID_671106953" MODIFIED="1389098616925" TEXT="&#x7ed3;&#x6784;&#x5206;&#x6790;">
<node CREATED="1389077685514" ID="ID_558241209" MODIFIED="1389077702504">
<richcontent TYPE="NODE"><html>
  <head>
    
  </head>
  <body>
    <p>
      struct ngx_listening_s {
    </p>
    <p>
      &#160;&#160;&#160;&#160;ngx_socket_t&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;fd; // &#30417;&#21548;&#22871;&#25509;&#21475;&#30340;&#22871;&#25509;&#23383;&#25551;&#36848;&#31526;
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;struct sockaddr&#160;&#160;&#160;&#160;*sockaddr; // &#30417;&#21548;&#22871;&#25509;&#21475;&#22320;&#22336;&#32467;&#26500;
    </p>
    <p>
      &#160;&#160;&#160;&#160;socklen_t&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;socklen;&#160;&#160;&#160;&#160;/* size of sockaddr */
    </p>
    <p>
      &#160;&#160;&#160;&#160;size_t&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;addr_text_max_len;
    </p>
    <p>
      &#160;&#160;&#160;&#160;ngx_str_t&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;addr_text;
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;int&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;type; // SOCK_STREAM
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;int&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;backlog; // listen backlog
    </p>
    <p>
      &#160;&#160;&#160;&#160;int&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;rcvbuf; // &#30417;&#21548;&#22871;&#25509;&#21475;&#30340;&#25509;&#25910;&#32531;&#20914;&#21306;&#38271;&#24230;
    </p>
    <p>
      &#160;&#160;&#160;&#160;int&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;sndbuf; // &#30417;&#21548;&#22871;&#25509;&#21475;&#30340;&#21457;&#36865;&#32531;&#20914;&#21306;&#38271;&#24230;
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;/* handler of accepted connection */
    </p>
    <p>
      &#160;&#160;&#160;&#160;ngx_connection_handler_pt&#160;&#160;&#160;handler;
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;void&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;*servers;&#160;&#160;/* array of ngx_http_in_addr_t, for example */
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;ngx_log_t&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;log;
    </p>
    <p>
      &#160;&#160;&#160;&#160;ngx_log_t&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;*logp;
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;size_t&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;pool_size;
    </p>
    <p>
      &#160;&#160;&#160;&#160;/* should be here because of the AcceptEx() preread */
    </p>
    <p>
      &#160;&#160;&#160;&#160;size_t&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;post_accept_buffer_size;
    </p>
    <p>
      &#160;&#160;&#160;&#160;/* should be here because of the deferred accept */
    </p>
    <p>
      &#160;&#160;&#160;&#160;ngx_msec_t&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;post_accept_timeout;
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;ngx_listening_t&#160;&#160;&#160;&#160;*previous;
    </p>
    <p>
      &#160;&#160;&#160;&#160;ngx_connection_t&#160;&#160;&#160;*connection; // &#30417;&#21548;&#20063;&#26159;&#19968;&#20010;&#36830;&#25509;&#65292;&#35201;&#20998;&#37197;&#32473;&#30417;&#21548;&#19968;&#20010;&#36830;&#25509;&#36164;&#28304;
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;unsigned&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;open:1;
    </p>
    <p>
      &#160;&#160;&#160;&#160;unsigned&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;remain:1;
    </p>
    <p>
      &#160;&#160;&#160;&#160;unsigned&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;ignore:1;
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;unsigned&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;bound:1;&#160;&#160;&#160;&#160;&#160;&#160;&#160;/* already bound */
    </p>
    <p>
      &#160;&#160;&#160;&#160;unsigned&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;inherited:1;&#160;&#160;&#160;/* inherited from previous process */
    </p>
    <p>
      &#160;&#160;&#160;&#160;unsigned&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;nonblocking_accept:1;
    </p>
    <p>
      &#160;&#160;&#160;&#160;unsigned&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;listen:1;
    </p>
    <p>
      &#160;&#160;&#160;&#160;unsigned&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;nonblocking:1;
    </p>
    <p>
      &#160;&#160;&#160;&#160;unsigned&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;shared:1;&#160;&#160;&#160;&#160;/* shared between threads or processes */
    </p>
    <p>
      &#160;&#160;&#160;&#160;unsigned&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;addr_ntop:1;
    </p>
    <p>
      &#160;&#160;&#160;&#160;...
    </p>
    <p>
      }
    </p>
  </body>
</html></richcontent>
</node>
</node>
<node CREATED="1389080781400" ID="ID_698284270" MODIFIED="1389082420027" TEXT="&#x64cd;&#x4f5c;&#x51fd;&#x6570;">
<node CREATED="1389080684894" FOLDED="true" ID="ID_1985143490" LINK="#ID_1693925617" MODIFIED="1389081059845" TEXT="ngx_set_inherited_sockets">
<node CREATED="1389080728395" ID="ID_358680713" MODIFIED="1389080775776">
<richcontent TYPE="NODE"><html>
  <head>
    
  </head>
  <body>
    <p>
      1&#12289;ngx_int_t ngx_set_inherited_sockets(ngx_cycle_t *cycle);
    </p>
    <p>
      
    </p>
    <p>
      nginx &#21551;&#21160;&#30340;&#26102;&#20505;&#20250;&#23581;&#35797;&#20174;&#29615;&#22659;&#21464;&#37327;&#20013;&#35835;&#21462;&#21069;&#27425;&#25191;&#34892;&#26102;&#20505;&#30340;&#30417;&#21548;&#22871;&#25509;&#21475;&#30340;id&#65292;&#24182;&#20250;&#21019;&#24314;&#23545;&#24212;&#25968;&#37327;&#30340;ngx_listening_t&#32467;&#26500;&#21464;&#37327;&#65288;&#23384;&#20110; cycle-&gt;listening&#25968;&#32452;&#20013;&#65289;&#65292;&#28982;&#21518;&#35843;&#29992;&#36825;&#20010;&#25509;&#21475;&#36890;&#36807;getsockname,getsockopt&#31561;&#31995;&#32479;&#35843;&#29992;&#25226;&#21407;&#26469;&#22871;&#25509;&#21475;&#30340;&#23646;&#24615;&#20449;&#24687; &#21644;&#35774;&#32622;&#21442;&#25968;&#35835;&#21462;&#20986;&#26469;&#21435;&#35774;&#32622;&#37027;&#20123;&#26032;&#21019;&#24314;&#30340;ngx_listening_t&#32467;&#26500;&#21464;&#37327;&#65292;&#36825;&#26679;&#23601;&#32487;&#25215;&#20102;&#21069;&#27425;&#25191;&#34892;&#26102;&#20505;&#30340;&#30417;&#21548;&#22871;&#25509;&#21475;&#20102;&#65292;&#36825;&#20010;&#25509;&#21475;&#26159;&#22312; ngx_init_cycle&#20043;&#21069;&#35843;&#29992;&#30340;&#65307;
    </p>
    <p>
      
    </p>
  </body>
</html></richcontent>
</node>
</node>
<node CREATED="1389080908949" FOLDED="true" ID="ID_866878198" LINK="#ID_1397106292" MODIFIED="1389081821886" TEXT="ngx_create_listening">
<node CREATED="1389080787544" ID="ID_484596940" MODIFIED="1389080804951">
<richcontent TYPE="NODE"><html>
  <head>
    
  </head>
  <body>
    <p>
      2&#12289;ngx_listening_t *ngx_create_listening(ngx_conf_t *cf, void *sockaddr,
    </p>
    <p>
      &#160;&#160;&#160;&#160;socklen_t socklen);
    </p>
    <p>
      
    </p>
    <p>
      &#21019; &#24314;&#19968;&#20010;ngx_listening_t&#32467;&#26500;&#65292;&#36825;&#20010;&#20989;&#25968;&#22312;ngx_init_cycle&#35299;&#26512;http&#30340;server&#37197;&#32622;&#39033;&#30340;&#26102;&#20505;&#20250;&#35843;&#29992;&#65292;&#23427;&#21019;&#24314;&#19968;&#20010; ngx_listening_t&#32467;&#26500;&#21464;&#37327;&#65288;&#23384;&#20110;cycle-&gt;listening&#25968;&#32452;&#20013;&#65289;&#65292;&#24182;&#35774;&#32622;&#20854;&#22320;&#22336;&#21644;&#19968;&#20123;&#22522;&#26412;&#30340;&#20449;&#24687;&#65292;&#27604;&#22914;backlog&#31561;&#65307;
    </p>
    <p>
      &#12290;
    </p>
  </body>
</html></richcontent>
</node>
</node>
<node CREATED="1389080858663" FOLDED="true" ID="ID_354781646" LINK="#ID_429337595" MODIFIED="1389081154663" TEXT="ngx_open_listening_sockets">
<node CREATED="1389080811624" ID="ID_1808989034" MODIFIED="1389080832403">
<richcontent TYPE="NODE"><html>
  <head>
    
  </head>
  <body>
    <p>
      
    </p>
    <p>
      3&#12289;ngx_int_t ngx_open_listening_sockets(ngx_cycle_t *cycle);
    </p>
    <p>
      
    </p>
    <p>
      ngx_init_cycle &#22312;&#35299;&#26512;&#23436;&#37197;&#32622;&#25991;&#20214;&#20043;&#21518;&#65292;&#20250;&#35843;&#29992;&#36825;&#20010;&#25509;&#21475;&#25171;&#24320;cycle-&gt;listening&#25968;&#32452;&#20013;&#30340;&#25152;&#26377;&#30417;&#21548;&#22871;&#25509;&#21475;&#65292;&#20854;&#23454;&#23601;&#26159;&#39034;&#24207;&#35843;&#29992;socket&#12289; setsockopt&#12289;bind&#12289;listen&#20960;&#20010;&#31995;&#32479;&#35843;&#29992;&#65292;&#22914;&#26524;&#20107;&#20214;&#39537;&#21160;&#19981;&#26159;&#21033;&#29992;&#24322;&#27493;IO&#27169;&#22411;&#65292;&#36824;&#20250;&#25226;&#36825;&#20123;&#30417;&#21548;&#22871;&#25509;&#21475;&#35774;&#32622;&#20026;&#38750;&#38459;&#22622;&#26041;&#24335;&#65307;
    </p>
    <p>
      
    </p>
  </body>
</html></richcontent>
</node>
</node>
<node CREATED="1389080861998" FOLDED="true" ID="ID_1854079052" LINK="#ID_1158710083" MODIFIED="1389081719061" TEXT="ngx_configure_listening_sockets">
<node CREATED="1389080814871" ID="ID_868682488" MODIFIED="1389080842922">
<richcontent TYPE="NODE"><html>
  <head>
    
  </head>
  <body>
    <p>
      
    </p>
    <p>
      4&#12289;void ngx_configure_listening_sockets(ngx_cycle_t *cycle);
    </p>
    <p>
      
    </p>
    <p>
      ngx_init_cycle&#20013;&#32039;&#25509;&#30528;ngx_open_listening_sockets&#25509;&#21475;&#20043;&#21518;&#35843;&#29992;&#36825;&#20010;&#25509;&#21475;&#21033;&#29992;setsockopt&#31995;&#32479;&#35843;&#29992;&#37197;&#32622;&#36825;&#20123;&#30417;&#21548;&#22871;&#25509;&#21475;&#65307;
    </p>
    <p>
      
    </p>
  </body>
</html></richcontent>
</node>
</node>
<node CREATED="1389080864942" FOLDED="true" ID="ID_1980397743" LINK="#ID_929255851" MODIFIED="1389082421847" TEXT="ngx_close_listening_sockets">
<node CREATED="1389080818378" ID="ID_45913344" MODIFIED="1389080850236">
<richcontent TYPE="NODE"><html>
  <head>
    
  </head>
  <body>
    <p>
      
    </p>
    <p>
      5&#12289;void ngx_close_listening_sockets(ngx_cycle_t *cycle);
    </p>
    <p>
      
    </p>
    <p>
      &#19978;&#38754;&#30340;&#20960;&#20010;&#25509;&#21475;&#37117;&#26159;&#22312;master&#36827;&#31243;&#35843;&#29992;&#30340;&#65292;&#32780;worker&#36827;&#31243;&#20250;&#32487;&#25215;master&#20013;&#35774;&#32622;&#22909;&#30340;&#36825;&#20123;&#30417;&#21548;&#22871;&#25509;&#21475;&#65292;&#24403;worker&#36827;&#31243;&#36864;&#20986;&#30340;&#26102;&#20505;&#65292;&#20250;&#35843;&#29992;&#36825;&#20010;&#25509;&#21475;&#20851;&#38381;&#30417;&#21548;&#22871;&#25509;&#21475;&#65292;&#20851;&#38381;&#20043;&#21069;&#20250;&#21024;&#38500;&#19982;&#20854;&#20851;&#32852;&#30340;&#36830;&#25509;&#19978;&#30340;&#35835;&#20107;&#20214;&#24182;&#37322;&#25918;&#36825;&#20010;&#36830;&#25509;&#36164;&#28304;
    </p>
  </body>
</html></richcontent>
</node>
</node>
</node>
</node>
<node CREATED="1389098147110" FOLDED="true" ID="ID_520409002" MODIFIED="1389106676267" TEXT="ngx_process_t">
<node CREATED="1389098160431" ID="ID_527193910" MODIFIED="1389098355839">
<richcontent TYPE="NODE"><html>
  <head>
    
  </head>
  <body>
    <p>
      typedef struct {
    </p>
    <p>
      &#160;&#160;&#160;&#160;ngx_pid_t&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;pid;<font color="#fa0e0e">//pid&#26159;&#36827;&#31243;&#30340;id&#65307;</font>
    </p>
    <p>
      &#160;&#160;&#160;&#160;int&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;status;<font color="#f70404">//status&#26159;&#36827;&#31243;&#30340;&#36864;&#20986;&#29366;&#24577;&#65307;</font>
    </p>
    <p>
      &#160;&#160;&#160;&#160;ngx_socket_t&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;channel[2];<font color="#fb0404">//&#26159;socketpair&#21019;&#24314;&#30340;&#19968;&#23545;socket&#21477;&#26564;&#65307;</font>
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;ngx_spawn_proc_pt&#160;&#160;&#160;proc;<font color="#f90a0a">//proc&#26159;&#36827;&#31243;&#30340;&#25191;&#34892;&#20989;&#25968;&#65292;data&#20026;proc&#30340;&#21442;&#25968;</font>
    </p>
    <p>
      &#160;&#160;&#160;&#160;void&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;*data;
    </p>
    <p>
      &#160;&#160;&#160;&#160;char&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;*name;
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;unsigned&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;respawn:1;
    </p>
    <p>
      &#160;&#160;&#160;&#160;unsigned&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;just_spawn:1;
    </p>
    <p>
      &#160;&#160;&#160;&#160;unsigned&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;detached:1;
    </p>
    <p>
      &#160;&#160;&#160;&#160;unsigned&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;exiting:1;
    </p>
    <p>
      &#160;&#160;&#160;&#160;unsigned&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;exited:1;
    </p>
    <p>
      } ngx_process_t;(src/os/unix/ngx_process.h)
    </p>
    <p>
      &#26368;&#21518;&#30340;&#20960;&#20010;&#20301;&#22495;&#26159;&#36827;&#31243;&#30340;&#29366;&#24577;,
    </p>
    <p>
      <font color="#f60505">respawn:&#37325;&#26032;&#21019;&#24314;&#30340;&#12289; </font>
    </p>
    <p>
      <font color="#f60505">just_spawn:&#31532;&#19968;&#27425;&#21019;&#24314;&#30340;&#12289; </font>
    </p>
    <p>
      <font color="#f60505">detached:&#20998;&#31163;&#30340;&#12289; </font>
    </p>
    <p>
      <font color="#f60505">exiting:&#27491;&#22312;&#36864;&#20986;&#12289; </font>
    </p>
    <p>
      <font color="#f60505">exited:&#24050;&#32463;&#36864;&#20986;&#12290;</font>
    </p>
  </body>
</html>
</richcontent>
</node>
</node>
<node CREATED="1389098396486" FOLDED="true" ID="ID_1409473281" MODIFIED="1389107270268" TEXT=" ngx_channel_t">
<node CREATED="1389098399966" ID="ID_1837421175" MODIFIED="1389098582120">
<richcontent TYPE="NODE"><html>
  <head>
    
  </head>
  <body>
    <p>
      
    </p>
    <p>
      typedef struct {
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;ngx_uint_t&#160;&#160;command;
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;ngx_pid_t&#160;&#160;&#160;pid;<font color="#ef0303">//pid&#26159;&#21457;&#36865;&#26041;&#36827;&#31243;&#30340;&#36827;&#31243;id&#65307;</font>
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;ngx_int_t&#160;&#160;&#160;slot;<font color="#ef0303">//slot&#26159;&#21457;&#36865;&#26041;&#36827;&#31243;&#22312;&#36827;&#31243;&#34920;&#20013;&#20559;&#31227;&#20301;&#32622;&#65307;</font>
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;ngx_fd_t&#160;&#160;&#160;&#160;fd;<font color="#ef0303">//fd&#26159;&#21457;&#36865;&#32473;&#23545;&#26041;&#30340;&#21477;&#26564;&#12290;</font>
    </p>
    <p>
      }&#160;ngx_channel_t;(src/os/unix/ngx_channel.h)
    </p>
    <p>
      <font color="#ef0303">command&#26159;&#35201;&#21457;&#36865;&#30340;&#21629;&#20196;&#65292;&#26377;5&#31181;&#65306; </font>
    </p>
    <p>
      
    </p>
    <p>
      <font color="#ef0303">#define NGX_CMD_OPEN_CHANNEL&#160;&#160;&#160;1 </font>
    </p>
    <p>
      <font color="#ef0303">#define NGX_CMD_CLOSE_CHANNEL&#160;&#160;2 </font>
    </p>
    <p>
      <font color="#ef0303">#define NGX_CMD_QUIT&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;3 </font>
    </p>
    <p>
      <font color="#ef0303">#define NGX_CMD_TERMINATE&#160;&#160;&#160;&#160;&#160;&#160;4 </font>
    </p>
    <p>
      <font color="#ef0303">#define NGX_CMD_REOPEN&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;5 </font>
    </p>
  </body>
</html>
</richcontent>
</node>
<node CREATED="1389104087091" ID="ID_1261091284" MODIFIED="1389104095842" TEXT="&#x64cd;&#x4f5c;&#x51fd;&#x6570;">
<node CREATED="1389104099563" ID="ID_488624575" LINK="#ID_280816995" MODIFIED="1389104169798" TEXT="ngx_read_channel"/>
<node CREATED="1389104107483" ID="ID_478751905" LINK="#ID_1256679313" MODIFIED="1389107155638" TEXT="ngx_write_channel"/>
</node>
</node>
</node>
<node CREATED="1389081320591" ID="ID_1238390016" MODIFIED="1389082689207" POSITION="right" TEXT="ngx_http_block">
<node CREATED="1389081514663" ID="ID_525344956" MODIFIED="1389081601261" TEXT="ngx_http_optimize_servers">
<node CREATED="1389081531098" ID="ID_1349804929" MODIFIED="1389081590302" TEXT="ngx_http_init_listening">
<node CREATED="1389081652031" ID="ID_1224372124" MODIFIED="1389081784382" TEXT="ngx_http_add_listening">
<node CREATED="1389081664072" ID="ID_1397106292" LINK="#ID_866878198" MODIFIED="1389081813702" TEXT="ngx_create_listening"/>
</node>
</node>
<node CREATED="1389081618658" ID="ID_1014114556" MODIFIED="1389081620094" TEXT="ngx_http_optimize_servers"/>
</node>
</node>
<node CREATED="1389088130079" FOLDED="true" ID="ID_1463245406" LINK="#ID_257180594" MODIFIED="1389097660524" POSITION="right" TEXT="ngx_events_block">
<node CREATED="1389088145645" ID="ID_260480348" MODIFIED="1389088744250">
<richcontent TYPE="NODE"><html>
  <head>
    
  </head>
  <body>
    <p>
      static char *
    </p>
    <p>
      ngx_events_block(ngx_conf_t *cf, ngx_command_t *cmd, void *conf)
    </p>
    <p>
      {
    </p>
    <p>
      &#160;&#160;&#160;&#160;char&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;*rv;
    </p>
    <p>
      &#160;&#160;&#160;&#160;void&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;***ctx;
    </p>
    <p>
      &#160;&#160;&#160;&#160;ngx_uint_t&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;i;
    </p>
    <p>
      &#160;&#160;&#160;&#160;ngx_conf_t&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;pcf;
    </p>
    <p>
      &#160;&#160;&#160;&#160;ngx_event_module_t&#160;&#160;&#160;*m;
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;/* count the number of the event modules and set up their indices */
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;// &#23545;event&#31867;&#27169;&#22359;&#28857;&#19968;&#19979;&#25968;
    </p>
    <p>
      &#160;&#160;&#160;&#160;ngx_event_max_module = 0;
    </p>
    <p>
      &#160;&#160;&#160;&#160;for (i = 0; ngx_modules[i]; i++) {
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if (ngx_modules[i]-&gt;type != NGX_EVENT_MODULE) {
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;continue;
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;}
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;<font color="#fc0707">&#160;ngx_modules[i]-&gt;ctx_index = ngx_event_max_module++;</font>
    </p>
    <p>
      &#160;&#160;&#160;&#160;}
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;ctx = ngx_pcalloc(cf-&gt;pool, sizeof(void *));
    </p>
    <p>
      &#160;&#160;&#160;&#160;if (ctx == NULL) {
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;return NGX_CONF_ERROR;
    </p>
    <p>
      &#160;&#160;&#160;&#160;}
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;*ctx = ngx_pcalloc(cf-&gt;pool, ngx_event_max_module * sizeof(void *));
    </p>
    <p>
      &#160;&#160;&#160;&#160;if (*ctx == NULL) {
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;return NGX_CONF_ERROR;
    </p>
    <p>
      &#160;&#160;&#160;&#160;}
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;*(void **) conf = ctx;
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;// &#35843;&#29992;&#25152;&#26377;event&#31867;&#27169;&#22359;&#30340;create_conf&#38057;&#23376;&#65292;&#21019;&#24314;&#37197;&#32622;&#32467;&#26500;&#65292;&#36825;&#20123;&#37197;&#32622;&#32467;&#26500;&#24418;&#25104;&#19968;&#20010;&#25968;&#32452;
    </p>
    <p>
      &#160;&#160;&#160;&#160;// &#36825;&#20010;&#25968;&#32452;&#30340;&#25351;&#38024;&#26368;&#32456;&#20250;&#36171;&#32473;cycle-&gt;conf_ctx&#65292;&#36825;&#26159;&#19968;&#20010;void ****&#25351;&#38024;&#65292;&#21487;&#20197;&#25226;&#25152;&#26377;
    </p>
    <p>
      &#160;&#160;&#160;&#160;// &#27169;&#22359;&#30340;&#37197;&#32622;&#32467;&#26500;&#26377;&#23618;&#27425;&#30340;&#20445;&#23384;&#19979;&#26469;
    </p>
    <p>
      &#160;&#160;&#160;&#160;for (i = 0; ngx_modules[i]; i++) {
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if (ngx_modules[i]-&gt;type != NGX_EVENT_MODULE) {
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;continue;
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;}
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;m = ngx_modules[i]-&gt;ctx;
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if (m-&gt;create_conf) {
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<font color="#f70404">(*ctx)[ngx_modules[i]-&gt;ctx_index] = m-&gt;create_conf(cf-&gt;cycle);</font>
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if ((*ctx)[ngx_modules[i]-&gt;ctx_index] == NULL) {
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;return NGX_CONF_ERROR;
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;}
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;}
    </p>
    <p>
      &#160;&#160;&#160;&#160;}
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;pcf = *cf;
    </p>
    <p>
      &#160;&#160;&#160;&#160;cf-&gt;ctx = ctx;
    </p>
    <p>
      &#160;&#160;&#160;&#160;cf-&gt;module_type = NGX_EVENT_MODULE;
    </p>
    <p>
      &#160;&#160;&#160;&#160;cf-&gt;cmd_type = NGX_EVENT_CONF;
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;// &#35299;&#26512;&#8220;events {}&#8221;&#22359;&#20013;&#30340;&#25351;&#20196;&#38598;
    </p>
    <p>
      &#160;&#160;&#160;&#160;<font color="#f10505">rv = ngx_conf_parse(cf, NULL);</font>
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;*cf = pcf;
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;if (rv != NGX_CONF_OK)
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;return rv;
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;// &#35843;&#29992;&#27599;&#20010;event&#31867;&#27169;&#22359;&#30340;init_conf&#38057;&#23376;&#65292;&#21021;&#22987;&#21270;&#37197;&#32622;&#32467;&#26500;&#65292;&#36825;&#20123;&#37197;&#32622;&#32467;&#26500;&#26377;&#20123;&#24050;&#32463;&#22312;&#35299;&#26512;&#25351;&#20196;&#30340;&#26102;&#20505;&#34987;
    </p>
    <p>
      &#160;&#160;&#160;&#160;// &#22635;&#20805;&#65292;&#36825;&#37324;&#20027;&#35201;&#26159;&#22788;&#29702;&#37027;&#20123;&#36824;&#27809;&#26377;&#34987;&#25351;&#20196;&#22635;&#20805;&#65292;&#25110;&#32773;&#22635;&#20805;&#30340;&#26377;&#38382;&#39064;&#30340;&#37027;&#20123;
    </p>
    <p>
      &#160;&#160;&#160;&#160;for (i = 0; ngx_modules[i]; i++) {
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if (ngx_modules[i]-&gt;type != NGX_EVENT_MODULE) {
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;continue;
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;}
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;m = ngx_modules[i]-&gt;ctx;
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if (m-&gt;init_conf) {
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<font color="#f80303">rv = m-&gt;init_conf(cf-&gt;cycle, (*ctx)[ngx_modules[i]-&gt;ctx_index]);</font>
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if (rv != NGX_CONF_OK) {
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;return rv;
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;}
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;}
    </p>
    <p>
      &#160;&#160;&#160;&#160;}
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;return NGX_CONF_OK;
    </p>
    <p>
      }
    </p>
  </body>
</html></richcontent>
</node>
</node>
<node CREATED="1389084519801" FOLDED="true" ID="ID_281294392" LINK="#ID_607686762" MODIFIED="1389097663220" POSITION="right" TEXT="ngx_event_accept">
<node CREATED="1389084532642" ID="ID_994346046" MODIFIED="1389084539986">
<richcontent TYPE="NODE"><html>
  <head>
    
  </head>
  <body>
    <p>
      &#25105;&#20204;&#20808;&#20998;&#26512;&#19968;&#19979;&#30417;&#21548;&#22871;&#25509;&#21475;&#30340;&#20107;&#20214;&#22788;&#29702;&#20989;&#25968;ngx_event_accept&#12290;&#24403;&#30417;&#21548;&#22871;&#25509;&#21475;&#19978;&#21457;&#29983;&#35835;&#20107;&#20214;&#30340;&#26102;&#20505;&#65292;&#23601;&#20250;&#35843;&#29992; ngx_event_accept&#22788;&#29702;&#36825;&#20010;&#20107;&#20214;&#65292;&#36825;&#20010;&#20989;&#25968;&#35843;&#29992;accept&#33719;&#21462;&#24050;&#36830;&#25509;&#30340;&#25968;&#25454;&#22871;&#25509;&#21475;&#65292;&#20026;&#33719;&#24471;&#30340;&#22871;&#25509;&#21475;&#20998;&#37197;&#36830;&#25509;&#36164;&#28304;&#21644;&#35835;&#20889;&#20107;&#20214;&#36164;&#28304;&#65292;&#20026;&#27599;&#20010;&#26032; &#21019;&#24314;&#30340;&#36830;&#25509;&#36164;&#28304;&#21019;&#24314;&#19968;&#20010;&#20869;&#23384;&#27744;&#29992;&#20110;&#20043;&#21518;&#30340;&#25968;&#25454;&#22788;&#29702;&#65292;&#25509;&#19979;&#26469;&#21021;&#22987;&#21270;&#36830;&#25509;&#36164;&#28304;&#21644;&#35835;&#20889;&#20107;&#20214;&#36164;&#28304;&#30340;&#29366;&#24577;&#65292;&#26368;&#21518;&#35843;&#29992;add_conn&#38057;&#23376;&#28155;&#21152;&#23545;&#35835;&#20889;&#20107;&#20214;&#30340;&#30417;&#25511;&#12290;
    </p>
  </body>
</html></richcontent>
</node>
<node CREATED="1389077670900" ID="ID_1070478789" MODIFIED="1389077728314" TEXT="&#x8fd0;&#x884c;">
<node CREATED="1389077677218" FOLDED="true" ID="ID_1214962495" MODIFIED="1389083748927" TEXT="ngx_listening_s">
<node CREATED="1389080693298" FOLDED="true" ID="ID_671106953" MODIFIED="1389080716698" TEXT="&#x7ed3;&#x6784;&#x5206;&#x6790;">
<node CREATED="1389077685514" ID="ID_558241209" MODIFIED="1389077702504">
<richcontent TYPE="NODE"><html>
  <head>
    
  </head>
  <body>
    <p>
      struct ngx_listening_s {
    </p>
    <p>
      &#160;&#160;&#160;&#160;ngx_socket_t&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;fd; // &#30417;&#21548;&#22871;&#25509;&#21475;&#30340;&#22871;&#25509;&#23383;&#25551;&#36848;&#31526;
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;struct sockaddr&#160;&#160;&#160;&#160;*sockaddr; // &#30417;&#21548;&#22871;&#25509;&#21475;&#22320;&#22336;&#32467;&#26500;
    </p>
    <p>
      &#160;&#160;&#160;&#160;socklen_t&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;socklen;&#160;&#160;&#160;&#160;/* size of sockaddr */
    </p>
    <p>
      &#160;&#160;&#160;&#160;size_t&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;addr_text_max_len;
    </p>
    <p>
      &#160;&#160;&#160;&#160;ngx_str_t&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;addr_text;
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;int&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;type; // SOCK_STREAM
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;int&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;backlog; // listen backlog
    </p>
    <p>
      &#160;&#160;&#160;&#160;int&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;rcvbuf; // &#30417;&#21548;&#22871;&#25509;&#21475;&#30340;&#25509;&#25910;&#32531;&#20914;&#21306;&#38271;&#24230;
    </p>
    <p>
      &#160;&#160;&#160;&#160;int&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;sndbuf; // &#30417;&#21548;&#22871;&#25509;&#21475;&#30340;&#21457;&#36865;&#32531;&#20914;&#21306;&#38271;&#24230;
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;/* handler of accepted connection */
    </p>
    <p>
      &#160;&#160;&#160;&#160;ngx_connection_handler_pt&#160;&#160;&#160;handler;
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;void&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;*servers;&#160;&#160;/* array of ngx_http_in_addr_t, for example */
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;ngx_log_t&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;log;
    </p>
    <p>
      &#160;&#160;&#160;&#160;ngx_log_t&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;*logp;
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;size_t&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;pool_size;
    </p>
    <p>
      &#160;&#160;&#160;&#160;/* should be here because of the AcceptEx() preread */
    </p>
    <p>
      &#160;&#160;&#160;&#160;size_t&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;post_accept_buffer_size;
    </p>
    <p>
      &#160;&#160;&#160;&#160;/* should be here because of the deferred accept */
    </p>
    <p>
      &#160;&#160;&#160;&#160;ngx_msec_t&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;post_accept_timeout;
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;ngx_listening_t&#160;&#160;&#160;&#160;*previous;
    </p>
    <p>
      &#160;&#160;&#160;&#160;ngx_connection_t&#160;&#160;&#160;*connection; // &#30417;&#21548;&#20063;&#26159;&#19968;&#20010;&#36830;&#25509;&#65292;&#35201;&#20998;&#37197;&#32473;&#30417;&#21548;&#19968;&#20010;&#36830;&#25509;&#36164;&#28304;
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;unsigned&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;open:1;
    </p>
    <p>
      &#160;&#160;&#160;&#160;unsigned&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;remain:1;
    </p>
    <p>
      &#160;&#160;&#160;&#160;unsigned&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;ignore:1;
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;unsigned&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;bound:1;&#160;&#160;&#160;&#160;&#160;&#160;&#160;/* already bound */
    </p>
    <p>
      &#160;&#160;&#160;&#160;unsigned&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;inherited:1;&#160;&#160;&#160;/* inherited from previous process */
    </p>
    <p>
      &#160;&#160;&#160;&#160;unsigned&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;nonblocking_accept:1;
    </p>
    <p>
      &#160;&#160;&#160;&#160;unsigned&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;listen:1;
    </p>
    <p>
      &#160;&#160;&#160;&#160;unsigned&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;nonblocking:1;
    </p>
    <p>
      &#160;&#160;&#160;&#160;unsigned&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;shared:1;&#160;&#160;&#160;&#160;/* shared between threads or processes */
    </p>
    <p>
      &#160;&#160;&#160;&#160;unsigned&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;addr_ntop:1;
    </p>
    <p>
      &#160;&#160;&#160;&#160;...
    </p>
    <p>
      }
    </p>
  </body>
</html></richcontent>
</node>
</node>
<node CREATED="1389080781400" ID="ID_698284270" MODIFIED="1389082420027" TEXT="&#x64cd;&#x4f5c;&#x51fd;&#x6570;">
<node CREATED="1389080684894" FOLDED="true" ID="ID_1985143490" LINK="#ID_1693925617" MODIFIED="1389081059845" TEXT="ngx_set_inherited_sockets">
<node CREATED="1389080728395" ID="ID_358680713" MODIFIED="1389080775776">
<richcontent TYPE="NODE"><html>
  <head>
    
  </head>
  <body>
    <p>
      1&#12289;ngx_int_t ngx_set_inherited_sockets(ngx_cycle_t *cycle);
    </p>
    <p>
      
    </p>
    <p>
      nginx &#21551;&#21160;&#30340;&#26102;&#20505;&#20250;&#23581;&#35797;&#20174;&#29615;&#22659;&#21464;&#37327;&#20013;&#35835;&#21462;&#21069;&#27425;&#25191;&#34892;&#26102;&#20505;&#30340;&#30417;&#21548;&#22871;&#25509;&#21475;&#30340;id&#65292;&#24182;&#20250;&#21019;&#24314;&#23545;&#24212;&#25968;&#37327;&#30340;ngx_listening_t&#32467;&#26500;&#21464;&#37327;&#65288;&#23384;&#20110; cycle-&gt;listening&#25968;&#32452;&#20013;&#65289;&#65292;&#28982;&#21518;&#35843;&#29992;&#36825;&#20010;&#25509;&#21475;&#36890;&#36807;getsockname,getsockopt&#31561;&#31995;&#32479;&#35843;&#29992;&#25226;&#21407;&#26469;&#22871;&#25509;&#21475;&#30340;&#23646;&#24615;&#20449;&#24687; &#21644;&#35774;&#32622;&#21442;&#25968;&#35835;&#21462;&#20986;&#26469;&#21435;&#35774;&#32622;&#37027;&#20123;&#26032;&#21019;&#24314;&#30340;ngx_listening_t&#32467;&#26500;&#21464;&#37327;&#65292;&#36825;&#26679;&#23601;&#32487;&#25215;&#20102;&#21069;&#27425;&#25191;&#34892;&#26102;&#20505;&#30340;&#30417;&#21548;&#22871;&#25509;&#21475;&#20102;&#65292;&#36825;&#20010;&#25509;&#21475;&#26159;&#22312; ngx_init_cycle&#20043;&#21069;&#35843;&#29992;&#30340;&#65307;
    </p>
    <p>
      
    </p>
  </body>
</html></richcontent>
</node>
</node>
<node CREATED="1389080908949" FOLDED="true" ID="ID_866878198" LINK="#ID_1397106292" MODIFIED="1389081821886" TEXT="ngx_create_listening">
<node CREATED="1389080787544" ID="ID_484596940" MODIFIED="1389080804951">
<richcontent TYPE="NODE"><html>
  <head>
    
  </head>
  <body>
    <p>
      2&#12289;ngx_listening_t *ngx_create_listening(ngx_conf_t *cf, void *sockaddr,
    </p>
    <p>
      &#160;&#160;&#160;&#160;socklen_t socklen);
    </p>
    <p>
      
    </p>
    <p>
      &#21019; &#24314;&#19968;&#20010;ngx_listening_t&#32467;&#26500;&#65292;&#36825;&#20010;&#20989;&#25968;&#22312;ngx_init_cycle&#35299;&#26512;http&#30340;server&#37197;&#32622;&#39033;&#30340;&#26102;&#20505;&#20250;&#35843;&#29992;&#65292;&#23427;&#21019;&#24314;&#19968;&#20010; ngx_listening_t&#32467;&#26500;&#21464;&#37327;&#65288;&#23384;&#20110;cycle-&gt;listening&#25968;&#32452;&#20013;&#65289;&#65292;&#24182;&#35774;&#32622;&#20854;&#22320;&#22336;&#21644;&#19968;&#20123;&#22522;&#26412;&#30340;&#20449;&#24687;&#65292;&#27604;&#22914;backlog&#31561;&#65307;
    </p>
    <p>
      &#12290;
    </p>
  </body>
</html></richcontent>
</node>
</node>
<node CREATED="1389080858663" FOLDED="true" ID="ID_354781646" LINK="#ID_429337595" MODIFIED="1389081154663" TEXT="ngx_open_listening_sockets">
<node CREATED="1389080811624" ID="ID_1808989034" MODIFIED="1389080832403">
<richcontent TYPE="NODE"><html>
  <head>
    
  </head>
  <body>
    <p>
      
    </p>
    <p>
      3&#12289;ngx_int_t ngx_open_listening_sockets(ngx_cycle_t *cycle);
    </p>
    <p>
      
    </p>
    <p>
      ngx_init_cycle &#22312;&#35299;&#26512;&#23436;&#37197;&#32622;&#25991;&#20214;&#20043;&#21518;&#65292;&#20250;&#35843;&#29992;&#36825;&#20010;&#25509;&#21475;&#25171;&#24320;cycle-&gt;listening&#25968;&#32452;&#20013;&#30340;&#25152;&#26377;&#30417;&#21548;&#22871;&#25509;&#21475;&#65292;&#20854;&#23454;&#23601;&#26159;&#39034;&#24207;&#35843;&#29992;socket&#12289; setsockopt&#12289;bind&#12289;listen&#20960;&#20010;&#31995;&#32479;&#35843;&#29992;&#65292;&#22914;&#26524;&#20107;&#20214;&#39537;&#21160;&#19981;&#26159;&#21033;&#29992;&#24322;&#27493;IO&#27169;&#22411;&#65292;&#36824;&#20250;&#25226;&#36825;&#20123;&#30417;&#21548;&#22871;&#25509;&#21475;&#35774;&#32622;&#20026;&#38750;&#38459;&#22622;&#26041;&#24335;&#65307;
    </p>
    <p>
      
    </p>
  </body>
</html></richcontent>
</node>
</node>
<node CREATED="1389080861998" FOLDED="true" ID="ID_1854079052" LINK="#ID_1158710083" MODIFIED="1389081719061" TEXT="ngx_configure_listening_sockets">
<node CREATED="1389080814871" ID="ID_868682488" MODIFIED="1389080842922">
<richcontent TYPE="NODE"><html>
  <head>
    
  </head>
  <body>
    <p>
      
    </p>
    <p>
      4&#12289;void ngx_configure_listening_sockets(ngx_cycle_t *cycle);
    </p>
    <p>
      
    </p>
    <p>
      ngx_init_cycle&#20013;&#32039;&#25509;&#30528;ngx_open_listening_sockets&#25509;&#21475;&#20043;&#21518;&#35843;&#29992;&#36825;&#20010;&#25509;&#21475;&#21033;&#29992;setsockopt&#31995;&#32479;&#35843;&#29992;&#37197;&#32622;&#36825;&#20123;&#30417;&#21548;&#22871;&#25509;&#21475;&#65307;
    </p>
    <p>
      
    </p>
  </body>
</html></richcontent>
</node>
</node>
<node CREATED="1389080864942" FOLDED="true" ID="ID_1980397743" LINK="#ID_929255851" MODIFIED="1389082421847" TEXT="ngx_close_listening_sockets">
<node CREATED="1389080818378" ID="ID_45913344" MODIFIED="1389080850236">
<richcontent TYPE="NODE"><html>
  <head>
    
  </head>
  <body>
    <p>
      
    </p>
    <p>
      5&#12289;void ngx_close_listening_sockets(ngx_cycle_t *cycle);
    </p>
    <p>
      
    </p>
    <p>
      &#19978;&#38754;&#30340;&#20960;&#20010;&#25509;&#21475;&#37117;&#26159;&#22312;master&#36827;&#31243;&#35843;&#29992;&#30340;&#65292;&#32780;worker&#36827;&#31243;&#20250;&#32487;&#25215;master&#20013;&#35774;&#32622;&#22909;&#30340;&#36825;&#20123;&#30417;&#21548;&#22871;&#25509;&#21475;&#65292;&#24403;worker&#36827;&#31243;&#36864;&#20986;&#30340;&#26102;&#20505;&#65292;&#20250;&#35843;&#29992;&#36825;&#20010;&#25509;&#21475;&#20851;&#38381;&#30417;&#21548;&#22871;&#25509;&#21475;&#65292;&#20851;&#38381;&#20043;&#21069;&#20250;&#21024;&#38500;&#19982;&#20854;&#20851;&#32852;&#30340;&#36830;&#25509;&#19978;&#30340;&#35835;&#20107;&#20214;&#24182;&#37322;&#25918;&#36825;&#20010;&#36830;&#25509;&#36164;&#28304;
    </p>
  </body>
</html></richcontent>
</node>
</node>
</node>
</node>
<node CREATED="1389082295120" FOLDED="true" ID="ID_1182449313" MODIFIED="1389083749654" TEXT="ngx_connection_s">
<node CREATED="1389080693298" FOLDED="true" ID="ID_1362060121" MODIFIED="1389082555389" TEXT="&#x7ed3;&#x6784;&#x5206;&#x6790;">
<node CREATED="1389082303128" ID="ID_1037291221" MODIFIED="1389082312727">
<richcontent TYPE="NODE"><html>
  <head>
    
  </head>
  <body>
    <p>
      struct ngx_connection_s {
    </p>
    <p>
      &#160;&#160;&#160;&#160;void&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;*data; // next connection | ...
    </p>
    <p>
      &#160;&#160;&#160;&#160;ngx_event_t&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;*read; // &#35835;&#20107;&#20214;
    </p>
    <p>
      &#160;&#160;&#160;&#160;ngx_event_t&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;*write; // &#20889;&#20107;&#20214;
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;ngx_socket_t&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;fd; // &#36830;&#25509;&#22871;&#25509;&#21475;&#30340;&#22871;&#25509;&#21475;&#25551;&#36848;&#23383;
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;ngx_recv_pt&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;recv;
    </p>
    <p>
      &#160;&#160;&#160;&#160;ngx_send_pt&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;send;
    </p>
    <p>
      &#160;&#160;&#160;&#160;ngx_recv_chain_pt&#160;&#160;&#160;recv_chain;
    </p>
    <p>
      &#160;&#160;&#160;&#160;ngx_send_chain_pt&#160;&#160;&#160;send_chain;
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;ngx_listening_t&#160;&#160;&#160;&#160;*listening; // &#35813;&#36830;&#25509;&#23545;&#24212;&#30340;&#30417;&#21548;
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;off_t&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;sent;
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;ngx_log_t&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;*log;
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;ngx_pool_t&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;*pool;
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;struct sockaddr&#160;&#160;&#160;&#160;*sockaddr;
    </p>
    <p>
      &#160;&#160;&#160;&#160;socklen_t&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;socklen;
    </p>
    <p>
      &#160;&#160;&#160;&#160;ngx_str_t&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;addr_text;
    </p>
    <p>
      
    </p>
    <p>
      #if (NGX_SSL)
    </p>
    <p>
      &#160;&#160;&#160;&#160;ngx_ssl_connection_t&#160;&#160;*ssl;
    </p>
    <p>
      #endif
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;struct sockaddr&#160;&#160;&#160;&#160;*local_sockaddr;
    </p>
    <p>
      &#160;&#160;&#160;&#160;socklen_t&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;local_socklen;
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;ngx_buf_t&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;*buffer;
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;ngx_atomic_uint_t&#160;&#160;&#160;number;
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;ngx_uint_t&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;requests;
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;unsigned&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;buffered:8;
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;unsigned&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;log_error:3;&#160;&#160;&#160;&#160;&#160;/* ngx_connection_log_error_e */
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;unsigned&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;single_connection:1;
    </p>
    <p>
      &#160;&#160;&#160;&#160;unsigned&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;unexpected_eof:1;
    </p>
    <p>
      &#160;&#160;&#160;&#160;unsigned&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;timedout:1;
    </p>
    <p>
      &#160;&#160;&#160;&#160;unsigned&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;error:1;
    </p>
    <p>
      &#160;&#160;&#160;&#160;unsigned&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;destroyed:1;
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;unsigned&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;idle:1;
    </p>
    <p>
      &#160;&#160;&#160;&#160;unsigned&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;close:1;
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;unsigned&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;sendfile:1;
    </p>
    <p>
      &#160;&#160;&#160;&#160;unsigned&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;sndlowat:1;
    </p>
    <p>
      &#160;&#160;&#160;&#160;unsigned&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;tcp_nodelay:2;&#160;&#160;&#160;/* ngx_connection_tcp_nodelay_e */
    </p>
    <p>
      &#160;&#160;&#160;&#160;unsigned&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;tcp_nopush:2;&#160;&#160;&#160;&#160;/* ngx_connection_tcp_nopush_e */
    </p>
    <p>
      &#160;&#160;&#160;&#160;...
    </p>
    <p>
      }
    </p>
  </body>
</html></richcontent>
</node>
</node>
<node CREATED="1389080781400" ID="ID_502036955" MODIFIED="1389082557027" TEXT="&#x64cd;&#x4f5c;&#x51fd;&#x6570;">
<node CREATED="1389080684894" FOLDED="true" ID="ID_1741429812" LINK="#ID_1693925617" MODIFIED="1389082694434" TEXT="ngx_get_connection">
<node CREATED="1389080728395" ID="ID_1346886923" MODIFIED="1389082595243">
<richcontent TYPE="NODE"><html>
  <head>
    
  </head>
  <body>
    <p>
      1&#12289;ngx_connection_t *ngx_get_connection(ngx_socket_t s, ngx_log_t *log);
    </p>
    <p>
      
    </p>
    <p>
      &#20174;cycle-&gt;connections&#38142;&#34920;&#20013;&#25688;&#21462;&#19968;&#20010;&#31354;&#38386;&#30340;&#36830;&#25509;&#32467;&#26500;&#21464;&#37327;&#24182;&#20462;&#25913;&#31354;&#38386;&#38142;&#65292;&#28982;&#21518;&#35774;&#32622;&#36830;&#25509;&#36164;&#28304;&#30340;&#35835;&#20889;&#20107;&#20214;&#30340;&#21021;&#22987;&#29366;&#24577;&#20449;&#24687;&#65307;
    </p>
  </body>
</html></richcontent>
</node>
</node>
<node CREATED="1389080908949" FOLDED="true" ID="ID_982627151" LINK="#ID_1397106292" MODIFIED="1389082693354" TEXT="ngx_close_connection">
<node CREATED="1389080787544" ID="ID_253358243" MODIFIED="1389082674982">
<richcontent TYPE="NODE"><html>
  <head>
    
  </head>
  <body>
    <p>
      2&#12289;void ngx_close_connection(ngx_connection_t *c);
    </p>
    <p>
      
    </p>
    <p>
      &#20851;&#38381;&#36830;&#25509;&#65292;&#39318;&#20808;&#28165;&#29702;&#36830;&#25509;&#19978;&#30340;&#35835;&#20889;&#20107;&#20214;&#65292;&#36825;&#21487;&#33021;&#20250;&#21024;&#38500;&#23450;&#26102;&#22120;&#12289;&#21024;&#38500;&#31561;&#24453;&#20107;&#20214;&#65292;&#28982;&#21518;&#37322;&#25918;&#36830;&#25509;&#36164;&#28304;&#65292;&#24182;&#20851;&#38381;&#36830;&#25509;&#23545;&#24212;&#30340;&#22871;&#25509;&#21475;&#65307;
    </p>
  </body>
</html></richcontent>
</node>
</node>
<node CREATED="1389080858663" FOLDED="true" ID="ID_1773264369" LINK="#ID_429337595" MODIFIED="1389082752553" TEXT="ngx_free_connection">
<node CREATED="1389080811624" ID="ID_1035688370" MODIFIED="1389082723191">
<richcontent TYPE="NODE"><html>
  <head>
    
  </head>
  <body>
    <p>
      3&#12289;void ngx_free_connection(ngx_connection_t *c);
    </p>
    <p>
      
    </p>
    <p>
      &#37322;&#25918;&#36830;&#25509;&#36164;&#28304;&#65292;&#25226;&#36830;&#25509;&#36164;&#28304;&#25918;&#22238;&#31354;&#38386;&#36830;&#25509;&#38142;&#34920;&#20013;&#12290;
    </p>
  </body>
</html></richcontent>
</node>
</node>
</node>
</node>
<node CREATED="1389082295120" ID="ID_92558679" MODIFIED="1389088248846" TEXT="ngx_event_s">
<node CREATED="1389080693298" FOLDED="true" ID="ID_545698639" MODIFIED="1389082937582" TEXT="&#x7ed3;&#x6784;&#x5206;&#x6790;">
<node CREATED="1389082303128" ID="ID_131084705" MODIFIED="1389082886134">
<richcontent TYPE="NODE"><html>
  <head>
    
  </head>
  <body>
    <p>
      &#20107;&#20214;&#32467;&#26500;&#20307;&#21253;&#21547;&#20102;&#23545;&#24212;&#30340;&#36830;&#25509;&#36164;&#28304;&#12289;&#20107;&#20214;&#22788;&#29702;&#20989;&#25968;&#21644;&#33509;&#24178;&#20107;&#20214;&#29366;&#24577;&#26631;&#24535;&#20301;&#31561;&#25104;&#21592;&#65306;
    </p>
    <p>
      
    </p>
    <p>
      struct ngx_event_s {
    </p>
    <p>
      &#160;&#160;&#160;&#160;void&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;*data; // ngx_conncection_t | ...
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;unsigned&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;write:1;
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;unsigned&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;accept:1;
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;/* used to detect the stale events in kqueue, rtsig, and epoll */
    </p>
    <p>
      &#160;&#160;&#160;&#160;unsigned&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;instance:1;
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;/*
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;* the event was passed or would be passed to a kernel;
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;* in aio mode - operation was posted.
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;*/
    </p>
    <p>
      &#160;&#160;&#160;&#160;unsigned&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;active:1;
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;unsigned&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;disabled:1;
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;/* the ready event; in aio mode 0 means that no operation can be posted */
    </p>
    <p>
      &#160;&#160;&#160;&#160;unsigned&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;ready:1;
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;unsigned&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;oneshot:1;
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;/* aio operation is complete */
    </p>
    <p>
      &#160;&#160;&#160;&#160;unsigned&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;complete:1;
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;unsigned&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;eof:1;
    </p>
    <p>
      &#160;&#160;&#160;&#160;unsigned&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;error:1;
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;unsigned&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;timedout:1;
    </p>
    <p>
      &#160;&#160;&#160;&#160;unsigned&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;timer_set:1;
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;unsigned&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;delayed:1;
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;unsigned&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;read_discarded:1;
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;unsigned&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;unexpected_eof:1;
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;unsigned&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;deferred_accept:1;
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;/* the pending eof reported by kqueue or in aio chain operation */
    </p>
    <p>
      &#160;&#160;&#160;&#160;unsigned&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;pending_eof:1;
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;...
    </p>
    <p>
      
    </p>
    <p>
      #if (NGX_HAVE_KQUEUE) || (NGX_HAVE_IOCP)
    </p>
    <p>
      &#160;&#160;&#160;&#160;int&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;available;
    </p>
    <p>
      #else
    </p>
    <p>
      &#160;&#160;&#160;&#160;unsigned&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;available:1;
    </p>
    <p>
      #endif
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;ngx_event_handler_pt&#160;&#160;handler;
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;...&#160;
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;ngx_uint_t&#160;&#160;&#160;&#160;&#160;&#160;&#160;index;
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;ngx_log_t&#160;&#160;&#160;&#160;&#160;&#160;&#160;*log;
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;ngx_rbtree_node_t&#160;&#160;&#160;timer;
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;unsigned&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;closed:1;
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;/* to test on worker exit */
    </p>
    <p>
      &#160;&#160;&#160;&#160;unsigned&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;channel:1;
    </p>
    <p>
      &#160;&#160;&#160;&#160;unsigned&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;resolver:1;
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;...
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;/* the links of the posted queue */
    </p>
    <p>
      &#160;&#160;&#160;&#160;ngx_event_t&#160;&#160;&#160;&#160;&#160;*next;
    </p>
    <p>
      &#160;&#160;&#160;&#160;ngx_event_t&#160;&#160;&#160;&#160;**prev;
    </p>
    <p>
      &#160;&#160;&#160;&#160;...
    </p>
    <p>
      }
    </p>
    <p>
      &#20851;&#20110;&#20107;&#20214;&#30340;&#20960;&#20010;&#25805;&#20316;&#25509;&#21475;&#23601;&#26159;&#21069;&#38754;&#21453;&#22797;&#25552;&#21040;&#36807;&#30340;10&#20010;actions&#38057;&#23376;&#65292;&#36825;&#20123;&#38057;&#23376;&#23553;&#35013;&#20102;&#19968;&#22871;&#20107;&#20214;&#39537;&#21160;&#30340;&#25509;&#21475;&#65292;&#19981;&#21516;&#30340;IO&#27169;&#22411;&#19981;&#21516;&#30340;&#23454;&#29616;&#26041;&#24335;
    </p>
  </body>
</html>
</richcontent>
</node>
</node>
<node CREATED="1389080781400" FOLDED="true" ID="ID_1027129987" MODIFIED="1389087080600" TEXT="epoll&#x64cd;&#x4f5c;&#x51fd;&#x6570;">
<node CREATED="1389080781400" FOLDED="true" ID="ID_1063652266" MODIFIED="1389084394243" TEXT="ngx_epoll_init">
<node CREATED="1389080728395" ID="ID_1671917710" MODIFIED="1389083591770">
<richcontent TYPE="NODE"><html>
  <head>
    
  </head>
  <body>
    <p>
      1&#12289;static ngx_int_t ngx_epoll_init(ngx_cycle_t *cycle, ngx_msec_t timer);
    </p>
    <p>
      
    </p>
    <p>
      init&#38057;&#23376;&#65292;&#21019;&#24314;&#19968;&#20010;epoll&#21477;&#26564;ep&#65292;&#25351;&#23450;&#22312;&#20854;&#19978;&#30340;&#30417;&#25511;&#22871;&#25509;&#23383;&#25968;&#37327;&#20026;&#27599;&#20010;worker&#26368;&#22823;&#36830;&#25509;&#25968;&#30340;&#19968;&#21322;&#65292;&#24182;&#20998;&#37197;&#36275;&#22815;&#30340;epoll_event&#32467;&#26500;&#25968;&#32452;event_list&#29992;&#20110;&#19982;&#20869;&#26680;&#38388;&#20256;&#36882;&#20107;&#20214;&#65292;&#25968;&#37327;nevents&#21487;&#20197;&#37197;&#32622;&#25991;&#20214;&#25351;&#23450;&#65292;&#40664;&#35748;&#20026;512&#65307;
    </p>
    <p>
      
    </p>
  </body>
</html>
</richcontent>
</node>
</node>
<node CREATED="1389080781400" FOLDED="true" ID="ID_596525694" MODIFIED="1389083831186" TEXT=" ngx_epoll_done">
<node CREATED="1389080728395" ID="ID_1099071634" MODIFIED="1389083532013">
<richcontent TYPE="NODE"><html>
  <head>
    
  </head>
  <body>
    <p>
      2&#12289;static void ngx_epoll_done(ngx_cycle_t *cycle);
    </p>
    <p>
      
    </p>
    <p>
      done&#38057;&#23376;&#65292;&#37322;&#25918;epoll&#21477;&#26564;&#36164;&#28304;&#21644;event_list&#65307;
    </p>
  </body>
</html></richcontent>
</node>
</node>
<node CREATED="1389080781400" FOLDED="true" ID="ID_540339760" MODIFIED="1389084395082" TEXT="ngx_epoll_add_event">
<node CREATED="1389080728395" ID="ID_1153898483" MODIFIED="1389083501114">
<richcontent TYPE="NODE"><html>
  <head>
    
  </head>
  <body>
    <p>
      3&#12289;static ngx_int_t ngx_epoll_add_event(ngx_event_t *ev, ngx_int_t event,
    </p>
    <p>
      &#160;&#160;&#160;&#160;ngx_uint_t flags);
    </p>
    <p>
      
    </p>
    <p>
      add &#21644;enable&#38057;&#23376;&#65292;&#35843;&#29992;epoll_ctl(ep, EPOLL_CTL_MOD/EPOLL_CTL_ADD, c-&gt;fd, &amp;ee)&#28155;&#21152;&#23545;&#36830;&#25509;&#22871;&#25509;&#21475;&#30340;&#35835;&#20107;&#20214;&#25110;&#32773;&#20889;&#20107;&#20214;&#30417;&#25511;&#65292;&#24182;&#19988;&#35774;&#32622;&#20107;&#20214;&#30340;&#29366;&#24577;&#20301;&#65306;ev-&gt;action = 1&#65292;&#24403;&#28155;&#21152;&#35835;&#20107;&#20214;&#30340;&#26102;&#20505;&#20250;&#21028;&#26029;&#20889;&#20107;&#20214;&#26159;&#21542;&#24050;&#32463;&#35774;&#32622;&#65288;wev-&gt;action=1?&#65289;&#65292;&#20174;&#32780;&#20915;&#23450;op&#26159;&#21542;&#20351;&#29992;EPOLL_CTL_MOD&#65292;&#28155;&#21152;&#20889;&#20107;&#20214; &#20063;&#35201;&#21028;&#26029;&#35835;&#20107;&#20214;&#30340;&#29366;&#24577;&#65307;
    </p>
  </body>
</html></richcontent>
</node>
</node>
<node CREATED="1389080781400" FOLDED="true" ID="ID_1934047575" MODIFIED="1389084395859" TEXT="ngx_epoll_del_event">
<node CREATED="1389080728395" ID="ID_891331617" MODIFIED="1389083477414">
<richcontent TYPE="NODE"><html>
  <head>
    
  </head>
  <body>
    <p>
      4&#12289;static ngx_int_t ngx_epoll_del_event(ngx_event_t *ev, ngx_int_t event,
    </p>
    <p>
      &#160;&#160;&#160;&#160;ngx_uint_t flags);
    </p>
    <p>
      
    </p>
    <p>
      del &#21644;disable&#38057;&#23376;&#65292;&#35843;&#29992;epoll_ctl(ep, EPOLL_CTL_MOD/EPOLL_CTL_DEL, c-&gt;fd, &amp;ee)&#21024;&#38500;&#23545;&#36830;&#25509;&#22871;&#25509;&#21475;&#30340;&#35835;&#20107;&#20214;&#25110;&#32773;&#20889;&#20107;&#20214;&#30340;&#30417;&#25511;&#65292;&#24182;&#19988;&#35774;&#32622;&#20107;&#20214;&#30340;&#29366;&#24577;&#20301;&#65306;ev-&gt;action = 0&#65292;&#24403;&#21024;&#38500;&#35835;&#20107;&#20214;&#30340;&#26102;&#20505;&#20250;&#21028;&#26029;&#20889;&#20107;&#20214;&#26159;&#21542;&#24050;&#32463;&#35774;&#32622;&#65288;wev-&gt;action=1?&#65289;&#65292;&#20174;&#32780;&#20915;&#23450;op&#26159;&#21542;&#20351;&#29992;EPOLL_CTL_MOD&#65292;&#21024;&#38500;&#20889;&#20107;&#20214; &#20063;&#35201;&#21028;&#26029;&#35835;&#20107;&#20214;&#30340;&#29366;&#24577;
    </p>
  </body>
</html>
</richcontent>
</node>
</node>
<node CREATED="1389080781400" FOLDED="true" ID="ID_1352445767" MODIFIED="1389084397075" TEXT="ngx_epoll_add_connection">
<node CREATED="1389080728395" ID="ID_1089126682" MODIFIED="1389083268383">
<richcontent TYPE="NODE"><html>
  <head>
    
  </head>
  <body>
    <p>
      5&#12289;static ngx_int_t ngx_epoll_add_connection(ngx_connection_t *c);
    </p>
    <p>
      
    </p>
    <p>
      add_conn&#38057;&#23376;&#65292;&#35843;&#29992;epoll_ctl(ep, EPOLL_CTL_ADD, c-&gt;fd, &amp;ee)&#21516;&#26102;&#28155;&#21152;&#23545;&#19968;&#26465;&#36830;&#25509;&#30340;&#35835;&#20889;&#20107;&#20214;&#30340;&#30417;&#25511;&#65292;&#24182;&#35774;&#32622;&#20854;&#35835;&#20889;&#20107;&#20214;&#30340;&#29366;&#24577;active = 1&#65307;
    </p>
    <p>
      
    </p>
  </body>
</html></richcontent>
</node>
</node>
<node CREATED="1389083333281" FOLDED="true" ID="ID_211497441" MODIFIED="1389084397858" TEXT="ngx_epoll_del_connection">
<node CREATED="1389080811624" ID="ID_128263472" MODIFIED="1389083095381">
<richcontent TYPE="NODE"><html>
  <head>
    
  </head>
  <body>
    <p>
      6&#12289;static ngx_int_t ngx_epoll_del_connection(ngx_connection_t *c,
    </p>
    <p>
      &#160;&#160;&#160;&#160;ngx_uint_t flags);
    </p>
    <p>
      
    </p>
    <p>
      del_conn&#38057;&#23376;&#65292;&#35843;&#29992;epoll_ctl(ep, EPOLL_CTL_DEL, c-&gt;fd, &amp;ee)&#21516;&#26102;&#21024;&#38500;&#23545;&#19968;&#26465;&#36830;&#25509;&#30340;&#35835;&#20889;&#20107;&#20214;&#30340;&#30417;&#25511;&#65292;&#24182;&#35774;&#32622;&#20854;&#35835;&#20889;&#20107;&#20214;&#30340;&#29366;&#24577;active = 0&#65307;
    </p>
  </body>
</html></richcontent>
</node>
</node>
<node CREATED="1389083356719" FOLDED="true" ID="ID_18578350" MODIFIED="1389084398655" TEXT="ngx_epoll_process_events">
<node CREATED="1389080787544" ID="ID_1803542907" MODIFIED="1389082962080">
<richcontent TYPE="NODE"><html>
  <head>
    
  </head>
  <body>
    <p>
      7&#12289;static ngx_int_t ngx_epoll_process_events(ngx_cycle_t *cycle, ngx_msec_t timer,
    </p>
    <p>
      &#160;&#160;&#160;&#160;ngx_uint_t flags);
    </p>
    <p>
      
    </p>
    <p>
      process_events &#38057;&#23376;&#65292;&#35843;&#29992;events = epoll_wait(ep, event_list, (int) nevents, timer)&#36718;&#35810;&#20107;&#20214;&#65292;&#36229;&#26102;&#20540;&#20026;timer&#65292;&#20107;&#20214;&#23384;&#25918;&#20110;event_list&#25968;&#32452;&#20013;&#65292;&#26368;&#22823;&#25968;&#37327;&#20026;nevents&#12290;&#23545;&#20110;&#21457;&#29983;&#30340;&#35835;&#20107;&#20214;&#65292;&#33509;flags&#20013;&#32622;&#20301;&#20102; NGX_POST_EVENTS&#65292;&#20877;&#26681;&#25454;&#34987;&#30417;&#25511;&#30340;&#22871;&#25509;&#21475;&#26159;&#30417;&#21548;&#22871;&#25509;&#21475;&#36824;&#26159;&#25968;&#25454;&#22871;&#25509;&#21475;&#20915;&#23450;&#26242;&#26102;&#25237;&#36882;&#21040;&#20107;&#20214;&#38431;&#21015; ngx_posted_accept_events&#36824;&#26159;ngx_posted_events&#31561;&#24453;&#36827;&#31243;&#22788;&#29702;&#65292;&#21542;&#21017;&#23601;&#30452;&#25509;&#35843;&#29992;&#20107;&#20214;&#22788;&#29702;&#20989;&#25968; rev-&gt;handler&#22788;&#29702;&#20107;&#20214;&#65307;&#23545;&#20110;&#21457;&#29983;&#30340;&#20889;&#20107;&#20214;&#65292;&#33509;flags&#32622;&#20301;&#20102;NGX_POST_EVENTS&#65292;&#25237;&#36882;&#21040;&#20107;&#20214;&#38431;&#21015; ngx_posted_events&#31561;&#24453;&#22788;&#29702;&#65292;&#21542;&#21017;&#23601;&#30452;&#25509;&#35843;&#29992;&#20107;&#20214;&#22788;&#29702;&#20989;&#25968;wev-&gt;handler&#22788;&#29702;&#20107;&#20214;&#12290;
    </p>
  </body>
</html></richcontent>
</node>
</node>
</node>
<node CREATED="1389083923064" FOLDED="true" ID="ID_604673369" LINK="#ID_1262072544" MODIFIED="1389088413758" TEXT="ngx_epoll_module_ctx">
<node CREATED="1389083929172" ID="ID_664627156" MODIFIED="1389083943804">
<richcontent TYPE="NODE"><html>
  <head>
    
  </head>
  <body>
    <p>
      ngx_event_module_t&#160;&#160;ngx_epoll_module_ctx = {
    </p>
    <p>
      &#160;&#160;&#160;&#160;&amp;epoll_name,
    </p>
    <p>
      &#160;&#160;&#160;&#160;ngx_epoll_create_conf,&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;/* create configuration */
    </p>
    <p>
      &#160;&#160;&#160;&#160;ngx_epoll_init_conf,&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;/* init configuration */
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;{
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;ngx_epoll_add_event,&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;/* add an event */
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;ngx_epoll_del_event,&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;/* delete an event */
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;ngx_epoll_add_event,&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;/* enable an event */
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;ngx_epoll_del_event,&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;/* disable an event */
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;ngx_epoll_add_connection,&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;/* add an connection */
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;ngx_epoll_del_connection,&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;/* delete an connection */
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;NULL,&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;/* process the changes */
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;ngx_epoll_process_events,&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;/* process the events */
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;ngx_epoll_init,&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;/* init the events */
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;ngx_epoll_done,&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;/* done the events */
    </p>
    <p>
      &#160;&#160;&#160;&#160;}
    </p>
    <p>
      };
    </p>
  </body>
</html>
</richcontent>
</node>
</node>
<node BACKGROUND_COLOR="#9c7b7b" CREATED="1389084135274" FOLDED="true" ID="ID_1871189453" LINK="#ID_552558133" MODIFIED="1389088534324" TEXT="ngx_event_core_module">
<node CREATED="1389084139984" ID="ID_1907965041" MODIFIED="1389084669333">
<richcontent TYPE="NODE"><html>
  <head>
    
  </head>
  <body>
    <p>
      ngx_module_t&#160;&#160;ngx_event_core_module = {
    </p>
    <p>
      &#160;&#160;&#160;&#160;NGX_MODULE_V1,
    </p>
    <p>
      &#160;&#160;&#160;&#160;&amp;ngx_event_core_module_ctx,&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;/* module context */
    </p>
    <p>
      &#160;&#160;&#160;&#160;ngx_event_core_commands,&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;/* module directives */
    </p>
    <p>
      &#160;&#160;&#160;&#160;NGX_EVENT_MODULE,&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;/* module type */
    </p>
    <p>
      &#160;&#160;&#160;&#160;NULL,&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;/* init master */
    </p>
    <p>
      &#160;&#160;&#160;&#160;ngx_event_module_init,&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;/* init module */
    </p>
    <p>
      &#160;&#160;&#160;&#160;<font color="#f70404">ngx_event_process_init</font>,&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;/* init process */
    </p>
    <p>
      &#160;&#160;&#160;&#160;NULL,&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;/* init thread */
    </p>
    <p>
      &#160;&#160;&#160;&#160;NULL,&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;/* exit thread */
    </p>
    <p>
      &#160;&#160;&#160;&#160;NULL,&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;/* exit process */
    </p>
    <p>
      &#160;&#160;&#160;&#160;NULL,&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;/* exit master */
    </p>
    <p>
      &#160;&#160;&#160;&#160;NGX_MODULE_V1_PADDING
    </p>
    <p>
      };
    </p>
  </body>
</html>
</richcontent>
</node>
<node CREATED="1389084640567" ID="ID_1167452659" MODIFIED="1389084642538" TEXT="ngx_event_process_init">
<node CREATED="1389084519801" ID="ID_607686762" LINK="#ID_281294392" MODIFIED="1389084784825" TEXT="ngx_event_accept"/>
</node>
</node>
<node BACKGROUND_COLOR="#9c7b7b" CREATED="1389087106865" FOLDED="true" ID="ID_1336422711" MODIFIED="1389088530629" TEXT="ngx_events_module">
<node CREATED="1389088285082" FOLDED="true" ID="ID_824770665" MODIFIED="1389088529292" TEXT="ngx_events_commands">
<node CREATED="1389088290682" ID="ID_257180594" LINK="#ID_1463245406" MODIFIED="1389088503998">
<richcontent TYPE="NODE"><html>
  <head>
    
  </head>
  <body>
    <p>
      static ngx_command_t&#160;&#160;ngx_events_commands[] = {
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;{ ngx_string(&quot;events&quot;),
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;NGX_MAIN_CONF|NGX_CONF_BLOCK|NGX_CONF_NOARGS,
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;<font color="#f60909">ngx_events_block</font>,
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;0,
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;0,
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;NULL },
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;ngx_null_command
    </p>
    <p>
      };
    </p>
  </body>
</html>
</richcontent>
</node>
</node>
<node CREATED="1389088339104" ID="ID_1593217833" MODIFIED="1389088375313">
<richcontent TYPE="NODE"><html>
  <head>
    
  </head>
  <body>
    <p>
      ngx_module_t&#160;&#160;ngx_events_module = {
    </p>
    <p>
      &#160;&#160;&#160;&#160;NGX_MODULE_V1,
    </p>
    <p>
      &#160;&#160;&#160;&#160;&amp;ngx_events_module_ctx,&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;/* module context */
    </p>
    <p>
      &#160;&#160;&#160;&#160;<font color="#fc0b0b">ngx_events_commands</font>,&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;/* module directives */
    </p>
    <p>
      &#160;&#160;&#160;&#160;NGX_CORE_MODULE,&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;/* module type */
    </p>
    <p>
      &#160;&#160;&#160;&#160;NULL,&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;/* init master */
    </p>
    <p>
      &#160;&#160;&#160;&#160;NULL,&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;/* init module */
    </p>
    <p>
      &#160;&#160;&#160;&#160;NULL,&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;/* init process */
    </p>
    <p>
      &#160;&#160;&#160;&#160;NULL,&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;/* init thread */
    </p>
    <p>
      &#160;&#160;&#160;&#160;NULL,&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;/* exit thread */
    </p>
    <p>
      &#160;&#160;&#160;&#160;NULL,&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;/* exit process */
    </p>
    <p>
      &#160;&#160;&#160;&#160;NULL,&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;/* exit master */
    </p>
    <p>
      &#160;&#160;&#160;&#160;NGX_MODULE_V1_PADDING
    </p>
    <p>
      };
    </p>
  </body>
</html>
</richcontent>
</node>
</node>
</node>
</node>
</node>
<node CREATED="1389081320591" ID="ID_1238390016" MODIFIED="1389082689207" POSITION="right" TEXT="ngx_http_block">
<node CREATED="1389081514663" ID="ID_525344956" MODIFIED="1389081601261" TEXT="ngx_http_optimize_servers">
<node CREATED="1389081531098" ID="ID_1349804929" MODIFIED="1389081590302" TEXT="ngx_http_init_listening">
<node CREATED="1389081652031" ID="ID_1224372124" MODIFIED="1389081784382" TEXT="ngx_http_add_listening">
<node CREATED="1389081664072" ID="ID_1397106292" LINK="#ID_866878198" MODIFIED="1389081813702" TEXT="ngx_create_listening"/>
</node>
</node>
<node CREATED="1389081618658" ID="ID_1014114556" MODIFIED="1389081620094" TEXT="ngx_http_optimize_servers"/>
</node>
</node>
<node CREATED="1389088130079" ID="ID_1463245406" LINK="#ID_257180594" MODIFIED="1389088584958" POSITION="right" TEXT="ngx_events_block">
<node CREATED="1389088145645" ID="ID_260480348" MODIFIED="1389088744250">
<richcontent TYPE="NODE"><html>
  <head>
    
  </head>
  <body>
    <p>
      static char *
    </p>
    <p>
      ngx_events_block(ngx_conf_t *cf, ngx_command_t *cmd, void *conf)
    </p>
    <p>
      {
    </p>
    <p>
      &#160;&#160;&#160;&#160;char&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;*rv;
    </p>
    <p>
      &#160;&#160;&#160;&#160;void&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;***ctx;
    </p>
    <p>
      &#160;&#160;&#160;&#160;ngx_uint_t&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;i;
    </p>
    <p>
      &#160;&#160;&#160;&#160;ngx_conf_t&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;pcf;
    </p>
    <p>
      &#160;&#160;&#160;&#160;ngx_event_module_t&#160;&#160;&#160;*m;
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;/* count the number of the event modules and set up their indices */
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;// &#23545;event&#31867;&#27169;&#22359;&#28857;&#19968;&#19979;&#25968;
    </p>
    <p>
      &#160;&#160;&#160;&#160;ngx_event_max_module = 0;
    </p>
    <p>
      &#160;&#160;&#160;&#160;for (i = 0; ngx_modules[i]; i++) {
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if (ngx_modules[i]-&gt;type != NGX_EVENT_MODULE) {
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;continue;
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;}
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;<font color="#fc0707">&#160;ngx_modules[i]-&gt;ctx_index = ngx_event_max_module++;</font>
    </p>
    <p>
      &#160;&#160;&#160;&#160;}
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;ctx = ngx_pcalloc(cf-&gt;pool, sizeof(void *));
    </p>
    <p>
      &#160;&#160;&#160;&#160;if (ctx == NULL) {
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;return NGX_CONF_ERROR;
    </p>
    <p>
      &#160;&#160;&#160;&#160;}
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;*ctx = ngx_pcalloc(cf-&gt;pool, ngx_event_max_module * sizeof(void *));
    </p>
    <p>
      &#160;&#160;&#160;&#160;if (*ctx == NULL) {
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;return NGX_CONF_ERROR;
    </p>
    <p>
      &#160;&#160;&#160;&#160;}
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;*(void **) conf = ctx;
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;// &#35843;&#29992;&#25152;&#26377;event&#31867;&#27169;&#22359;&#30340;create_conf&#38057;&#23376;&#65292;&#21019;&#24314;&#37197;&#32622;&#32467;&#26500;&#65292;&#36825;&#20123;&#37197;&#32622;&#32467;&#26500;&#24418;&#25104;&#19968;&#20010;&#25968;&#32452;
    </p>
    <p>
      &#160;&#160;&#160;&#160;// &#36825;&#20010;&#25968;&#32452;&#30340;&#25351;&#38024;&#26368;&#32456;&#20250;&#36171;&#32473;cycle-&gt;conf_ctx&#65292;&#36825;&#26159;&#19968;&#20010;void ****&#25351;&#38024;&#65292;&#21487;&#20197;&#25226;&#25152;&#26377;
    </p>
    <p>
      &#160;&#160;&#160;&#160;// &#27169;&#22359;&#30340;&#37197;&#32622;&#32467;&#26500;&#26377;&#23618;&#27425;&#30340;&#20445;&#23384;&#19979;&#26469;
    </p>
    <p>
      &#160;&#160;&#160;&#160;for (i = 0; ngx_modules[i]; i++) {
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if (ngx_modules[i]-&gt;type != NGX_EVENT_MODULE) {
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;continue;
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;}
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;m = ngx_modules[i]-&gt;ctx;
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if (m-&gt;create_conf) {
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<font color="#f70404">(*ctx)[ngx_modules[i]-&gt;ctx_index] = m-&gt;create_conf(cf-&gt;cycle);</font>
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if ((*ctx)[ngx_modules[i]-&gt;ctx_index] == NULL) {
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;return NGX_CONF_ERROR;
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;}
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;}
    </p>
    <p>
      &#160;&#160;&#160;&#160;}
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;pcf = *cf;
    </p>
    <p>
      &#160;&#160;&#160;&#160;cf-&gt;ctx = ctx;
    </p>
    <p>
      &#160;&#160;&#160;&#160;cf-&gt;module_type = NGX_EVENT_MODULE;
    </p>
    <p>
      &#160;&#160;&#160;&#160;cf-&gt;cmd_type = NGX_EVENT_CONF;
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;// &#35299;&#26512;&#8220;events {}&#8221;&#22359;&#20013;&#30340;&#25351;&#20196;&#38598;
    </p>
    <p>
      &#160;&#160;&#160;&#160;<font color="#f10505">rv = ngx_conf_parse(cf, NULL);</font>
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;*cf = pcf;
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;if (rv != NGX_CONF_OK)
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;return rv;
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;// &#35843;&#29992;&#27599;&#20010;event&#31867;&#27169;&#22359;&#30340;init_conf&#38057;&#23376;&#65292;&#21021;&#22987;&#21270;&#37197;&#32622;&#32467;&#26500;&#65292;&#36825;&#20123;&#37197;&#32622;&#32467;&#26500;&#26377;&#20123;&#24050;&#32463;&#22312;&#35299;&#26512;&#25351;&#20196;&#30340;&#26102;&#20505;&#34987;
    </p>
    <p>
      &#160;&#160;&#160;&#160;// &#22635;&#20805;&#65292;&#36825;&#37324;&#20027;&#35201;&#26159;&#22788;&#29702;&#37027;&#20123;&#36824;&#27809;&#26377;&#34987;&#25351;&#20196;&#22635;&#20805;&#65292;&#25110;&#32773;&#22635;&#20805;&#30340;&#26377;&#38382;&#39064;&#30340;&#37027;&#20123;
    </p>
    <p>
      &#160;&#160;&#160;&#160;for (i = 0; ngx_modules[i]; i++) {
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if (ngx_modules[i]-&gt;type != NGX_EVENT_MODULE) {
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;continue;
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;}
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;m = ngx_modules[i]-&gt;ctx;
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if (m-&gt;init_conf) {
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<font color="#f80303">rv = m-&gt;init_conf(cf-&gt;cycle, (*ctx)[ngx_modules[i]-&gt;ctx_index]);</font>
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if (rv != NGX_CONF_OK) {
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;return rv;
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;}
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;}
    </p>
    <p>
      &#160;&#160;&#160;&#160;}
    </p>
    <p>
      
    </p>
    <p>
      &#160;&#160;&#160;&#160;return NGX_CONF_OK;
    </p>
    <p>
      }
    </p>
  </body>
</html>
</richcontent>
</node>
</node>
<node CREATED="1389084519801" ID="ID_281294392" LINK="#ID_607686762" MODIFIED="1389088578137" POSITION="right" TEXT="ngx_event_accept">
<node CREATED="1389084532642" ID="ID_994346046" MODIFIED="1389084539986">
<richcontent TYPE="NODE"><html>
  <head>
    
  </head>
  <body>
    <p>
      &#25105;&#20204;&#20808;&#20998;&#26512;&#19968;&#19979;&#30417;&#21548;&#22871;&#25509;&#21475;&#30340;&#20107;&#20214;&#22788;&#29702;&#20989;&#25968;ngx_event_accept&#12290;&#24403;&#30417;&#21548;&#22871;&#25509;&#21475;&#19978;&#21457;&#29983;&#35835;&#20107;&#20214;&#30340;&#26102;&#20505;&#65292;&#23601;&#20250;&#35843;&#29992; ngx_event_accept&#22788;&#29702;&#36825;&#20010;&#20107;&#20214;&#65292;&#36825;&#20010;&#20989;&#25968;&#35843;&#29992;accept&#33719;&#21462;&#24050;&#36830;&#25509;&#30340;&#25968;&#25454;&#22871;&#25509;&#21475;&#65292;&#20026;&#33719;&#24471;&#30340;&#22871;&#25509;&#21475;&#20998;&#37197;&#36830;&#25509;&#36164;&#28304;&#21644;&#35835;&#20889;&#20107;&#20214;&#36164;&#28304;&#65292;&#20026;&#27599;&#20010;&#26032; &#21019;&#24314;&#30340;&#36830;&#25509;&#36164;&#28304;&#21019;&#24314;&#19968;&#20010;&#20869;&#23384;&#27744;&#29992;&#20110;&#20043;&#21518;&#30340;&#25968;&#25454;&#22788;&#29702;&#65292;&#25509;&#19979;&#26469;&#21021;&#22987;&#21270;&#36830;&#25509;&#36164;&#28304;&#21644;&#35835;&#20889;&#20107;&#20214;&#36164;&#28304;&#30340;&#29366;&#24577;&#65292;&#26368;&#21518;&#35843;&#29992;add_conn&#38057;&#23376;&#28155;&#21152;&#23545;&#35835;&#20889;&#20107;&#20214;&#30340;&#30417;&#25511;&#12290;
    </p>
  </body>
</html></richcontent>
</node>
</node>
</node>
</map>
